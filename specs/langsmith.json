{
  "openapi": "3.1.0",
  "info": {
    "title": "LangSmith",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/sessions/{session_id}": {
      "get": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Read Tracer Session",
        "description": "Get a specific session.",
        "operationId": "read_tracer_session_api_v1_sessions__session_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "include_stats",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Include Stats"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TracerSession"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Update Tracer Session",
        "description": "Create a new session.",
        "operationId": "update_tracer_session_api_v1_sessions__session_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TracerSessionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TracerSessionWithoutVirtualFields"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Delete Tracer Session",
        "description": "Delete a specific session.",
        "operationId": "delete_tracer_session_api_v1_sessions__session_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions": {
      "get": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Read Tracer Sessions",
        "description": "Get all sessions.",
        "operationId": "read_tracer_sessions_api_v1_sessions_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "reference_free",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reference Free"
            }
          },
          {
            "name": "reference_dataset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Reference Dataset"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "dataset_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset Version"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SessionSortableColumns"
                }
              ],
              "default": "start_time",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          },
          {
            "name": "sort_by_feedback_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By Feedback Key"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "facets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Facets"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TracerSession"
                  },
                  "title": "Response Read Tracer Sessions Api V1 Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Create Tracer Session",
        "description": "Create a new session.",
        "operationId": "create_tracer_session_api_v1_sessions_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "upsert",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Upsert"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TracerSessionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TracerSessionWithoutVirtualFields"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Delete Tracer Sessions",
        "description": "Delete a specific session.",
        "operationId": "delete_tracer_sessions_api_v1_sessions_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "title": "Session Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sessions/{session_id}/metadata": {
      "get": {
        "tags": [
          "tracer-sessions"
        ],
        "summary": "Read Tracer Sessions Runs Metadata",
        "description": "Given a session, a number K, and (optionally) a list of metadata keys, return the top K values for each key.",
        "operationId": "read_tracer_sessions_runs_metadata_api_v1_sessions__session_id__metadata_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Session Id"
            }
          },
          {
            "name": "metadata_keys",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata Keys"
            }
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Start Time"
            }
          },
          {
            "name": "k",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "title": "K"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootModel_Dict_str__list_str___"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/current/setup": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create Customers And Get Stripe Setup Intent",
        "operationId": "create_customers_and_get_stripe_setup_intent_api_v1_orgs_current_setup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StripeSetupIntentResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Organization Info",
        "operationId": "get_organization_info_api_v1_orgs_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organization"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/dashboard": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "Get Dashboard",
        "operationId": "get_dashboard_api_v1_orgs_current_dashboard_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrganizationDashboardType"
            }
          },
          {
            "name": "color_scheme",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/OrganizationDashboardColorScheme"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Color Scheme"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDashboardSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/current/payment-method": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "On Payment Method Created",
        "operationId": "on_payment_method_created_api_v1_orgs_current_payment_method_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StripePaymentInformation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/plan": {
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Change Payment Plan",
        "operationId": "change_payment_plan_api_v1_orgs_current_plan_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePaymentPlanSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/roles": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "List Organization Roles",
        "operationId": "list_organization_roles_api_v1_orgs_current_roles_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrganizationRole"
                  },
                  "type": "array",
                  "title": "Response List Organization Roles Api V1 Orgs Current Roles Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "summary": "Create Organization Roles",
        "operationId": "create_organization_roles_api_v1_orgs_current_roles_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRole"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/orgs/current/roles/{role_id}": {
      "delete": {
        "tags": [
          "orgs"
        ],
        "summary": "Delete Organization Roles",
        "operationId": "delete_organization_roles_api_v1_orgs_current_roles__role_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRole"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "orgs"
        ],
        "summary": "Update Organization Roles",
        "operationId": "update_organization_roles_api_v1_orgs_current_roles__role_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Role Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationRole"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/permissions": {
      "get": {
        "tags": [
          "orgs"
        ],
        "summary": "List Permissions",
        "operationId": "list_permissions_api_v1_orgs_permissions_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PermissionResponse"
                  },
                  "type": "array",
                  "title": "Response List Permissions Api V1 Orgs Permissions Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_api_v1_login_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicAuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-key": {
      "get": {
        "tags": [
          "api-key"
        ],
        "summary": "Get Api Keys",
        "description": "Get the current tenant's API keys",
        "operationId": "get_api_keys_api_v1_api_key_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/APIKeyGetResponse"
                  },
                  "type": "array",
                  "title": "Response Get Api Keys Api V1 Api Key Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "api-key"
        ],
        "summary": "Generate Api Key",
        "description": "Generate an api key for the user",
        "operationId": "generate_api_key_api_v1_api_key_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/APIKeyCreateRequest"
                  }
                ],
                "title": "Payload",
                "default": {
                  "description": "Default API key",
                  "read_only": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/api-key/{api_key_id}": {
      "delete": {
        "tags": [
          "api-key"
        ],
        "summary": "Delete Api Key",
        "description": "Delete an api key for the user",
        "operationId": "delete_api_key_api_v1_api_key__api_key_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "api_key_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Api Key Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyGetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api-key/current": {
      "get": {
        "tags": [
          "api-key"
        ],
        "summary": "Get Personal Access Tokens",
        "description": "Get the current users PATs for this tenant",
        "operationId": "get_personal_access_tokens_api_v1_api_key_current_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/APIKeyGetResponse"
                  },
                  "type": "array",
                  "title": "Response Get Personal Access Tokens Api V1 Api Key Current Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "api-key"
        ],
        "summary": "Generate Personal Access Token",
        "description": "Generate a Personal Access Token the user",
        "operationId": "generate_personal_access_token_api_v1_api_key_current_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/APIKeyCreateRequest"
                  }
                ],
                "title": "Payload",
                "default": {
                  "description": "Default API key",
                  "read_only": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyCreateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/api-key/current/{pat_id}": {
      "delete": {
        "tags": [
          "api-key"
        ],
        "summary": "Delete Personal Access Token",
        "description": "Delete a Personal Access Token for the user",
        "operationId": "delete_personal_access_token_api_v1_api_key_current__pat_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "pat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Pat Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIKeyGetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/examples/{example_id}": {
      "get": {
        "tags": [
          "examples"
        ],
        "summary": "Read Example",
        "description": "Get a specific example.",
        "operationId": "read_example_api_v1_examples__example_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Example Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Example"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "examples"
        ],
        "summary": "Update Example",
        "description": "Update a specific example.",
        "operationId": "update_example_api_v1_examples__example_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Example Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExampleUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "examples"
        ],
        "summary": "Delete Example",
        "description": "Delete a specific example.",
        "operationId": "delete_example_api_v1_examples__example_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "example_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Example Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/examples": {
      "get": {
        "tags": [
          "examples"
        ],
        "summary": "Read Examples",
        "description": "Get all examples by query params",
        "operationId": "read_examples_api_v1_examples_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          },
          {
            "name": "metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          {
            "name": "full_text_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Full Text Contains"
            }
          },
          {
            "name": "splits",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Splits"
            }
          },
          {
            "name": "dataset",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ExampleListOrder"
                }
              ],
              "default": "recent",
              "title": "Order"
            }
          },
          {
            "name": "random_seed",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Random Seed"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExampleSelect"
              },
              "default": [
                "id",
                "created_at",
                "modified_at",
                "name",
                "dataset_id",
                "source_run_id",
                "metadata",
                "inputs",
                "outputs"
              ],
              "title": "Select"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  },
                  "title": "Response Read Examples Api V1 Examples Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "examples"
        ],
        "summary": "Create Example",
        "description": "Create a new example.",
        "operationId": "create_example_api_v1_examples_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExampleCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Example"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "examples"
        ],
        "summary": "Delete Examples",
        "description": "Delete a specific set of examples.",
        "operationId": "delete_examples_api_v1_examples_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "example_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "title": "Example Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/examples/bulk": {
      "post": {
        "tags": [
          "examples"
        ],
        "summary": "Create Examples",
        "description": "Create a new example.",
        "operationId": "create_examples_api_v1_examples_bulk_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/ExampleBulkCreate"
                },
                "type": "array",
                "title": "Examples"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  },
                  "type": "array",
                  "title": "Response Create Examples Api V1 Examples Bulk Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/examples/upload/{dataset_id}": {
      "post": {
        "tags": [
          "examples"
        ],
        "summary": "Upload Examples",
        "description": "Create a new example.",
        "operationId": "upload_examples_api_v1_examples_upload__dataset_id__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_examples_api_v1_examples_upload__dataset_id__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  },
                  "title": "Response Upload Examples Api V1 Examples Upload  Dataset Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Dataset",
        "description": "Get a specific dataset.",
        "operationId": "read_dataset_api_v1_datasets__dataset_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete Dataset",
        "description": "Delete a specific dataset.",
        "operationId": "delete_dataset_api_v1_datasets__dataset_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset",
        "description": "Update a specific dataset.",
        "operationId": "update_dataset_api_v1_datasets__dataset_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetSchemaForUpdate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Datasets",
        "description": "Get all datasets by query params and owner.",
        "operationId": "read_datasets_api_v1_datasets_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "data_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/DataType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Data Type"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortByDatasetColumn"
                }
              ],
              "default": "last_session_start_time",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Dataset"
                  },
                  "title": "Response Read Datasets Api V1 Datasets Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Create Dataset",
        "description": "Create a new dataset.",
        "operationId": "create_dataset_api_v1_datasets_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/upload": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Upload Csv Dataset",
        "description": "Create a new dataset from a CSV file.",
        "operationId": "upload_csv_dataset_api_v1_datasets_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_csv_dataset_api_v1_datasets_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/datasets/{dataset_id}/versions": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Versions",
        "description": "Get dataset versions.",
        "operationId": "get_dataset_versions_api_v1_datasets__dataset_id__versions_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Search"
            }
          },
          {
            "name": "example",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Example"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DatasetVersion"
                  },
                  "title": "Response Get Dataset Versions Api V1 Datasets  Dataset Id  Versions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/versions/diff": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Diff Dataset Versions",
        "description": "Get diff between two dataset versions.",
        "operationId": "diff_dataset_versions_api_v1_datasets__dataset_id__versions_diff_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "from_version",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "title": "From Version"
            }
          },
          {
            "name": "to_version",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "title": "To Version"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetDiffInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/version": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Version",
        "description": "Get dataset version by as_of or exact tag.",
        "operationId": "get_dataset_version_api_v1_datasets__dataset_id__version_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "title": "As Of"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetVersion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/tags": {
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset Version",
        "description": "Set a tag on a dataset version.",
        "operationId": "update_dataset_version_api_v1_datasets__dataset_id__tags_put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutDatasetVersionsSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetVersion"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/openai": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download Dataset Openai",
        "description": "Download a dataset as OpenAI Evals Jsonl format.",
        "operationId": "download_dataset_openai_api_v1_datasets__dataset_id__openai_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/openai_ft": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download Dataset Openai Ft",
        "description": "Download a dataset as OpenAI Jsonl format.",
        "operationId": "download_dataset_openai_ft_api_v1_datasets__dataset_id__openai_ft_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/csv": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Download Dataset Csv",
        "description": "Download a dataset as CSV format.",
        "operationId": "download_dataset_csv_api_v1_datasets__dataset_id__csv_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/runs": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Examples With Runs",
        "description": "Fetch examples for a dataset, and fetch the runs for each example if they are associated with the given session_ids.",
        "operationId": "read_examples_with_runs_api_v1_datasets__dataset_id__runs_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryExampleSchemaWithRuns"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExampleWithRuns"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExampleWithRunsCH"
                      }
                    }
                  ],
                  "title": "Response Read Examples With Runs Api V1 Datasets  Dataset Id  Runs Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/runs/delta": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Delta",
        "description": "Fetch the number of regressions/improvements for each example in a dataset, between sessions[0] and sessions[1].",
        "operationId": "read_delta_api_v1_datasets__dataset_id__runs_delta_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryFeedbackDelta"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionFeedbackDelta"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/share": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Dataset Share State",
        "description": "Get the state of sharing a dataset",
        "operationId": "read_dataset_share_state_api_v1_datasets__dataset_id__share_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DatasetShareSchema"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Read Dataset Share State Api V1 Datasets  Dataset Id  Share Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Share Dataset",
        "description": "Share a dataset.",
        "operationId": "share_dataset_api_v1_datasets__dataset_id__share_put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "share_projects",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Share Projects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetShareSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Unshare Dataset",
        "description": "Unshare a dataset.",
        "operationId": "unshare_dataset_api_v1_datasets__dataset_id__share_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/{dataset_id}/comparative": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Read Comparative Experiments",
        "description": "Get all comparative experiments for a given dataset.",
        "operationId": "read_comparative_experiments_api_v1_datasets__dataset_id__comparative_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortByComparativeExperimentColumn"
                }
              ],
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ComparativeExperiment"
                  },
                  "title": "Response Read Comparative Experiments Api V1 Datasets  Dataset Id  Comparative Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/comparative": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Create Comparative Experiment",
        "description": "Create a comparative experiment.",
        "operationId": "create_comparative_experiment_api_v1_datasets_comparative_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComparativeExperimentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComparativeExperimentBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/datasets/comparative/{comparative_experiment_id}": {
      "delete": {
        "tags": [
          "datasets"
        ],
        "summary": "Delete Comparative Experiment",
        "description": "Delete a specific comparative experiment.",
        "operationId": "delete_comparative_experiment_api_v1_datasets_comparative__comparative_experiment_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "comparative_experiment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Comparative Experiment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/datasets/clone": {
      "post": {
        "tags": [
          "datasets"
        ],
        "summary": "Clone Dataset",
        "description": "Clone a dataset.",
        "operationId": "clone_dataset_api_v1_datasets_clone_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_clone_dataset_api_v1_datasets_clone_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  },
                  "type": "array",
                  "title": "Response Clone Dataset Api V1 Datasets Clone Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/datasets/{dataset_id}/splits": {
      "get": {
        "tags": [
          "datasets"
        ],
        "summary": "Get Dataset Splits",
        "operationId": "get_dataset_splits_api_v1_datasets__dataset_id__splits_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Get Dataset Splits Api V1 Datasets  Dataset Id  Splits Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "datasets"
        ],
        "summary": "Update Dataset Splits",
        "operationId": "update_dataset_splits_api_v1_datasets__dataset_id__splits_put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_dataset_splits_api_v1_datasets__dataset_id__splits_put"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "title": "Response Update Dataset Splits Api V1 Datasets  Dataset Id  Splits Put"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "List Rules",
        "description": "List all run rules.",
        "operationId": "list_rules_api_v1_runs_rules_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "dataset_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset Id"
            }
          },
          {
            "name": "session_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunRulesSchema"
                  },
                  "title": "Response List Rules Api V1 Runs Rules Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Create Rule",
        "description": "Create a new run rule.",
        "operationId": "create_rule_api_v1_runs_rules_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunRulesCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunRulesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}": {
      "patch": {
        "tags": [
          "run"
        ],
        "summary": "Update Rule",
        "description": "Update a run rule.",
        "operationId": "update_rule_api_v1_runs_rules__rule_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunRulesCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunRulesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "run"
        ],
        "summary": "Delete Rule",
        "description": "Delete a run rule.",
        "operationId": "delete_rule_api_v1_runs_rules__rule_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}/logs": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "List Rule Logs",
        "description": "List logs for a particular rule",
        "operationId": "list_rule_logs_api_v1_runs_rules__rule_id__logs_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1440,
              "minimum": 100,
              "default": 720,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RuleLogSchema"
                  },
                  "title": "Response List Rule Logs Api V1 Runs Rules  Rule Id  Logs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/rules/{rule_id}/trigger": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Trigger Rule",
        "description": "Trigger a run rule manually.",
        "operationId": "trigger_rule_api_v1_runs_rules__rule_id__trigger_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunRulesSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/{run_id}": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "Read Run",
        "description": "Get a specific run.",
        "operationId": "read_run_api_v1_runs__run_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "run"
        ],
        "summary": "Update Run",
        "description": "Update a run.",
        "operationId": "update_run_api_v1_runs__run_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRunRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/{run_id}/share": {
      "get": {
        "tags": [
          "run"
        ],
        "summary": "Read Run Share State",
        "description": "Get the state of sharing of a run.",
        "operationId": "read_run_share_state_api_v1_runs__run_id__share_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/RunShareSchema"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Read Run Share State Api V1 Runs  Run Id  Share Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "run"
        ],
        "summary": "Share Run",
        "description": "Share a run.",
        "operationId": "share_run_api_v1_runs__run_id__share_put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunShareSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "run"
        ],
        "summary": "Unshare Run",
        "description": "Unshare a run.",
        "operationId": "unshare_run_api_v1_runs__run_id__share_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/query": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Query Runs",
        "description": "Get all runs by query in body payload.",
        "operationId": "query_runs_api_v1_runs_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyParamsForRunSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRunsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/generate-query": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Generate Query For Runs",
        "description": "Get runs filter expression query for a given natural language query.",
        "operationId": "generate_query_for_runs_api_v1_runs_generate_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBodyForRunsGenerateQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyForRunsGenerateQuery"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/stats": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Stats Runs",
        "description": "Get all runs by query in body payload.",
        "operationId": "stats_runs_api_v1_runs_stats_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterQueryParamsForRunSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs/monitor": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Monitor Tracer Session",
        "description": "Get monitoring data for a specific session.",
        "operationId": "monitor_tracer_session_api_v1_runs_monitor_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MonitorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MonitorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/runs": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Create Run",
        "description": "Create a new run.",
        "operationId": "create_run_api_v1_runs_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRunRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/batch": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Batch Ingest Runs",
        "description": "Batch ingest runs.",
        "operationId": "batch_ingest_runs_api_v1_runs_batch_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchIngestRunsRequest"
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/group": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Group Runs",
        "description": "Get runs grouped by an expression",
        "operationId": "group_runs_api_v1_runs_group_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunGroupRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/runs/group/stats": {
      "post": {
        "tags": [
          "run"
        ],
        "summary": "Stats Group Runs",
        "description": "Get stats for the grouped runs.",
        "operationId": "stats_group_runs_api_v1_runs_group_stats_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RunGroupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunGroupStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/feedback/{feedback_id}": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Read Feedback",
        "description": "Get a specific feedback.",
        "operationId": "read_feedback_api_v1_feedback__feedback_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "feedback_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feedback Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "feedback"
        ],
        "summary": "Update Feedback",
        "description": "Replace an existing feedback entry with a new, modified entry.",
        "operationId": "update_feedback_api_v1_feedback__feedback_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "feedback_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feedback Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "feedback"
        ],
        "summary": "Delete Feedback",
        "description": "Delete a feedback.",
        "operationId": "delete_feedback_api_v1_feedback__feedback_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "feedback_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Feedback Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Read Feedbacks",
        "description": "List all Feedback by query params.",
        "operationId": "read_feedbacks_api_v1_feedback_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key"
            }
          },
          {
            "name": "session",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "User"
            }
          },
          {
            "name": "has_comment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Comment"
            }
          },
          {
            "name": "has_score",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Score"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FeedbackLevel"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackSchema"
                  },
                  "title": "Response Read Feedbacks Api V1 Feedback Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Create Feedback",
        "description": "Create a new feedback.",
        "operationId": "create_feedback_api_v1_feedback_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback/eager": {
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Eagerly Create Feedback",
        "description": "Create a new feedback.\n\nThis method is invoked under the assumption that the run\nis already visible in the app, thus already present in DB",
        "operationId": "eagerly_create_feedback_api_v1_feedback_eager_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/feedback/tokens": {
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Create Feedback Ingest Token",
        "description": "Create a new feedback ingest token.",
        "operationId": "create_feedback_ingest_token_api_v1_feedback_tokens_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/FeedbackIngestTokenCreateSchema"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/FeedbackIngestTokenCreateSchema"
                    }
                  }
                ],
                "title": "Feedback Ingest Token"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FeedbackIngestTokenSchema"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FeedbackIngestTokenSchema"
                      }
                    }
                  ],
                  "title": "Response Create Feedback Ingest Token Api V1 Feedback Tokens Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "List Feedback Ingest Tokens",
        "description": "List all feedback ingest tokens for a run.",
        "operationId": "list_feedback_ingest_tokens_api_v1_feedback_tokens_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackIngestTokenSchema"
                  },
                  "title": "Response List Feedback Ingest Tokens Api V1 Feedback Tokens Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback/tokens/{token}": {
      "get": {
        "tags": [
          "feedback"
        ],
        "summary": "Create Feedback With Token Get",
        "description": "Create a new feedback with a token.",
        "operationId": "create_feedback_with_token_get_api_v1_feedback_tokens__token__get",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token"
            }
          },
          {
            "name": "score",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Score"
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Value"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Comment"
            }
          },
          {
            "name": "correction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Correction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "feedback"
        ],
        "summary": "Create Feedback With Token Post",
        "description": "Create a new feedback with a token.",
        "operationId": "create_feedback_with_token_post_api_v1_feedback_tokens__token__post",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackCreateWithTokenExtendedSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/run": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Get Shared Run",
        "description": "Get the shared run.",
        "operationId": "get_shared_run_api_v1_public__share_token__run_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunPublicSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/run/{id}": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Get Shared Run By Id",
        "description": "Get the shared run.",
        "operationId": "get_shared_run_by_id_api_v1_public__share_token__run__id__get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          },
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunPublicSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/runs/query": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Query Shared Runs",
        "description": "Get run by ids or the shared run if not specifed.",
        "operationId": "query_shared_runs_api_v1_public__share_token__runs_query_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryParamsForPublicRunSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPublicRunsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/feedbacks": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Feedbacks",
        "operationId": "read_shared_feedbacks_api_v1_public__share_token__feedbacks_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "run",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key"
            }
          },
          {
            "name": "session",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "User"
            }
          },
          {
            "name": "has_comment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Comment"
            }
          },
          {
            "name": "has_score",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Score"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FeedbackLevel"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackSchema"
                  },
                  "title": "Response Read Shared Feedbacks Api V1 Public  Share Token  Feedbacks Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset",
        "description": "Get dataset by ids or the shared dataset if not specifed.",
        "operationId": "read_shared_dataset_api_v1_public__share_token__datasets_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortByDatasetColumn"
                }
              ],
              "default": "last_session_start_time",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetPublicSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/examples": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Examples",
        "description": "Get example by ids or the shared example if not specifed.",
        "operationId": "read_shared_examples_api_v1_public__share_token__examples_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "as_of",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used.",
              "default": "latest",
              "title": "As Of"
            },
            "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
          },
          {
            "name": "metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Metadata"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "select",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ExampleSelect"
              },
              "default": [
                "id",
                "created_at",
                "modified_at",
                "name",
                "dataset_id",
                "metadata",
                "inputs",
                "outputs"
              ],
              "title": "Select"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Example"
                  },
                  "title": "Response Read Shared Examples Api V1 Public  Share Token  Examples Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/sessions": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset Tracer Sessions",
        "description": "Get projects run on a dataset that has been shared.",
        "operationId": "read_shared_dataset_tracer_sessions_api_v1_public__share_token__datasets_sessions_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "dataset_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Dataset Version"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SessionSortableColumns"
                }
              ],
              "default": "start_time",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          },
          {
            "name": "sort_by_feedback_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By Feedback Key"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "facets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Facets"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Accept"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TracerSession"
                  },
                  "title": "Response Read Shared Dataset Tracer Sessions Api V1 Public  Share Token  Datasets Sessions Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/examples/runs": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset Examples With Runs",
        "description": "Get examples with associated runs from sessions in a dataset that has been shared.",
        "operationId": "read_shared_dataset_examples_with_runs_api_v1_public__share_token__examples_runs_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryExampleSchemaWithRuns"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PublicExampleWithRuns"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ExampleWithRunsCH"
                      }
                    }
                  ],
                  "title": "Response Read Shared Dataset Examples With Runs Api V1 Public  Share Token  Examples Runs Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/delta": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Delta",
        "description": "Fetch the number of regressions/improvements for each example in a dataset, between sessions[0] and sessions[1].",
        "operationId": "read_shared_delta_api_v1_public__share_token__datasets_runs_delta_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryFeedbackDelta"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionFeedbackDelta"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/query": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Query Shared Dataset Runs",
        "description": "Get runs in projects run over a dataset that has been shared.",
        "operationId": "query_shared_dataset_runs_api_v1_public__share_token__datasets_runs_query_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BodyParamsForRunSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPublicDatasetRunsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/generate-query": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Generate Query For Shared Dataset Runs",
        "description": "Get runs in projects run over a dataset that has been shared.",
        "operationId": "generate_query_for_shared_dataset_runs_api_v1_public__share_token__datasets_runs_generate_query_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBodyForRunsGenerateQuery"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBodyForRunsGenerateQuery"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/stats": {
      "post": {
        "tags": [
          "public"
        ],
        "summary": "Stats Shared Dataset Runs",
        "description": "Get run stats in projects run over a dataset that has been shared.",
        "operationId": "stats_shared_dataset_runs_api_v1_public__share_token__datasets_runs_stats_post",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterQueryParamsForRunSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunStats"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/runs/{run_id}": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset Run",
        "description": "Get runs in projects run over a dataset that has been shared.",
        "operationId": "read_shared_dataset_run_api_v1_public__share_token__datasets_runs__run_id__get",
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          },
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RunPublicDatasetSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/feedback": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Dataset Feedback",
        "description": "Get feedback for runs in projects run over a dataset that has been shared.",
        "operationId": "read_shared_dataset_feedback_api_v1_public__share_token__datasets_feedback_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "run",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Run"
            }
          },
          {
            "name": "key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Key"
            }
          },
          {
            "name": "session",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Session"
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SourceType"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Source"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "user",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "User"
            }
          },
          {
            "name": "has_comment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Comment"
            }
          },
          {
            "name": "has_score",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Score"
            }
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FeedbackLevel"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FeedbackSchema"
                  },
                  "title": "Response Read Shared Dataset Feedback Api V1 Public  Share Token  Datasets Feedback Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/public/{share_token}/datasets/comparative": {
      "get": {
        "tags": [
          "public"
        ],
        "summary": "Read Shared Comparative Experiments",
        "description": "Get all comparative experiments for a given dataset.",
        "operationId": "read_shared_comparative_experiments_api_v1_public__share_token__datasets_comparative_get",
        "parameters": [
          {
            "name": "share_token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Share Token"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SortByComparativeExperimentColumn"
                }
              ],
              "default": "created_at",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_by_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sort By Desc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicComparativeExperiment"
                  },
                  "title": "Response Read Shared Comparative Experiments Api V1 Public  Share Token  Datasets Comparative Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues": {
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Annotation Queues",
        "operationId": "get_annotation_queues_api_v1_annotation_queues_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ids"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name"
            }
          },
          {
            "name": "name_contains",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Name Contains"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationQueueSchema"
                  },
                  "title": "Response Get Annotation Queues Api V1 Annotation Queues Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Create Annotation Queue",
        "operationId": "create_annotation_queue_api_v1_annotation_queues_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationQueueCreateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationQueueSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}": {
      "delete": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Delete Annotation Queue",
        "operationId": "delete_annotation_queue_api_v1_annotation_queues__queue_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Update Annotation Queue",
        "operationId": "update_annotation_queue_api_v1_annotation_queues__queue_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationQueueUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/runs": {
      "post": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Add Runs To Annotation Queue",
        "operationId": "add_runs_to_annotation_queue_api_v1_annotation_queues__queue_id__runs_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "title": "Run Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationQueueRunSchema"
                  },
                  "title": "Response Add Runs To Annotation Queue Api V1 Annotation Queues  Queue Id  Runs Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Runs From Annotation Queue",
        "operationId": "get_runs_from_annotation_queue_api_v1_annotation_queues__queue_id__runs_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 100,
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RunSchemaWithAnnotationQueueInfo"
                  },
                  "title": "Response Get Runs From Annotation Queue Api V1 Annotation Queues  Queue Id  Runs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{run_id}/queues": {
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Annotation Queues For Run",
        "operationId": "get_annotation_queues_for_run_api_v1_annotation_queues__run_id__queues_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnotationQueueSchema"
                  },
                  "title": "Response Get Annotation Queues For Run Api V1 Annotation Queues  Run Id  Queues Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/runs/{queue_run_id}": {
      "patch": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Update Run In Annotation Queue",
        "operationId": "update_run_in_annotation_queue_api_v1_annotation_queues__queue_id__runs__queue_run_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          },
          {
            "name": "queue_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Run Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationQueueRunUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Delete Run From Annotation Queue",
        "operationId": "delete_run_from_annotation_queue_api_v1_annotation_queues__queue_id__runs__queue_run_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          },
          {
            "name": "queue_run_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Run Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/annotation-queues/{queue_id}/size": {
      "get": {
        "tags": [
          "annotation-queues"
        ],
        "summary": "Get Size From Annotation Queue",
        "operationId": "get_size_from_annotation_queue_api_v1_annotation_queues__queue_id__size_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "queue_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Queue Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationQueueSizeSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "List Tenants",
        "description": "Get all tenants visible to this auth",
        "operationId": "list_tenants_api_v1_tenants_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TenantForUser"
                  },
                  "type": "array",
                  "title": "Response List Tenants Api V1 Tenants Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tenant"
        ],
        "summary": "Create Tenant",
        "description": "Create a new tenant.",
        "operationId": "create_tenant_api_v1_tenants_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__Tenant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/tenants/pending": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "List Pending Tenant Invites",
        "description": "Get all tenants visible to this auth",
        "operationId": "list_pending_tenant_invites_api_v1_tenants_pending_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/app__schemas__Tenant"
                  },
                  "type": "array",
                  "title": "Response List Pending Tenant Invites Api V1 Tenants Pending Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/tenants/pending/{id}": {
      "delete": {
        "tags": [
          "tenant"
        ],
        "summary": "Delete Pending Tenant Invite",
        "operationId": "delete_pending_tenant_invite_api_v1_tenants_pending__id__delete",
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/pending/{tenant_id}/claim": {
      "post": {
        "tags": [
          "tenant"
        ],
        "summary": "Claim Pending Tenant Invite",
        "operationId": "claim_pending_tenant_invite_api_v1_tenants_pending__tenant_id__claim_post",
        "security": [
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "tenant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Tenant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/current/stats": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "Get Current Tenant Stats",
        "operationId": "get_current_tenant_stats_api_v1_tenants_current_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantStats"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/tenants/stats": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "Get Current Tenant Stats",
        "operationId": "get_current_tenant_stats_api_v1_tenants_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantStats"
                }
              }
            }
          }
        },
        "deprecated": true,
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/tenants/current/members": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "Get Current Tenant Members",
        "operationId": "get_current_tenant_members_api_v1_tenants_current_members_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantMembers"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tenant"
        ],
        "summary": "Add Member To Current Tenant",
        "operationId": "add_member_to_current_tenant_api_v1_tenants_current_members_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PendingIdentityCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingIdentity"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/tenants/current/shared": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "Get Shared Tokens",
        "description": "List all shared entities and their tokens by the tenant.",
        "operationId": "get_shared_tokens_api_v1_tenants_current_shared_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantShareTokensResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "tenant"
        ],
        "summary": "Bulk Unshare Entities",
        "description": "Bulk unshare entities by share tokens for the tenant.",
        "operationId": "bulk_unshare_entities_api_v1_tenants_current_shared_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantBulkUnshareRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/current/members/{identity_id}": {
      "delete": {
        "tags": [
          "tenant"
        ],
        "summary": "Delete Current Tenant Member",
        "operationId": "delete_current_tenant_member_api_v1_tenants_current_members__identity_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tenant"
        ],
        "summary": "Patch Current Tenant Member",
        "operationId": "patch_current_tenant_member_api_v1_tenants_current_members__identity_id__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityPatch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/current/members/{identity_id}/pending": {
      "delete": {
        "tags": [
          "tenant"
        ],
        "summary": "Delete Current Tenant Pending Member",
        "operationId": "delete_current_tenant_pending_member_api_v1_tenants_current_members__identity_id__pending_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "identity_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Identity Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenants/current/usage_limits": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "Get Current Tenant Usage Limits Info",
        "operationId": "get_current_tenant_usage_limits_info_api_v1_tenants_current_usage_limits_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TenantUsageLimitInfo"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/tenants/current/secrets": {
      "get": {
        "tags": [
          "tenant"
        ],
        "summary": "List Current Tenant Secrets",
        "operationId": "list_current_tenant_secrets_api_v1_tenants_current_secrets_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SecretKey"
                  },
                  "type": "array",
                  "title": "Response List Current Tenant Secrets Api V1 Tenants Current Secrets Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "tenant"
        ],
        "summary": "Upsert Current Tenant Secrets",
        "operationId": "upsert_current_tenant_secrets_api_v1_tenants_current_secrets_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/SecretUpsert"
                },
                "type": "array",
                "title": "Secrets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/info": {
      "get": {
        "tags": [
          "info"
        ],
        "summary": "Get Server Info",
        "description": "Get information about the current deployment of LangSmith.",
        "operationId": "get_server_info_api_v1_info_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoGetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/feedback-configs/": {
      "get": {
        "tags": [
          "feedback-configs"
        ],
        "summary": "List Feedback Configs Endpoint",
        "operationId": "list_feedback_configs_endpoint_api_v1_feedback_configs__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FeedbackConfigSchema"
                  },
                  "type": "array",
                  "title": "Response List Feedback Configs Endpoint Api V1 Feedback Configs  Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "feedback-configs"
        ],
        "summary": "Create Feedback Config Endpoint",
        "operationId": "create_feedback_config_endpoint_api_v1_feedback_configs__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeedbackConfigSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackConfigSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/model-price-map/": {
      "get": {
        "tags": [
          "model-price-map"
        ],
        "summary": "Read Model Price Map",
        "operationId": "read_model_price_map_api_v1_model_price_map__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "post": {
        "tags": [
          "model-price-map"
        ],
        "summary": "Create New Model Price",
        "operationId": "create_new_model_price_api_v1_model_price_map__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelPriceMapCreateSchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/model-price-map/{id}": {
      "put": {
        "tags": [
          "model-price-map"
        ],
        "summary": "Update Model Price",
        "operationId": "update_model_price_api_v1_model_price_map__id__put",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelPriceMapUpdateSchema"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "model-price-map"
        ],
        "summary": "Delete Model Price",
        "operationId": "delete_model_price_api_v1_model_price_map__id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/usage-limits/": {
      "get": {
        "tags": [
          "usage-limits"
        ],
        "summary": "List Usage Limits",
        "description": "List out the configured usage limits for a given tenant.",
        "operationId": "list_usage_limits_api_v1_usage_limits__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/UsageLimit"
                  },
                  "type": "array",
                  "title": "Response List Usage Limits Api V1 Usage Limits  Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "usage-limits"
        ],
        "summary": "Upsert Usage Limit",
        "description": "Create a new usage limit.",
        "operationId": "upsert_usage_limit_api_v1_usage_limits__put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertUsageLimit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsageLimit"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/usage-limits/{usage_limit_id}": {
      "delete": {
        "tags": [
          "usage-limits"
        ],
        "summary": "Delete Usage Limit",
        "description": "Delete a specific usage limit.",
        "operationId": "delete_usage_limit_api_v1_usage_limits__usage_limit_id__delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "usage_limit_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Usage Limit Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ttl-settings": {
      "get": {
        "tags": [
          "ttl-settings"
        ],
        "summary": "List Ttl Settings",
        "description": "List out the configured TTL settings for a given tenant.",
        "operationId": "list_ttl_settings_api_v1_ttl_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TTLSettings"
                  },
                  "type": "array",
                  "title": "Response List Ttl Settings Api V1 Ttl Settings Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      },
      "put": {
        "tags": [
          "ttl-settings"
        ],
        "summary": "Upsert Ttl Settings",
        "operationId": "upsert_ttl_settings_api_v1_ttl_settings_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpsertTTLSettingsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TTLSettings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/prompts/invoke_prompt": {
      "post": {
        "tags": [
          "prompts"
        ],
        "summary": "Invoke Prompt",
        "operationId": "invoke_prompt_api_v1_prompts_invoke_prompt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvokePromptPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/": {
      "get": {
        "tags": [
          "repos"
        ],
        "summary": "List Repos",
        "description": "Get all repos.",
        "operationId": "list_repos_api_v1_repos__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "tenant_handle",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenant Handle"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Query"
            }
          },
          {
            "name": "has_commits",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Commits"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          },
          {
            "name": "is_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "true",
                    "allow",
                    "false"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Archived"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Public"
            }
          },
          {
            "name": "upstream_repo_owner",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Upstream Repo Owner"
            }
          },
          {
            "name": "upstream_repo_handle",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Upstream Repo Handle"
            }
          },
          {
            "name": "sort_field",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort Field"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "asc"
                  ],
                  "const": "asc",
                  "type": "string"
                },
                {
                  "enum": [
                    "desc"
                  ],
                  "const": "desc",
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort Direction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListReposResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "repos"
        ],
        "summary": "Create Repo",
        "description": "Create a repo.",
        "operationId": "create_repo_api_v1_repos__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRepoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}": {
      "get": {
        "tags": [
          "repos"
        ],
        "summary": "Get Repo",
        "description": "Get a repo.",
        "operationId": "get_repo_api_v1_repos__owner___repo__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "repos"
        ],
        "summary": "Update Repo",
        "description": "Update a repo.",
        "operationId": "update_repo_api_v1_repos__owner___repo__patch",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRepoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/{owner}/{repo}/fork": {
      "post": {
        "tags": [
          "repos"
        ],
        "summary": "Fork Repo",
        "description": "Fork a repo.",
        "operationId": "fork_repo_api_v1_repos__owner___repo__fork_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForkRepoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/repos/tags": {
      "get": {
        "tags": [
          "repos"
        ],
        "summary": "List Repo Tags",
        "description": "Get all repo tags.",
        "operationId": "list_repo_tags_api_v1_repos_tags_get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          },
          {
            "name": "tenant_handle",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tenant Handle"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Query"
            }
          },
          {
            "name": "has_commits",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Has Commits"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "title": "Tags"
            }
          },
          {
            "name": "is_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "true",
                    "allow",
                    "false"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Archived"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "true",
                    "false"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Is Public"
            }
          },
          {
            "name": "upstream_repo_owner",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Upstream Repo Owner"
            }
          },
          {
            "name": "upstream_repo_handle",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Upstream Repo Handle"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTagsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/likes/{owner}/{repo}": {
      "post": {
        "tags": [
          "likes"
        ],
        "summary": "Like Repo",
        "description": "Like a repo.",
        "operationId": "like_repo_api_v1_likes__owner___repo__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LikeRepoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LikeRepoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commits/{owner}/{repo}/": {
      "get": {
        "tags": [
          "commits"
        ],
        "summary": "List Commits",
        "description": "Get all commits.",
        "operationId": "list_commits_api_v1_commits__owner___repo___get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCommitsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commits/{owner}/{repo}/{commit}": {
      "get": {
        "tags": [
          "commits"
        ],
        "summary": "Get Commit",
        "description": "Download a repo.",
        "operationId": "get_commit_api_v1_commits__owner___repo___commit__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "commit",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Commit"
            }
          },
          {
            "name": "get_examples",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Get Examples"
            }
          },
          {
            "name": "is_view",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Is View"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommitManifestResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/commits/{owner}/{repo}": {
      "post": {
        "tags": [
          "commits"
        ],
        "summary": "Create Commit",
        "description": "Upload a repo.",
        "operationId": "create_commit_api_v1_commits__owner___repo__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRepoCommitRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRepoCommitResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "Get Settings",
        "description": "Get settings.",
        "operationId": "get_settings_api_v1_settings_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__hub__crud__tenants__Tenant"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/settings/handle": {
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "Set Tenant Handle",
        "description": "Set tenant handle.",
        "operationId": "set_tenant_handle_api_v1_settings_handle_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetTenantHandleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__hub__crud__tenants__Tenant"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/events": {
      "post": {
        "tags": [
          "events"
        ],
        "summary": "Create Event",
        "operationId": "create_event_api_v1_events_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ]
      }
    },
    "/api/v1/comments/{owner}/{repo}": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Create Comment",
        "operationId": "create_comment_api_v1_comments__owner___repo__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Get Comments",
        "operationId": "get_comments_api_v1_comments__owner___repo__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCommentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/comments/{owner}/{repo}/{parent_comment_id}": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "Get Sub Comments",
        "operationId": "get_sub_comments_api_v1_comments__owner___repo___parent_comment_id__get",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Parent Comment Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCommentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Create Sub Comment",
        "operationId": "create_sub_comment_api_v1_comments__owner___repo___parent_comment_id__post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Parent Comment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/comments/{owner}/{repo}/{parent_comment_id}/like": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Like Comment",
        "operationId": "like_comment_api_v1_comments__owner___repo___parent_comment_id__like_post",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Parent Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Like Comment Api V1 Comments  Owner   Repo   Parent Comment Id  Like Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "Unlike Comment",
        "operationId": "unlike_comment_api_v1_comments__owner___repo___parent_comment_id__like_delete",
        "security": [
          {
            "API Key": []
          },
          {
            "Tenant ID": []
          },
          {
            "Bearer Auth": []
          }
        ],
        "parameters": [
          {
            "name": "owner",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Owner"
            }
          },
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Repo"
            }
          },
          {
            "name": "parent_comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Parent Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Unlike Comment Api V1 Comments  Owner   Repo   Parent Comment Id  Like Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/ok": {
      "get": {
        "summary": "Ok",
        "operationId": "ok_ok_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "api"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "APIFeedbackSource",
        "description": "API feedback source."
      },
      "APIKeyCreateRequest": {
        "properties": {
          "description": {
            "type": "string",
            "title": "Description",
            "default": "Default API key"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          }
        },
        "type": "object",
        "title": "APIKeyCreateRequest",
        "description": "API key POST schema."
      },
      "APIKeyCreateResponse": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "short_key": {
            "type": "string",
            "title": "Short Key"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "id",
          "short_key",
          "description",
          "key"
        ],
        "title": "APIKeyCreateResponse",
        "description": "API key POST schema."
      },
      "APIKeyGetResponse": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "short_key": {
            "type": "string",
            "title": "Short Key"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "short_key",
          "description"
        ],
        "title": "APIKeyGetResponse",
        "description": "API key GET schema."
      },
      "AccessScope": {
        "type": "string",
        "enum": [
          "organization",
          "workspace"
        ],
        "title": "AccessScope"
      },
      "AnnotationQueueCreateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "AnnotationQueueCreateSchema",
        "description": "AnnotationQueue schema."
      },
      "AnnotationQueueRunSchema": {
        "properties": {
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "queue_id": {
            "type": "string",
            "format": "uuid",
            "title": "Queue Id"
          },
          "last_reviewed_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reviewed Time"
          },
          "added_at": {
            "type": "string",
            "format": "date-time",
            "title": "Added At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "queue_id",
          "id"
        ],
        "title": "AnnotationQueueRunSchema"
      },
      "AnnotationQueueRunUpdateSchema": {
        "properties": {
          "last_reviewed_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reviewed Time"
          },
          "added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Added At"
          }
        },
        "type": "object",
        "title": "AnnotationQueueRunUpdateSchema"
      },
      "AnnotationQueueSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id"
        ],
        "title": "AnnotationQueueSchema",
        "description": "AnnotationQueue schema."
      },
      "AnnotationQueueSizeSchema": {
        "properties": {
          "size": {
            "type": "integer",
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "size"
        ],
        "title": "AnnotationQueueSizeSchema",
        "description": "Size of an Annotation Queue"
      },
      "AnnotationQueueUpdateSchema": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset"
          }
        },
        "type": "object",
        "title": "AnnotationQueueUpdateSchema",
        "description": "AnnotationQueue update schema."
      },
      "AppFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "app"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "AppFeedbackSource",
        "description": "Feedback from the LangChainPlus App."
      },
      "BasicAuthResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "BasicAuthResponse"
      },
      "BatchIngestConfig": {
        "properties": {
          "scale_up_qsize_trigger": {
            "type": "integer",
            "title": "Scale Up Qsize Trigger",
            "default": 1000
          },
          "scale_up_nthreads_limit": {
            "type": "integer",
            "title": "Scale Up Nthreads Limit",
            "default": 16
          },
          "scale_down_nempty_trigger": {
            "type": "integer",
            "title": "Scale Down Nempty Trigger",
            "default": 4
          },
          "size_limit": {
            "type": "integer",
            "title": "Size Limit",
            "default": 100
          },
          "size_limit_bytes": {
            "type": "integer",
            "title": "Size Limit Bytes",
            "default": 20971520
          }
        },
        "type": "object",
        "title": "BatchIngestConfig",
        "description": "Batch ingest config."
      },
      "BodyParamsForRunSchema": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "trace": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace"
          },
          "parent_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run"
          },
          "run_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "session": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session"
          },
          "reference_example": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example"
          },
          "execution_order": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Order"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "is_root": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Root"
          },
          "data_source_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunsFilterDataSourceTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "cursor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor"
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 100
          },
          "select": {
            "items": {
              "$ref": "#/components/schemas/RunSelect"
            },
            "type": "array",
            "title": "Select",
            "default": [
              "id",
              "name",
              "run_type",
              "start_time",
              "end_time",
              "status",
              "error",
              "extra",
              "events",
              "inputs",
              "outputs",
              "parent_run_id",
              "manifest_id",
              "manifest_s3_id",
              "session_id",
              "serialized",
              "reference_example_id",
              "total_tokens",
              "prompt_tokens",
              "completion_tokens",
              "total_cost",
              "prompt_cost",
              "completion_cost",
              "price_model_id",
              "first_token_time",
              "trace_id",
              "dotted_order",
              "last_queued_at",
              "feedback_stats",
              "child_run_ids",
              "parent_run_ids",
              "tags",
              "in_dataset",
              "app_path",
              "share_token",
              "trace_tier",
              "trace_first_received_at",
              "ttl_seconds"
            ]
          },
          "order": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RunDateOrder"
              }
            ],
            "default": "desc"
          }
        },
        "type": "object",
        "title": "BodyParamsForRunSchema",
        "description": "Query params for run endpoints."
      },
      "Body_clone_dataset_api_v1_datasets_clone_post": {
        "properties": {
          "target_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Target Dataset Id"
          },
          "source_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Source Dataset Id"
          },
          "as_of": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "string",
                    "format": "date-time"
                  },
                  {
                    "type": "string"
                  }
                ],
                "description": "Only modifications made on or before this time are included. If None, the latest version of the dataset is used."
              },
              {
                "type": "null"
              }
            ],
            "title": "As Of"
          },
          "examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "target_dataset_id",
          "source_dataset_id"
        ],
        "title": "Body_clone_dataset_api_v1_datasets_clone_post"
      },
      "Body_update_dataset_splits_api_v1_datasets__dataset_id__splits_put": {
        "properties": {
          "split_name": {
            "type": "string",
            "title": "Split Name"
          },
          "examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples"
          },
          "remove": {
            "type": "boolean",
            "title": "Remove",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "split_name",
          "examples"
        ],
        "title": "Body_update_dataset_splits_api_v1_datasets__dataset_id__splits_put"
      },
      "Body_upload_csv_dataset_api_v1_datasets_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "input_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Keys"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "data_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DataType"
              }
            ],
            "default": "kv"
          },
          "output_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Keys",
            "default": []
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "file",
          "input_keys"
        ],
        "title": "Body_upload_csv_dataset_api_v1_datasets_upload_post"
      },
      "Body_upload_examples_api_v1_examples_upload__dataset_id__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "input_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Input Keys"
          },
          "output_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Keys"
          }
        },
        "type": "object",
        "required": [
          "file",
          "input_keys"
        ],
        "title": "Body_upload_examples_api_v1_examples_upload__dataset_id__post"
      },
      "ChangePaymentPlanReq": {
        "type": "string",
        "enum": [
          "disabled",
          "developer",
          "plus",
          "startup",
          "partner",
          "premier"
        ],
        "title": "ChangePaymentPlanReq",
        "description": "Enum for payment plans that the user can change to. Developer plans are permanent and enterprise plans will be changed manually."
      },
      "ChangePaymentPlanSchema": {
        "properties": {
          "tier": {
            "$ref": "#/components/schemas/ChangePaymentPlanReq"
          }
        },
        "type": "object",
        "required": [
          "tier"
        ],
        "title": "ChangePaymentPlanSchema",
        "description": "Change payment plan schema."
      },
      "Comment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "comment_by": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment By"
          },
          "comment_on": {
            "type": "string",
            "format": "uuid",
            "title": "Comment On"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "comment_by_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment By Name"
          },
          "num_sub_comments": {
            "type": "integer",
            "title": "Num Sub Comments"
          },
          "num_likes": {
            "type": "integer",
            "title": "Num Likes"
          },
          "liked_by_auth_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Liked By Auth User"
          }
        },
        "type": "object",
        "required": [
          "id",
          "comment_on",
          "content",
          "created_at",
          "updated_at",
          "num_sub_comments",
          "num_likes"
        ],
        "title": "Comment"
      },
      "CommitManifestResponse": {
        "properties": {
          "commit_hash": {
            "type": "string",
            "title": "Commit Hash"
          },
          "manifest": {
            "type": "object",
            "title": "Manifest"
          },
          "examples": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RepoExampleResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examples"
          }
        },
        "type": "object",
        "required": [
          "commit_hash",
          "manifest"
        ],
        "title": "CommitManifestResponse",
        "description": "Response model for get_commit_manifest."
      },
      "CommitWithLookups": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "manifest_id": {
            "type": "string",
            "format": "uuid",
            "title": "Manifest Id"
          },
          "repo_id": {
            "type": "string",
            "format": "uuid",
            "title": "Repo Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "commit_hash": {
            "type": "string",
            "title": "Commit Hash"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "example_run_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Example Run Ids"
          },
          "num_downloads": {
            "type": "integer",
            "title": "Num Downloads"
          },
          "num_views": {
            "type": "integer",
            "title": "Num Views"
          },
          "parent_commit_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Commit Hash"
          }
        },
        "type": "object",
        "required": [
          "id",
          "manifest_id",
          "repo_id",
          "commit_hash",
          "created_at",
          "updated_at",
          "example_run_ids",
          "num_downloads",
          "num_views"
        ],
        "title": "CommitWithLookups",
        "description": "All database fields for commits, plus helpful computed fields."
      },
      "ComparativeExperiment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "reference_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reference Dataset Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "experiments_info": {
            "items": {
              "$ref": "#/components/schemas/SimpleExperimentInfo"
            },
            "type": "array",
            "title": "Experiments Info"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "created_at",
          "modified_at",
          "reference_dataset_id",
          "experiments_info"
        ],
        "title": "ComparativeExperiment",
        "description": "ComparativeExperiment schema."
      },
      "ComparativeExperimentBase": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "reference_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reference Dataset Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "created_at",
          "modified_at",
          "reference_dataset_id"
        ],
        "title": "ComparativeExperimentBase",
        "description": "ComparativeExperiment schema."
      },
      "ComparativeExperimentCreate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "experiment_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Experiment Ids"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "reference_dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Reference Dataset Id"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          }
        },
        "type": "object",
        "required": [
          "experiment_ids",
          "reference_dataset_id"
        ],
        "title": "ComparativeExperimentCreate",
        "description": "Create class for ComparativeExperiment."
      },
      "ConfiguredBy": {
        "type": "string",
        "enum": [
          "system",
          "user"
        ],
        "title": "ConfiguredBy"
      },
      "CreateCommentRequest": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "CreateCommentRequest"
      },
      "CreateEventRequest": {
        "properties": {
          "event_type": {
            "type": "string",
            "enum": [
              "playground-view",
              "playground-run"
            ],
            "title": "Event Type"
          },
          "owner": {
            "type": "string",
            "title": "Owner"
          },
          "repo": {
            "type": "string",
            "title": "Repo"
          },
          "commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit"
          }
        },
        "type": "object",
        "required": [
          "event_type",
          "owner",
          "repo"
        ],
        "title": "CreateEventRequest"
      },
      "CreateFeedbackConfigSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "$ref": "#/components/schemas/FeedbackConfig"
          }
        },
        "type": "object",
        "required": [
          "feedback_key",
          "feedback_config"
        ],
        "title": "CreateFeedbackConfigSchema"
      },
      "CreateRepoCommitRequest": {
        "properties": {
          "manifest": {
            "type": "object",
            "title": "Manifest"
          },
          "parent_commit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Commit"
          },
          "example_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Example Run Ids"
          }
        },
        "type": "object",
        "required": [
          "manifest"
        ],
        "title": "CreateRepoCommitRequest"
      },
      "CreateRepoCommitResponse": {
        "properties": {
          "commit": {
            "$ref": "#/components/schemas/CommitWithLookups"
          }
        },
        "type": "object",
        "required": [
          "commit"
        ],
        "title": "CreateRepoCommitResponse"
      },
      "CreateRepoRequest": {
        "properties": {
          "repo_handle": {
            "type": "string",
            "title": "Repo Handle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "repo_handle",
          "is_public"
        ],
        "title": "CreateRepoRequest",
        "description": "Fields to create a repo"
      },
      "CreateRepoResponse": {
        "properties": {
          "repo": {
            "$ref": "#/components/schemas/RepoWithLookups"
          }
        },
        "type": "object",
        "required": [
          "repo"
        ],
        "title": "CreateRepoResponse"
      },
      "CreateRoleRequest": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "description",
          "permissions"
        ],
        "title": "CreateRoleRequest"
      },
      "CustomerVisiblePlanInfo": {
        "properties": {
          "tier": {
            "$ref": "#/components/schemas/PaymentPlanTier"
          },
          "started_on": {
            "type": "string",
            "format": "date-time",
            "title": "Started On"
          },
          "ends_on": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ends On"
          }
        },
        "type": "object",
        "required": [
          "tier",
          "started_on"
        ],
        "title": "CustomerVisiblePlanInfo",
        "description": "Customer visible plan information."
      },
      "DataType": {
        "type": "string",
        "enum": [
          "kv",
          "llm",
          "chat"
        ],
        "title": "DataType",
        "description": "Enum for dataset data types."
      },
      "Dataset": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "example_count": {
            "type": "integer",
            "title": "Example Count"
          },
          "session_count": {
            "type": "integer",
            "title": "Session Count"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "last_session_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Session Start Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id",
          "example_count",
          "session_count",
          "modified_at"
        ],
        "title": "Dataset",
        "description": "Dataset schema."
      },
      "DatasetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "DatasetCreate",
        "description": "Create class for Dataset."
      },
      "DatasetDiffInfo": {
        "properties": {
          "examples_modified": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples Modified"
          },
          "examples_added": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples Added"
          },
          "examples_removed": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Examples Removed"
          }
        },
        "type": "object",
        "required": [
          "examples_modified",
          "examples_added",
          "examples_removed"
        ],
        "title": "DatasetDiffInfo",
        "description": "Dataset diff schema."
      },
      "DatasetPublicSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "example_count": {
            "type": "integer",
            "title": "Example Count"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "example_count"
        ],
        "title": "DatasetPublicSchema",
        "description": "Public schema for datasets.\n\nDoesn't currently include session counts/stats\nsince public test project sharing is not yet shipped"
      },
      "DatasetSchemaForUpdate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "data_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DataType"
              },
              {
                "type": "null"
              }
            ],
            "default": "kv"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id",
          "tenant_id"
        ],
        "title": "DatasetSchemaForUpdate"
      },
      "DatasetShareSchema": {
        "properties": {
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "share_token": {
            "type": "string",
            "format": "uuid",
            "title": "Share Token"
          }
        },
        "type": "object",
        "required": [
          "dataset_id",
          "share_token"
        ],
        "title": "DatasetShareSchema"
      },
      "DatasetUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "DatasetUpdate",
        "description": "Update class for Dataset."
      },
      "DatasetVersion": {
        "properties": {
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "as_of": {
            "type": "string",
            "format": "date-time",
            "title": "As Of"
          }
        },
        "type": "object",
        "required": [
          "as_of"
        ],
        "title": "DatasetVersion",
        "description": "Dataset version schema."
      },
      "EvaluatorStructuredOutput": {
        "properties": {
          "hub_ref": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hub Ref"
          },
          "prompt": {
            "anyOf": [
              {
                "items": {
                  "prefixItems": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt"
          },
          "template_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Format"
          },
          "schema": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schema"
          },
          "model": {
            "type": "object",
            "title": "Model"
          }
        },
        "type": "object",
        "required": [
          "model"
        ],
        "title": "EvaluatorStructuredOutput",
        "description": "Evaluator structured output schema."
      },
      "EvaluatorTopLevel": {
        "properties": {
          "structured": {
            "$ref": "#/components/schemas/EvaluatorStructuredOutput"
          }
        },
        "type": "object",
        "required": [
          "structured"
        ],
        "title": "EvaluatorTopLevel"
      },
      "Example": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "dataset_id",
          "id",
          "name"
        ],
        "title": "Example",
        "description": "Example schema."
      },
      "ExampleBulkCreate": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "split": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Split",
            "default": "base"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "dataset_id"
        ],
        "title": "ExampleBulkCreate",
        "description": "Example class with optional created_at field to prevent multiple versions when bulk creating examples."
      },
      "ExampleCreate": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "split": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Split",
            "default": "base"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "dataset_id"
        ],
        "title": "ExampleCreate",
        "description": "Create class for Example."
      },
      "ExampleListOrder": {
        "type": "string",
        "enum": [
          "recent",
          "random"
        ],
        "title": "ExampleListOrder"
      },
      "ExampleSelect": {
        "type": "string",
        "enum": [
          "id",
          "created_at",
          "modified_at",
          "name",
          "dataset_id",
          "source_run_id",
          "metadata",
          "inputs",
          "outputs"
        ],
        "title": "ExampleSelect"
      },
      "ExampleUpdate": {
        "properties": {
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "split": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Split",
            "default": "base"
          }
        },
        "type": "object",
        "title": "ExampleUpdate",
        "description": "Update class for Example."
      },
      "ExampleWithRuns": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunSchema"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "dataset_id",
          "id",
          "name",
          "runs"
        ],
        "title": "ExampleWithRuns",
        "description": "Example schema with list of runs."
      },
      "ExampleWithRunsCH": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunSchemaComparisonView"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "dataset_id",
          "id",
          "name",
          "runs"
        ],
        "title": "ExampleWithRunsCH",
        "description": "Example schema with list of runs."
      },
      "FeatureFlags": {
        "type": "string",
        "enum": [
          "playground_runnables",
          "hosted_langserve_enabled",
          "payment_enabled",
          "run_rules_enabled",
          "conversation_view_enabled",
          "usage_reporting_enabled",
          "show_upgrade_billing_ui",
          "rbac_enabled",
          "pat_enabled",
          "show_ttl_ui"
        ],
        "title": "FeatureFlags",
        "description": "Feature flags for tenants."
      },
      "FeedbackCategory": {
        "properties": {
          "value": {
            "type": "number",
            "title": "Value"
          },
          "label": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Label"
          }
        },
        "type": "object",
        "required": [
          "value"
        ],
        "title": "FeedbackCategory",
        "description": "Specific value and label pair for feedback"
      },
      "FeedbackConfig": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/FeedbackType"
          },
          "min": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min"
          },
          "max": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max"
          },
          "categories": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FeedbackCategory"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Categories"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "FeedbackConfig"
      },
      "FeedbackConfigSchema": {
        "properties": {
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "$ref": "#/components/schemas/FeedbackConfig"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          }
        },
        "type": "object",
        "required": [
          "feedback_key",
          "feedback_config",
          "tenant_id",
          "modified_at"
        ],
        "title": "FeedbackConfigSchema"
      },
      "FeedbackCreateSchema": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "key": {
            "type": "string",
            "maxLength": 180,
            "title": "Key"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_group_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Group Id"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "feedback_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AppFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/APIFeedbackSource"
              },
              {
                "$ref": "#/components/schemas/ModelFeedbackSource"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Source"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "FeedbackCreateSchema",
        "description": "Schema used for creating feedback."
      },
      "FeedbackCreateWithTokenExtendedSchema": {
        "properties": {
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "FeedbackCreateWithTokenExtendedSchema",
        "description": "Feedback create schema with token."
      },
      "FeedbackDelta": {
        "properties": {
          "improved_examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Improved Examples"
          },
          "regressed_examples": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Regressed Examples"
          }
        },
        "type": "object",
        "required": [
          "improved_examples",
          "regressed_examples"
        ],
        "title": "FeedbackDelta",
        "description": "Feedback key with number of improvements and regressions."
      },
      "FeedbackIngestTokenCreateSchema": {
        "properties": {
          "expires_in": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TimedeltaInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "feedback_key"
        ],
        "title": "FeedbackIngestTokenCreateSchema",
        "description": "Feedback ingest token create schema."
      },
      "FeedbackIngestTokenSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "title": "Expires At"
          },
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          }
        },
        "type": "object",
        "required": [
          "id",
          "url",
          "expires_at",
          "feedback_key"
        ],
        "title": "FeedbackIngestTokenSchema",
        "description": "Feedback ingest token schema."
      },
      "FeedbackLevel": {
        "type": "string",
        "enum": [
          "run",
          "session"
        ],
        "title": "FeedbackLevel",
        "description": "Enum for feedback levels."
      },
      "FeedbackSchema": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Id"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_group_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Group Id"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "feedback_source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackSource"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "key",
          "id"
        ],
        "title": "FeedbackSchema",
        "description": "Schema for getting feedback."
      },
      "FeedbackSource": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id"
          }
        },
        "type": "object",
        "title": "FeedbackSource",
        "description": "The feedback source loaded from the database."
      },
      "FeedbackType": {
        "type": "string",
        "enum": [
          "continuous",
          "categorical",
          "freeform"
        ],
        "title": "FeedbackType",
        "description": "Enum for feedback types."
      },
      "FeedbackUpdateSchema": {
        "properties": {
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "value": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "string"
              },
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "correction": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correction"
          },
          "feedback_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeedbackConfig"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FeedbackUpdateSchema",
        "description": "Schema used for updating feedback"
      },
      "FilterQueryParamsForRunSchema": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "trace": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace"
          },
          "parent_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run"
          },
          "run_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          },
          "session": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session"
          },
          "reference_example": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example"
          },
          "execution_order": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1.0,
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Execution Order"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "is_root": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Root"
          },
          "data_source_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunsFilterDataSourceTypeEnum"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "FilterQueryParamsForRunSchema",
        "description": "Query params for run endpoints."
      },
      "ForkRepoRequest": {
        "properties": {
          "repo_handle": {
            "type": "string",
            "title": "Repo Handle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          }
        },
        "type": "object",
        "required": [
          "repo_handle"
        ],
        "title": "ForkRepoRequest",
        "description": "Fields to fork a repo"
      },
      "GetRepoResponse": {
        "properties": {
          "repo": {
            "$ref": "#/components/schemas/RepoWithLookups"
          }
        },
        "type": "object",
        "required": [
          "repo"
        ],
        "title": "GetRepoResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IdentityPatch": {
        "properties": {
          "read_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Read Only"
          },
          "role_id": {
            "type": "string",
            "format": "uuid",
            "title": "Role Id"
          }
        },
        "type": "object",
        "required": [
          "role_id"
        ],
        "title": "IdentityPatch"
      },
      "InfoGetResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "license_expiration_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "License Expiration Time"
          },
          "batch_ingest_config": {
            "$ref": "#/components/schemas/BatchIngestConfig"
          }
        },
        "type": "object",
        "required": [
          "version"
        ],
        "title": "InfoGetResponse",
        "description": "The LangSmith server info."
      },
      "InvokePromptPayload": {
        "properties": {
          "messages": {
            "items": {
              "prefixItems": [
                {
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Messages"
          },
          "template_format": {
            "type": "string",
            "title": "Template Format"
          },
          "inputs": {
            "type": "object",
            "title": "Inputs"
          }
        },
        "type": "object",
        "required": [
          "messages",
          "template_format",
          "inputs"
        ],
        "title": "InvokePromptPayload"
      },
      "LikeRepoRequest": {
        "properties": {
          "like": {
            "type": "boolean",
            "title": "Like"
          }
        },
        "type": "object",
        "required": [
          "like"
        ],
        "title": "LikeRepoRequest"
      },
      "LikeRepoResponse": {
        "properties": {
          "likes": {
            "type": "integer",
            "title": "Likes"
          }
        },
        "type": "object",
        "required": [
          "likes"
        ],
        "title": "LikeRepoResponse"
      },
      "ListCommentsResponse": {
        "properties": {
          "comments": {
            "items": {
              "$ref": "#/components/schemas/Comment"
            },
            "type": "array",
            "title": "Comments"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "comments",
          "total"
        ],
        "title": "ListCommentsResponse"
      },
      "ListCommitsResponse": {
        "properties": {
          "commits": {
            "items": {
              "$ref": "#/components/schemas/CommitWithLookups"
            },
            "type": "array",
            "title": "Commits"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "commits",
          "total"
        ],
        "title": "ListCommitsResponse"
      },
      "ListPublicDatasetRunsResponse": {
        "properties": {
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunPublicDatasetSchema"
            },
            "type": "array",
            "title": "Runs"
          },
          "cursors": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Cursors"
          },
          "parsed_query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parsed Query"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "cursors"
        ],
        "title": "ListPublicDatasetRunsResponse"
      },
      "ListPublicRunsResponse": {
        "properties": {
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunPublicSchema"
            },
            "type": "array",
            "title": "Runs"
          },
          "cursors": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Cursors"
          },
          "parsed_query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parsed Query"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "cursors"
        ],
        "title": "ListPublicRunsResponse"
      },
      "ListReposResponse": {
        "properties": {
          "repos": {
            "items": {
              "$ref": "#/components/schemas/RepoWithLookups"
            },
            "type": "array",
            "title": "Repos"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          }
        },
        "type": "object",
        "required": [
          "repos",
          "total"
        ],
        "title": "ListReposResponse"
      },
      "ListRunsResponse": {
        "properties": {
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunSchema"
            },
            "type": "array",
            "title": "Runs"
          },
          "cursors": {
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            },
            "type": "object",
            "title": "Cursors"
          },
          "parsed_query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parsed Query"
          }
        },
        "type": "object",
        "required": [
          "runs",
          "cursors"
        ],
        "title": "ListRunsResponse"
      },
      "ListTagsResponse": {
        "properties": {
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagCount"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": [
          "tags"
        ],
        "title": "ListTagsResponse"
      },
      "MetadataKeyValue": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "MetadataKeyValue"
      },
      "ModelFeedbackSource": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type",
            "default": "model"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "ModelFeedbackSource",
        "description": "Model feedback source."
      },
      "ModelPriceMapCreateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "match_path": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Match Path",
            "default": [
              "model",
              "model_name",
              "model_id",
              "model_path",
              "endpoint_name"
            ]
          },
          "match_pattern": {
            "type": "string",
            "title": "Match Pattern"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Completion Cost"
          }
        },
        "type": "object",
        "required": [
          "name",
          "match_pattern",
          "prompt_cost",
          "completion_cost"
        ],
        "title": "ModelPriceMapCreateSchema",
        "description": "Model price map create schema."
      },
      "ModelPriceMapUpdateSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "match_path": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Match Path",
            "default": [
              "model",
              "model_name",
              "model_id",
              "model_path",
              "endpoint_name"
            ]
          },
          "match_pattern": {
            "type": "string",
            "title": "Match Pattern"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Completion Cost"
          }
        },
        "type": "object",
        "required": [
          "name",
          "match_pattern",
          "prompt_cost",
          "completion_cost"
        ],
        "title": "ModelPriceMapUpdateSchema",
        "description": "Model price map update schema."
      },
      "MonitorBlock": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "section": {
            "type": "string",
            "title": "Section"
          },
          "columns": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Columns"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "rows": {
            "items": {
              "items": {},
              "type": "array"
            },
            "type": "array",
            "title": "Rows"
          },
          "chart_spec": {
            "type": "object",
            "title": "Chart Spec"
          },
          "click_target": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Click Target"
          },
          "toggleable_marks": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Toggleable Marks"
          }
        },
        "type": "object",
        "required": [
          "title",
          "section",
          "columns",
          "rows",
          "chart_spec"
        ],
        "title": "MonitorBlock"
      },
      "MonitorGroupSpec": {
        "properties": {
          "session": {
            "type": "string",
            "format": "uuid",
            "title": "Session"
          },
          "tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tag"
          },
          "metadata": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MetadataKeyValue"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "session"
        ],
        "title": "MonitorGroupSpec"
      },
      "MonitorRequest": {
        "properties": {
          "timezone": {
            "type": "string",
            "title": "Timezone",
            "default": "UTC"
          },
          "groups": {
            "items": {
              "$ref": "#/components/schemas/MonitorGroupSpec"
            },
            "type": "array",
            "maxItems": 5,
            "minItems": 1,
            "title": "Groups"
          },
          "interval": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimedeltaInput"
              }
            ],
            "default": {
              "days": 7,
              "minutes": 0,
              "hours": 0
            }
          },
          "stride": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimedeltaInput"
              }
            ],
            "default": {
              "days": 0,
              "minutes": 15,
              "hours": 0
            }
          }
        },
        "type": "object",
        "required": [
          "groups"
        ],
        "title": "MonitorRequest"
      },
      "MonitorResponse": {
        "properties": {
          "blocks": {
            "items": {
              "$ref": "#/components/schemas/MonitorBlock"
            },
            "type": "array",
            "title": "Blocks"
          }
        },
        "type": "object",
        "required": [
          "blocks"
        ],
        "title": "MonitorResponse"
      },
      "Organization": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/TenantConfig"
          },
          "connected_to_stripe": {
            "type": "boolean",
            "title": "Connected To Stripe"
          },
          "connected_to_metronome": {
            "type": "boolean",
            "title": "Connected To Metronome"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentPlanTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "payment_method": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StripePaymentMethodInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_cancelled": {
            "type": "boolean",
            "title": "Has Cancelled"
          },
          "end_of_billing_period": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Of Billing Period"
          },
          "current_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          },
          "upcoming_plan": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CustomerVisiblePlanInfo"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "config",
          "connected_to_stripe",
          "connected_to_metronome",
          "is_personal",
          "has_cancelled"
        ],
        "title": "Organization",
        "description": "Information about an organization."
      },
      "OrganizationDashboardColorScheme": {
        "type": "string",
        "enum": [
          "light",
          "dark"
        ],
        "title": "OrganizationDashboardColorScheme",
        "description": "Enum for acceptable color schemes of dashboards."
      },
      "OrganizationDashboardSchema": {
        "properties": {
          "embeddable_url": {
            "type": "string",
            "title": "Embeddable Url"
          }
        },
        "type": "object",
        "required": [
          "embeddable_url"
        ],
        "title": "OrganizationDashboardSchema",
        "description": "Organization dashboard for usage or invoices."
      },
      "OrganizationDashboardType": {
        "type": "string",
        "enum": [
          "invoices",
          "usage",
          "credits"
        ],
        "title": "OrganizationDashboardType",
        "description": "Enum for acceptable types of dashboards."
      },
      "OrganizationRole": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "display_name",
          "description",
          "permissions"
        ],
        "title": "OrganizationRole"
      },
      "PagerdutySeverity": {
        "type": "string",
        "enum": [
          "critical",
          "warning",
          "error",
          "info"
        ],
        "title": "PagerdutySeverity",
        "description": "Enum for severity."
      },
      "PaymentPlanTier": {
        "type": "string",
        "enum": [
          "no_plan",
          "developer",
          "plus",
          "enterprise",
          "developer_legacy",
          "plus_legacy",
          "free",
          "enterprise_legacy",
          "startup",
          "partner",
          "premier"
        ],
        "title": "PaymentPlanTier"
      },
      "PendingIdentity": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "access_scope": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccessScope"
              }
            ],
            "default": "workspace"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          }
        },
        "type": "object",
        "required": [
          "email",
          "id",
          "created_at"
        ],
        "title": "PendingIdentity"
      },
      "PendingIdentityCreate": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "access_scope": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccessScope"
              }
            ],
            "default": "workspace"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "PendingIdentityCreate"
      },
      "PermissionResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "title": "PermissionResponse"
      },
      "PublicComparativeExperiment": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "title": "Modified At"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "experiments_info": {
            "items": {
              "$ref": "#/components/schemas/SimpleExperimentInfo"
            },
            "type": "array",
            "title": "Experiments Info"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "modified_at",
          "experiments_info"
        ],
        "title": "PublicComparativeExperiment",
        "description": "Publicly-shared ComparativeExperiment schema."
      },
      "PublicExampleWithRuns": {
        "properties": {
          "inputs": {
            "type": "object",
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "source_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Run Id"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "modified_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified At"
          },
          "runs": {
            "items": {
              "$ref": "#/components/schemas/RunPublicDatasetSchema"
            },
            "type": "array",
            "title": "Runs"
          }
        },
        "type": "object",
        "required": [
          "inputs",
          "dataset_id",
          "id",
          "name",
          "runs"
        ],
        "title": "PublicExampleWithRuns",
        "description": "Schema for an example in a publicly-shared dataset with list of runs."
      },
      "PutDatasetVersionsSchema": {
        "properties": {
          "as_of": {
            "type": "string",
            "format": "date-time",
            "title": "As Of"
          },
          "tag": {
            "type": "string",
            "title": "Tag"
          }
        },
        "type": "object",
        "required": [
          "as_of",
          "tag"
        ],
        "title": "PutDatasetVersionsSchema"
      },
      "QueryExampleSchemaWithRuns": {
        "properties": {
          "session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Session Ids"
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 20
          }
        },
        "type": "object",
        "required": [
          "session_ids"
        ],
        "title": "QueryExampleSchemaWithRuns"
      },
      "QueryFeedbackDelta": {
        "properties": {
          "baseline_session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Baseline Session Id"
          },
          "comparison_session_ids": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Comparison Session Ids"
          },
          "feedback_key": {
            "type": "string",
            "title": "Feedback Key"
          },
          "filters": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filters"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 100
          },
          "comparative_experiment_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comparative Experiment Id"
          }
        },
        "type": "object",
        "required": [
          "baseline_session_id",
          "comparison_session_ids",
          "feedback_key"
        ],
        "title": "QueryFeedbackDelta"
      },
      "QueryParamsForPublicRunSchema": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "title": "QueryParamsForPublicRunSchema",
        "description": "Query params for public run endpoints."
      },
      "RepoExampleResponse": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "session_id"
        ],
        "title": "RepoExampleResponse",
        "description": "Response model for example runs"
      },
      "RepoWithLookups": {
        "properties": {
          "repo_handle": {
            "type": "string",
            "title": "Repo Handle"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "is_archived": {
            "type": "boolean",
            "title": "Is Archived"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          },
          "original_repo_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Repo Id"
          },
          "upstream_repo_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upstream Repo Id"
          },
          "num_likes": {
            "type": "integer",
            "title": "Num Likes"
          },
          "num_downloads": {
            "type": "integer",
            "title": "Num Downloads"
          },
          "num_views": {
            "type": "integer",
            "title": "Num Views"
          },
          "owner": {
            "type": "string",
            "title": "Owner"
          },
          "full_name": {
            "type": "string",
            "title": "Full Name"
          },
          "liked_by_auth_user": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Liked By Auth User"
          },
          "last_commit_hash": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Commit Hash"
          },
          "num_commits": {
            "type": "integer",
            "title": "Num Commits"
          },
          "original_repo_full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Original Repo Full Name"
          },
          "upstream_repo_full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Upstream Repo Full Name"
          }
        },
        "type": "object",
        "required": [
          "repo_handle",
          "id",
          "tenant_id",
          "created_at",
          "updated_at",
          "is_public",
          "is_archived",
          "tags",
          "num_likes",
          "num_downloads",
          "num_views",
          "owner",
          "full_name",
          "num_commits"
        ],
        "title": "RepoWithLookups",
        "description": "All database fields for repos, plus helpful computed fields."
      },
      "RequestBodyForRunsGenerateQuery": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query"
          },
          "feedback_keys": {
            "items": {
              "$ref": "#/components/schemas/RunsGenerateQueryFeedbackKeys"
            },
            "type": "array",
            "title": "Feedback Keys"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "RequestBodyForRunsGenerateQuery"
      },
      "ResponseBodyForRunsGenerateQuery": {
        "properties": {
          "filter": {
            "type": "string",
            "title": "Filter"
          },
          "feedback_urls": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Feedback Urls"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "feedback_urls"
        ],
        "title": "ResponseBodyForRunsGenerateQuery"
      },
      "RootModel_Dict_str__list_str___": {
        "additionalProperties": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": "object",
        "title": "RootModel[Dict[str, list[str]]]"
      },
      "RuleLogActionOutcome": {
        "type": "string",
        "enum": [
          "success",
          "skipped",
          "error"
        ],
        "title": "RuleLogActionOutcome"
      },
      "RuleLogActionResponse": {
        "properties": {
          "outcome": {
            "$ref": "#/components/schemas/RuleLogActionOutcome"
          },
          "payload": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Payload"
          }
        },
        "type": "object",
        "required": [
          "outcome"
        ],
        "title": "RuleLogActionResponse"
      },
      "RuleLogSchema": {
        "properties": {
          "rule_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rule Id"
          },
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Name"
          },
          "run_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Type"
          },
          "run_session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Session Id"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "add_to_annotation_queue": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "add_to_dataset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "evaluators": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "alerts": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "webhooks": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RuleLogActionResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "rule_id",
          "run_id",
          "start_time",
          "end_time"
        ],
        "title": "RuleLogSchema",
        "description": "Run rules log schema."
      },
      "RunDateOrder": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "title": "RunDateOrder",
        "description": "Enum for run start date order."
      },
      "RunGroupBy": {
        "type": "string",
        "enum": [
          "conversation"
        ],
        "const": "conversation",
        "title": "RunGroupBy"
      },
      "RunGroupRequest": {
        "properties": {
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "group_by": {
            "$ref": "#/components/schemas/RunGroupBy"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "offset": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Offset",
            "default": 0
          },
          "limit": {
            "type": "integer",
            "maximum": 100.0,
            "minimum": 1.0,
            "title": "Limit",
            "default": 10
          }
        },
        "type": "object",
        "required": [
          "session_id",
          "group_by"
        ],
        "title": "RunGroupRequest"
      },
      "RunGroupStats": {
        "properties": {
          "run_count": {
            "type": "integer",
            "title": "Run Count"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "first_token_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P50"
          },
          "first_token_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P99"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "median_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Median Tokens"
          },
          "last_run_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "run_facets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Facets"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "streaming_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Rate"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "group_count": {
            "type": "integer",
            "title": "Group Count"
          }
        },
        "type": "object",
        "required": [
          "run_count",
          "group_count"
        ],
        "title": "RunGroupStats"
      },
      "RunPublicDatasetSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id"
        ],
        "title": "RunPublicDatasetSchema",
        "description": "Schema for a run in a publicly-shared dataset."
      },
      "RunPublicSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status"
        ],
        "title": "RunPublicSchema"
      },
      "RunRulesAlertType": {
        "type": "string",
        "enum": [
          "pagerduty"
        ],
        "const": "pagerduty",
        "title": "RunRulesAlertType",
        "description": "Enum for alert types."
      },
      "RunRulesCreateSchema": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "sampling_rate": {
            "type": "number",
            "title": "Sampling Rate"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "backfill_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backfill From"
          },
          "add_to_annotation_queue_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Annotation Queue Id"
          },
          "add_to_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Dataset Id"
          },
          "add_to_dataset_prefer_correction": {
            "type": "boolean",
            "title": "Add To Dataset Prefer Correction",
            "default": false
          },
          "evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluators"
          },
          "alerts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesPagerdutyAlertSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alerts"
          },
          "webhooks": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhooks"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "sampling_rate"
        ],
        "title": "RunRulesCreateSchema"
      },
      "RunRulesPagerdutyAlertSchema": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RunRulesAlertType"
              },
              {
                "type": "null"
              }
            ],
            "default": "pagerduty"
          },
          "routing_key": {
            "type": "string",
            "title": "Routing Key"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary"
          },
          "severity": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PagerdutySeverity"
              },
              {
                "type": "null"
              }
            ],
            "default": "warning"
          }
        },
        "type": "object",
        "required": [
          "routing_key"
        ],
        "title": "RunRulesPagerdutyAlertSchema"
      },
      "RunRulesSchema": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "session_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Name"
          },
          "dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Id"
          },
          "dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Name"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "sampling_rate": {
            "type": "number",
            "title": "Sampling Rate"
          },
          "filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filter"
          },
          "trace_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Filter"
          },
          "tree_filter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Filter"
          },
          "add_to_annotation_queue_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Annotation Queue Id"
          },
          "add_to_annotation_queue_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Annotation Queue Name"
          },
          "add_to_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Dataset Id"
          },
          "add_to_dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Add To Dataset Name"
          },
          "add_to_dataset_prefer_correction": {
            "type": "boolean",
            "title": "Add To Dataset Prefer Correction",
            "default": false
          },
          "evaluators": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/EvaluatorTopLevel"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluators"
          },
          "alerts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RunRulesPagerdutyAlertSchema"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Alerts"
          },
          "webhooks": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhooks"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "backfill_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backfill From"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id",
          "display_name",
          "sampling_rate",
          "created_at",
          "updated_at"
        ],
        "title": "RunRulesSchema",
        "description": "Run rules schema."
      },
      "RunSchema": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "app_path": {
            "type": "string",
            "title": "App Path"
          },
          "last_queued_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Queued At"
          },
          "in_dataset": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Dataset"
          },
          "share_token": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Token"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "trace_first_received_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace First Received At"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id",
          "app_path"
        ],
        "title": "RunSchema",
        "description": "Run schema."
      },
      "RunSchemaComparisonView": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "app_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Path"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "id",
          "session_id",
          "status"
        ],
        "title": "RunSchemaComparisonView",
        "description": "Run schema for comparison view."
      },
      "RunSchemaWithAnnotationQueueInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "inputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "run_type": {
            "$ref": "#/components/schemas/RunTypeEnum"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "execution_order": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Execution Order",
            "default": 1
          },
          "serialized": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Serialized"
          },
          "outputs": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "parent_run_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Id"
          },
          "manifest_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest Id"
          },
          "manifest_s3_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Manifest S3 Id"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "inputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs S3 Urls"
          },
          "outputs_s3_urls": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs S3 Urls"
          },
          "trace_id": {
            "type": "string",
            "format": "uuid",
            "title": "Trace Id"
          },
          "dotted_order": {
            "type": "string",
            "title": "Dotted Order"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Run Ids"
          },
          "direct_child_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Direct Child Run Ids"
          },
          "parent_run_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Run Ids"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "object"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "reference_example_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Example Id"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens",
            "default": 0
          },
          "prompt_tokens": {
            "type": "integer",
            "title": "Prompt Tokens",
            "default": 0
          },
          "completion_tokens": {
            "type": "integer",
            "title": "Completion Tokens",
            "default": 0
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "price_model_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Price Model Id"
          },
          "first_token_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token Time"
          },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "app_path": {
            "type": "string",
            "title": "App Path"
          },
          "last_queued_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Queued At"
          },
          "in_dataset": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Dataset"
          },
          "share_token": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Share Token"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "trace_first_received_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace First Received At"
          },
          "ttl_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ttl Seconds"
          },
          "last_reviewed_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Reviewed Time"
          },
          "added_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Added At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "run_type",
          "trace_id",
          "dotted_order",
          "id",
          "status",
          "session_id",
          "app_path"
        ],
        "title": "RunSchemaWithAnnotationQueueInfo",
        "description": "Run schema with annotation queue info."
      },
      "RunSelect": {
        "type": "string",
        "enum": [
          "id",
          "name",
          "run_type",
          "start_time",
          "end_time",
          "status",
          "error",
          "extra",
          "events",
          "inputs",
          "inputs_s3_urls",
          "inputs_or_signed_url",
          "outputs",
          "outputs_s3_urls",
          "outputs_or_signed_url",
          "parent_run_id",
          "manifest_id",
          "manifest_s3_id",
          "session_id",
          "serialized",
          "reference_example_id",
          "total_tokens",
          "prompt_tokens",
          "completion_tokens",
          "total_cost",
          "prompt_cost",
          "completion_cost",
          "price_model_id",
          "first_token_time",
          "trace_id",
          "dotted_order",
          "last_queued_at",
          "feedback_stats",
          "child_run_ids",
          "parent_run_ids",
          "tags",
          "in_dataset",
          "app_path",
          "share_token",
          "trace_tier",
          "trace_first_received_at",
          "ttl_seconds"
        ],
        "title": "RunSelect",
        "description": "Enum for available run columns."
      },
      "RunShareSchema": {
        "properties": {
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "share_token": {
            "type": "string",
            "format": "uuid",
            "title": "Share Token"
          }
        },
        "type": "object",
        "required": [
          "run_id",
          "share_token"
        ],
        "title": "RunShareSchema"
      },
      "RunStats": {
        "properties": {
          "run_count": {
            "type": "integer",
            "title": "Run Count"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "first_token_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P50"
          },
          "first_token_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P99"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "median_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Median Tokens"
          },
          "last_run_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "run_facets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Facets"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "streaming_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Rate"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          }
        },
        "type": "object",
        "required": [
          "run_count"
        ],
        "title": "RunStats"
      },
      "RunTypeEnum": {
        "type": "string",
        "enum": [
          "tool",
          "chain",
          "llm",
          "retriever",
          "embedding",
          "prompt",
          "parser"
        ],
        "title": "RunTypeEnum",
        "description": "Enum for run types."
      },
      "RunsFilterDataSourceTypeEnum": {
        "type": "string",
        "enum": [
          "current",
          "historical"
        ],
        "title": "RunsFilterDataSourceTypeEnum",
        "description": "Enum for run data source types."
      },
      "RunsGenerateQueryFeedbackKeys": {
        "type": "string",
        "enum": [
          "user_score",
          "user_edited",
          "user_removed",
          "user_opened_run",
          "user_selected_run",
          "results_size",
          "valid_filter"
        ],
        "title": "RunsGenerateQueryFeedbackKeys"
      },
      "SecretKey": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "type": "object",
        "required": [
          "key"
        ],
        "title": "SecretKey"
      },
      "SecretUpsert": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "title": "SecretUpsert"
      },
      "SessionFeedbackDelta": {
        "properties": {
          "feedback_deltas": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FeedbackDelta"
            },
            "type": "object",
            "title": "Feedback Deltas"
          }
        },
        "type": "object",
        "required": [
          "feedback_deltas"
        ],
        "title": "SessionFeedbackDelta",
        "description": "List of feedback keys with number of improvements and regressions for each."
      },
      "SessionSortableColumns": {
        "type": "string",
        "enum": [
          "name",
          "start_time",
          "last_run_start_time",
          "latency_p50",
          "latency_p99",
          "error_rate",
          "feedback"
        ],
        "title": "SessionSortableColumns"
      },
      "SetTenantHandleRequest": {
        "properties": {
          "tenant_handle": {
            "type": "string",
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "tenant_handle"
        ],
        "title": "SetTenantHandleRequest"
      },
      "SimpleExperimentInfo": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "title": "SimpleExperimentInfo",
        "description": "Simple experiment info schema for use with comparative experiments"
      },
      "SortByComparativeExperimentColumn": {
        "type": "string",
        "enum": [
          "name",
          "created_at"
        ],
        "title": "SortByComparativeExperimentColumn",
        "description": "Enum for available comparative experiment columns to sort by."
      },
      "SortByDatasetColumn": {
        "type": "string",
        "enum": [
          "name",
          "created_at",
          "last_session_start_time",
          "example_count",
          "session_count"
        ],
        "title": "SortByDatasetColumn",
        "description": "Enum for available dataset columns to sort by."
      },
      "SourceType": {
        "type": "string",
        "enum": [
          "api",
          "model",
          "app"
        ],
        "title": "SourceType",
        "description": "Enum for feedback source types."
      },
      "StripeCustomerAddress": {
        "properties": {
          "line1": {
            "type": "string",
            "title": "Line1"
          },
          "line2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Line2"
          },
          "city": {
            "type": "string",
            "title": "City"
          },
          "state": {
            "type": "string",
            "title": "State"
          },
          "postal_code": {
            "type": "string",
            "title": "Postal Code"
          },
          "country": {
            "type": "string",
            "title": "Country"
          }
        },
        "type": "object",
        "required": [
          "line1",
          "city",
          "state",
          "postal_code",
          "country"
        ],
        "title": "StripeCustomerAddress",
        "description": "Stripe customer address."
      },
      "StripeCustomerBillingInfo": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name"
          },
          "address": {
            "$ref": "#/components/schemas/StripeCustomerAddress"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          }
        },
        "type": "object",
        "required": [
          "name",
          "address"
        ],
        "title": "StripeCustomerBillingInfo",
        "description": "Stripe customer billing information."
      },
      "StripePaymentInformation": {
        "properties": {
          "billing_info": {
            "$ref": "#/components/schemas/StripeCustomerBillingInfo"
          },
          "setup_intent": {
            "type": "string",
            "title": "Setup Intent"
          }
        },
        "type": "object",
        "required": [
          "billing_info",
          "setup_intent"
        ],
        "title": "StripePaymentInformation",
        "description": "Stripe payment information."
      },
      "StripePaymentMethodInfo": {
        "properties": {
          "brand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brand"
          },
          "last4": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last4"
          },
          "exp_month": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exp Month"
          },
          "exp_year": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exp Year"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "StripePaymentMethodInfo",
        "description": "Stripe customer billing info."
      },
      "StripeSetupIntentResponse": {
        "properties": {
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "client_secret"
        ],
        "title": "StripeSetupIntentResponse",
        "description": "Stripe setup intent response."
      },
      "TTLSettings": {
        "properties": {
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "default_trace_tier": {
            "$ref": "#/components/schemas/TraceTier"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "type": "string",
            "format": "uuid",
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "configured_by": {
            "$ref": "#/components/schemas/ConfiguredBy"
          }
        },
        "type": "object",
        "required": [
          "default_trace_tier",
          "id",
          "organization_id",
          "created_at",
          "updated_at",
          "configured_by"
        ],
        "title": "TTLSettings",
        "description": "TTL settings model."
      },
      "TagCount": {
        "properties": {
          "tag": {
            "type": "string",
            "title": "Tag"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "tag",
          "count"
        ],
        "title": "TagCount"
      },
      "TenantBulkUnshareRequest": {
        "properties": {
          "share_tokens": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "minItems": 1,
            "title": "Share Tokens"
          }
        },
        "type": "object",
        "title": "TenantBulkUnshareRequest"
      },
      "TenantConfig": {
        "properties": {
          "max_identities": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Identities"
          },
          "max_hourly_tracing_requests": {
            "type": "integer",
            "title": "Max Hourly Tracing Requests",
            "default": 105000
          },
          "max_hourly_tracing_bytes": {
            "type": "integer",
            "title": "Max Hourly Tracing Bytes",
            "default": 2000000000
          },
          "max_monthly_total_unique_traces": {
            "type": "integer",
            "title": "Max Monthly Total Unique Traces",
            "default": 10000000
          },
          "max_events_ingested_per_minute": {
            "type": "integer",
            "title": "Max Events Ingested Per Minute",
            "default": 20000
          },
          "max_run_rules": {
            "type": "integer",
            "title": "Max Run Rules",
            "default": 25
          },
          "can_use_rbac": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Use Rbac"
          },
          "can_add_seats": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Add Seats"
          },
          "can_add_workspaces": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Can Add Workspaces"
          },
          "startup_plan_approval_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Startup Plan Approval Date"
          },
          "partner_plan_approval_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Plan Approval Date"
          },
          "premier_plan_approval_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Premier Plan Approval Date"
          },
          "flags": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Flags",
            "default": {
              "playground_runnables": false,
              "hosted_langserve_enabled": false,
              "payment_enabled": false,
              "run_rules_enabled": false,
              "conversation_view_enabled": false,
              "usage_reporting_enabled": false,
              "show_upgrade_billing_ui": false,
              "rbac_enabled": false,
              "pat_enabled": false,
              "show_ttl_ui": false
            }
          }
        },
        "type": "object",
        "title": "TenantConfig",
        "description": "While this is called TenantConfig, when it is used for checking config values, it is the fully resolved config\nwith organization config values set as well (along with Metronome config values).\n\nDefaults set here are the defaults for tenants.config in the database.\nOrganization-specific config should be None by default here and set in the OrganizationConfig class."
      },
      "TenantCreate": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "display_name": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9\\-_ ]+$",
            "title": "Display Name"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "display_name"
        ],
        "title": "TenantCreate",
        "description": "Creation model for the tenant."
      },
      "TenantForUser": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only",
            "default": false
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "display_name",
          "is_personal"
        ],
        "title": "TenantForUser"
      },
      "TenantMemberIdentity": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "user_id": {
            "type": "string",
            "format": "uuid",
            "title": "User Id"
          },
          "read_only": {
            "type": "boolean",
            "title": "Read Only"
          },
          "role_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Id"
          },
          "role_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Name"
          },
          "access_scope": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccessScope"
              }
            ],
            "default": "workspace"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name"
          },
          "avatar_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Avatar Url"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "user_id",
          "read_only"
        ],
        "title": "TenantMemberIdentity"
      },
      "TenantMembers": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "members": {
            "items": {
              "$ref": "#/components/schemas/TenantMemberIdentity"
            },
            "type": "array",
            "title": "Members"
          },
          "pending": {
            "items": {
              "$ref": "#/components/schemas/PendingIdentity"
            },
            "type": "array",
            "title": "Pending"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "members",
          "pending"
        ],
        "title": "TenantMembers",
        "description": "Tenant members schema."
      },
      "TenantShareDatasetToken": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "dataset"
            ],
            "const": "dataset",
            "title": "Type"
          },
          "share_token": {
            "type": "string",
            "title": "Share Token"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "dataset_id": {
            "type": "string",
            "format": "uuid",
            "title": "Dataset Id"
          },
          "dataset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "share_token",
          "created_at",
          "dataset_id"
        ],
        "title": "TenantShareDatasetToken"
      },
      "TenantShareRunToken": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "run"
            ],
            "const": "run",
            "title": "Type"
          },
          "share_token": {
            "type": "string",
            "title": "Share Token"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "run_id": {
            "type": "string",
            "format": "uuid",
            "title": "Run Id"
          },
          "run_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Name"
          },
          "run_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Type"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id"
          },
          "session_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Name"
          }
        },
        "type": "object",
        "required": [
          "type",
          "share_token",
          "created_at",
          "run_id"
        ],
        "title": "TenantShareRunToken"
      },
      "TenantShareTokensResponse": {
        "properties": {
          "entities": {
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/TenantShareRunToken"
                },
                {
                  "$ref": "#/components/schemas/TenantShareDatasetToken"
                }
              ],
              "discriminator": {
                "propertyName": "type",
                "mapping": {
                  "dataset": "#/components/schemas/TenantShareDatasetToken",
                  "run": "#/components/schemas/TenantShareRunToken"
                }
              }
            },
            "type": "array",
            "title": "Entities"
          }
        },
        "type": "object",
        "required": [
          "entities"
        ],
        "title": "TenantShareTokensResponse"
      },
      "TenantStats": {
        "properties": {
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "dataset_count": {
            "type": "integer",
            "title": "Dataset Count"
          },
          "tracer_session_count": {
            "type": "integer",
            "title": "Tracer Session Count"
          },
          "repo_count": {
            "type": "integer",
            "title": "Repo Count"
          },
          "annotation_queue_count": {
            "type": "integer",
            "title": "Annotation Queue Count"
          }
        },
        "type": "object",
        "required": [
          "tenant_id",
          "dataset_count",
          "tracer_session_count",
          "repo_count",
          "annotation_queue_count"
        ],
        "title": "TenantStats",
        "description": "Stats for a tenant."
      },
      "TenantUsageLimitInfo": {
        "properties": {
          "in_reject_set": {
            "type": "boolean",
            "title": "In Reject Set"
          },
          "usage_limit_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TenantUsageLimitType"
              },
              {
                "type": "null"
              }
            ]
          },
          "tenant_limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Limit"
          }
        },
        "type": "object",
        "required": [
          "in_reject_set"
        ],
        "title": "TenantUsageLimitInfo"
      },
      "TenantUsageLimitType": {
        "type": "string",
        "enum": [
          "payload_size",
          "events_ingested_per_hour",
          "total_unique_traces",
          "events_ingested_per_minute",
          "user_defined_monthly_traces",
          "user_defined_monthly_longlived_traces",
          "user_defined_unknown"
        ],
        "title": "TenantUsageLimitType"
      },
      "TimedeltaInput": {
        "properties": {
          "days": {
            "type": "integer",
            "title": "Days",
            "default": 0
          },
          "minutes": {
            "type": "integer",
            "title": "Minutes",
            "default": 0
          },
          "hours": {
            "type": "integer",
            "title": "Hours",
            "default": 0
          }
        },
        "type": "object",
        "title": "TimedeltaInput",
        "description": "Timedelta input."
      },
      "TraceTier": {
        "type": "string",
        "enum": [
          "longlived",
          "shortlived"
        ],
        "title": "TraceTier"
      },
      "TracerSession": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "run_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Count"
          },
          "latency_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P50"
          },
          "latency_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency P99"
          },
          "first_token_p50": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P50"
          },
          "first_token_p99": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Token P99"
          },
          "total_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Tokens"
          },
          "prompt_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Tokens"
          },
          "completion_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Tokens"
          },
          "total_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Cost"
          },
          "prompt_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt Cost"
          },
          "completion_cost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completion Cost"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "last_run_start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time"
          },
          "last_run_start_time_live": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time Live"
          },
          "feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Stats"
          },
          "session_feedback_stats": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Feedback Stats"
          },
          "run_facets": {
            "anyOf": [
              {
                "items": {
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Run Facets"
          },
          "error_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Rate"
          },
          "streaming_rate": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Streaming Rate"
          },
          "test_run_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Test Run Number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id"
        ],
        "title": "TracerSession",
        "description": "TracerSession schema."
      },
      "TracerSessionCreate": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "title": "TracerSessionCreate",
        "description": "Create class for TracerSession."
      },
      "TracerSessionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "TracerSessionUpdate",
        "description": "Update class for TracerSession."
      },
      "TracerSessionWithoutVirtualFields": {
        "properties": {
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "extra": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "default_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Dataset Id"
          },
          "reference_dataset_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Dataset Id"
          },
          "trace_tier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TraceTier"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "last_run_start_time_live": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run Start Time Live"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tenant_id"
        ],
        "title": "TracerSessionWithoutVirtualFields",
        "description": "TracerSession schema."
      },
      "UpdateRepoRequest": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "readme": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Readme"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "is_public": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Public"
          },
          "is_archived": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Archived"
          }
        },
        "type": "object",
        "title": "UpdateRepoRequest",
        "description": "Fields to update a repo"
      },
      "UpdateRoleRequest": {
        "properties": {
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": [
          "display_name",
          "description",
          "permissions"
        ],
        "title": "UpdateRoleRequest"
      },
      "UpsertTTLSettingsRequest": {
        "properties": {
          "tenant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Id"
          },
          "default_trace_tier": {
            "$ref": "#/components/schemas/TraceTier"
          }
        },
        "type": "object",
        "required": [
          "default_trace_tier"
        ],
        "title": "UpsertTTLSettingsRequest",
        "description": "Base TTL settings model."
      },
      "UpsertUsageLimit": {
        "properties": {
          "limit_type": {
            "$ref": "#/components/schemas/UsageLimitType"
          },
          "limit_value": {
            "type": "integer",
            "title": "Limit Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "limit_type",
          "limit_value"
        ],
        "title": "UpsertUsageLimit",
        "description": "Request body for creating or updating a usage limit."
      },
      "UsageLimit": {
        "properties": {
          "limit_type": {
            "$ref": "#/components/schemas/UsageLimitType"
          },
          "limit_value": {
            "type": "integer",
            "title": "Limit Value"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tenant_id": {
            "type": "string",
            "format": "uuid",
            "title": "Tenant Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "limit_type",
          "limit_value",
          "tenant_id",
          "created_at",
          "updated_at"
        ],
        "title": "UsageLimit",
        "description": "Usage limit model."
      },
      "UsageLimitType": {
        "type": "string",
        "enum": [
          "monthly_traces",
          "monthly_longlived_traces"
        ],
        "title": "UsageLimitType",
        "description": "Type of usage limit."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__hub__crud__tenants__Tenant": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "id",
          "display_name",
          "created_at"
        ],
        "title": "Tenant"
      },
      "app__schemas__Tenant": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          },
          "is_personal": {
            "type": "boolean",
            "title": "Is Personal"
          },
          "tenant_handle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant Handle"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "display_name",
          "is_personal"
        ],
        "title": "Tenant",
        "description": "Tenant schema."
      },
      "CreateRunRequest": {
        "required": [
          "name",
          "run_type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "inputs": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "run_type": {
            "type": "string",
            "enum": [
              "tool",
              "chain",
              "llm",
              "retriever",
              "embedding",
              "prompt",
              "parser"
            ]
          },
          "start_time": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "end_time": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "extra": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "error": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "serialized": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "outputs": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent_run_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "events": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "trace_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "dotted_order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "session_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "session_name": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "reference_example_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "input_attachments": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "output_attachments": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "BatchIngestRunsRequest": {
        "type": "object",
        "properties": {
          "post": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "trace_id",
                "dotted_order",
                "start_time",
                "name",
                "run_type"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "inputs": {
                  "type": "object"
                },
                "run_type": {
                  "type": "string",
                  "enum": [
                    "tool",
                    "chain",
                    "llm",
                    "retriever",
                    "embedding",
                    "prompt",
                    "parser"
                  ]
                },
                "start_time": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "end_time": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "extra": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "error": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "serialized": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "outputs": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "parent_run_id": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uuid"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "events": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "tags": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "trace_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "dotted_order": {
                  "type": "string"
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "session_id": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uuid"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "session_name": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "reference_example_id": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uuid"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "input_attachments": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "output_attachments": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "patch": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "trace_id",
                "dotted_order",
                "end_time"
              ],
              "type": "object",
              "properties": {
                "trace_id": {
                  "type": "string",
                  "format": "uuid"
                },
                "dotted_order": {
                  "type": "string"
                },
                "parent_run_id": {
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "uuid"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "end_time": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "error": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "inputs": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "outputs": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "events": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "tags": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "extra": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "input_attachments": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "output_attachments": {
                  "oneOf": [
                    {
                      "type": "object"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        },
        "description": "Schema for a batch of runs to be ingested."
      },
      "UpdateRunRequest": {
        "type": "object",
        "properties": {
          "trace_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "dotted_order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "parent_run_id": {
            "oneOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ]
          },
          "end_time": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ]
          },
          "error": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "inputs": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "outputs": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "events": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "tags": {
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "null"
              }
            ]
          },
          "extra": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "input_attachments": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          },
          "output_attachments": {
            "oneOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "API Key": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      },
      "Tenant ID": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Tenant-Id"
      },
      "Bearer Auth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}