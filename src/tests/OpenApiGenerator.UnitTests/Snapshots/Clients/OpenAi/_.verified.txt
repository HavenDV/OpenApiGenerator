[
  {
    Id: CreateChatCompletion,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /chat/completions,
    Properties: [
      {
        Id: messages,
        Name: Messages,
        Type: global::System.Collections.Generic.IList<ChatCompletionRequestMessage>,
        IsRequired: true,
        Summary: A list of messages comprising the conversation so far. [Example Python code](https://cookbook.openai.com/examples/how_to_format_inputs_to_chatgpt_models).
      },
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. See the [model endpoint compatibility](/docs/models/model-endpoint-compatibility) table for details on which models work with the Chat API.
<br/>Example: gpt-4-turbo
      },
      {
        Id: frequency_penalty,
        Name: FrequencyPenalty,
        Type: double?,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.

[See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details)

<br/>Default Value: 0
      },
      {
        Id: logit_bias,
        Name: LogitBias,
        Type: CreateChatCompletionRequestLogitBias?,
        IsRequired: false,
        Summary:
Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.

<br/>Default Value: 
      },
      {
        Id: logprobs,
        Name: Logprobs,
        Type: bool?,
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the `content` of `message`.
<br/>Default Value: false
      },
      {
        Id: top_logprobs,
        Name: TopLogprobs,
        Type: int?,
        IsRequired: false,
        Summary: An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. `logprobs` must be set to `true` if this parameter is used.
      },
      {
        Id: max_tokens,
        Name: MaxTokens,
        Type: int?,
        IsRequired: false,
        Summary:
The maximum number of [tokens](/tokenizer) that can be generated in the chat completion.

The total length of input tokens and generated tokens is limited by the model's context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.

      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep `n` as `1` to minimize costs.
<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: presence_penalty,
        Name: PresencePenalty,
        Type: double?,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.

[See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details)

<br/>Default Value: 0
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: CreateChatCompletionRequestResponseFormat?,
        IsRequired: false,
        Summary:
An object specifying the format that the model must output. Compatible with [GPT-4 Turbo](/docs/models/gpt-4-and-gpt-4-turbo) and all GPT-3.5 Turbo models newer than `gpt-3.5-turbo-1106`.

Setting to `{ "type": "json_object" }` enables JSON mode, which guarantees the message the model generates is valid JSON.

**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.

      },
      {
        Id: seed,
        Name: Seed,
        Type: int?,
        IsRequired: false,
        Summary:
This feature is in Beta.
If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result.
Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.

      },
      {
        Id: stop,
        Name: Stop,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
Up to 4 sequences where the API will stop generating further tokens.

<br/>Default Value: 
      },
      {
        Id: stream,
        Name: Stream,
        Type: bool?,
        IsRequired: false,
        DefaultValue: false,
        Summary:
If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a `data: [DONE]` message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).

<br/>Default Value: false
      },
      {
        Id: stream_options,
        Name: StreamOptions,
        Type: ChatCompletionStreamOptions?,
        IsRequired: false,
        Summary:
Options for streaming response. Only set this when you set `stream: true`.

<br/>Default Value: 
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

We generally recommend altering this or `top_p` but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: top_p,
        Name: TopP,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or `temperature` but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<ChatCompletionTool?>?,
        IsRequired: false,
        Summary:
A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported.

      },
      {
        Id: tool_choice,
        Name: ToolChoice,
        Type: ChatCompletionToolChoiceOption?,
        IsRequired: false,
        Summary:
Controls which (if any) tool is called by the model.
`none` means the model will not call any tool and instead generates a message.
`auto` means the model can pick between generating a message or calling one or more tools.
`required` means the model must call one or more tools.
Specifying a particular tool via `{"type": "function", "function": {"name": "my_function"}}` forces the model to call that tool.

`none` is the default when no tools are present. `auto` is the default if tools are present.

      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      },
      {
        Id: function_call,
        Name: FunctionCall,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
Deprecated in favor of `tool_choice`.

Controls which (if any) function is called by the model.
`none` means the model will not call a function and instead generates a message.
`auto` means the model can pick between generating a message or calling a function.
Specifying a particular function via `{"name": "my_function"}` forces the model to call that function.

`none` is the default when no functions are present. `auto` is the default if functions are present.

      },
      {
        Id: functions,
        Name: Functions,
        Type: global::System.Collections.Generic.IList<ChatCompletionFunctions?>?,
        IsRequired: false,
        Summary:
Deprecated in favor of `tools`.

A list of functions the model may generate JSON inputs for.

      }
    ],
    HttpMethod: Post,
    Summary: Creates a model response for the given chat conversation.,
    RequestType: CreateChatCompletionRequest,
    ResponseType: CreateChatCompletionResponse,
    MethodName: CreateChatCompletionAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateChatCompletion
  },
  {
    Id: CreateCompletion,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /completions,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.

      },
      {
        Id: prompt,
        Name: Prompt,
        Type: object?,
        IsRequired: true,
        DefaultValue: ,
        Summary:
The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.

Note that &lt;|endoftext|&gt; is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document.

<br/>Default Value: &lt;|endoftext|&gt;
      },
      {
        Id: best_of,
        Name: BestOf,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
Generates `best_of` completions server-side and returns the "best" (the one with the highest log probability per token). Results cannot be streamed.

When used with `n`, `best_of` controls the number of candidate completions and `n` specifies how many to return – `best_of` must be greater than `n`.

**Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.

<br/>Default Value: 1
      },
      {
        Id: echo,
        Name: Echo,
        Type: bool?,
        IsRequired: false,
        DefaultValue: false,
        Summary:
Echo back the prompt in addition to the completion

<br/>Default Value: false
      },
      {
        Id: frequency_penalty,
        Name: FrequencyPenalty,
        Type: double?,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.

[See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details)

<br/>Default Value: 0
      },
      {
        Id: logit_bias,
        Name: LogitBias,
        Type: CreateCompletionRequestLogitBias?,
        IsRequired: false,
        Summary:
Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.

As an example, you can pass `{"50256": -100}` to prevent the &lt;|endoftext|&gt; token from being generated.

<br/>Default Value: 
      },
      {
        Id: logprobs,
        Name: Logprobs,
        Type: int?,
        IsRequired: false,
        Summary:
Include the log probabilities on the `logprobs` most likely output tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.

The maximum value for `logprobs` is 5.

<br/>Default Value: 
      },
      {
        Id: max_tokens,
        Name: MaxTokens,
        Type: int?,
        IsRequired: false,
        DefaultValue: 16,
        Summary:
The maximum number of [tokens](/tokenizer) that can be generated in the completion.

The token count of your prompt plus `max_tokens` cannot exceed the model's context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.

<br/>Default Value: 16
<br/>Example: 16
      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
How many completions to generate for each prompt.

**Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: presence_penalty,
        Name: PresencePenalty,
        Type: double?,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.

[See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details)

<br/>Default Value: 0
      },
      {
        Id: seed,
        Name: Seed,
        Type: int?,
        IsRequired: false,
        Summary:
If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result.

Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.

      },
      {
        Id: stop,
        Name: Stop,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.

<br/>Default Value: 
      },
      {
        Id: stream,
        Name: Stream,
        Type: bool?,
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to stream back partial progress. If set, tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a `data: [DONE]` message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).

<br/>Default Value: false
      },
      {
        Id: stream_options,
        Name: StreamOptions,
        Type: ChatCompletionStreamOptions?,
        IsRequired: false,
        Summary:
Options for streaming response. Only set this when you set `stream: true`.

<br/>Default Value: 
      },
      {
        Id: suffix,
        Name: Suffix,
        Type: string?,
        IsRequired: false,
        Summary:
The suffix that comes after a completion of inserted text.

This parameter is only supported for `gpt-3.5-turbo-instruct`.

<br/>Default Value: 
<br/>Example: test.
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

We generally recommend altering this or `top_p` but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: top_p,
        Name: TopP,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or `temperature` but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    HttpMethod: Post,
    Summary: Creates a completion for the provided prompt and parameters.,
    RequestType: CreateCompletionRequest,
    ResponseType: CreateCompletionResponse,
    MethodName: CreateCompletionAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateCompletion
  },
  {
    Id: CreateImage,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /images/generations,
    Properties: [
      {
        Id: prompt,
        Name: Prompt,
        Type: string,
        IsRequired: true,
        Summary:
A text description of the desired image(s). The maximum length is 1000 characters for `dall-e-2` and 4000 characters for `dall-e-3`.
<br/>Example: A cute baby sea otter
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
The model to use for image generation.
<br/>Default Value: dall-e-2
<br/>Example: dall-e-3
      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported.
<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: quality,
        Name: Quality,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateImageRequestQuality.Standard,
        Summary:
The quality of the image that will be generated. `hd` creates images with finer details and greater consistency across the image. This param is only supported for `dall-e-3`.
<br/>Default Value: standard
<br/>Example: standard
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateImageRequestResponseFormat.Url,
        Summary:
The format in which the generated images are returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes after the image has been generated.
<br/>Default Value: url
<br/>Example: url
      },
      {
        Id: size,
        Name: Size,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateImageRequestSize._1024x1024,
        Summary:
The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3` models.
<br/>Default Value: 1024x1024
<br/>Example: 1024x1024
      },
      {
        Id: style,
        Name: Style,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateImageRequestStyle.Vivid,
        Summary:
The style of the generated images. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for `dall-e-3`.
<br/>Default Value: vivid
<br/>Example: vivid
      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    HttpMethod: Post,
    Summary: Creates an image given a prompt.,
    RequestType: CreateImageRequest,
    ResponseType: ImagesResponse,
    MethodName: CreateImageAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateImage
  },
  {
    Id: CreateImageEdit,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /images/edits,
    Properties: [
      {
        Id: image,
        Name: Image,
        Type: byte[],
        IsRequired: true,
        Summary: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.
      },
      {
        Id: prompt,
        Name: Prompt,
        Type: string,
        IsRequired: true,
        Summary:
A text description of the desired image(s). The maximum length is 1000 characters.
<br/>Example: A cute baby sea otter wearing a beret
      },
      {
        Id: mask,
        Name: Mask,
        Type: byte[]?,
        IsRequired: false,
        Summary: An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where `image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as `image`.
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
The model to use for image generation. Only `dall-e-2` is supported at this time.
<br/>Default Value: dall-e-2
<br/>Example: dall-e-2
      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
The number of images to generate. Must be between 1 and 10.
<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: size,
        Name: Size,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateImageEditRequestSize._1024x1024,
        Summary:
The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
<br/>Default Value: 1024x1024
<br/>Example: 1024x1024
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateImageEditRequestResponseFormat.Url,
        Summary:
The format in which the generated images are returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes after the image has been generated.
<br/>Default Value: url
<br/>Example: url
      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    HttpMethod: Post,
    Summary: Creates an edited or extended image given an original image and a prompt.,
    RequestType: CreateImageEditRequest,
    ResponseType: ImagesResponse,
    MethodName: CreateImageEditAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateImageEdit
  },
  {
    Id: CreateImageVariation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /images/variations,
    Properties: [
      {
        Id: image,
        Name: Image,
        Type: byte[],
        IsRequired: true,
        Summary: The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
The model to use for image generation. Only `dall-e-2` is supported at this time.
<br/>Default Value: dall-e-2
<br/>Example: dall-e-2
      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported.
<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateImageVariationRequestResponseFormat.Url,
        Summary:
The format in which the generated images are returned. Must be one of `url` or `b64_json`. URLs are only valid for 60 minutes after the image has been generated.
<br/>Default Value: url
<br/>Example: url
      },
      {
        Id: size,
        Name: Size,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateImageVariationRequestSize._1024x1024,
        Summary:
The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
<br/>Default Value: 1024x1024
<br/>Example: 1024x1024
      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    HttpMethod: Post,
    Summary: Creates a variation of a given image.,
    RequestType: CreateImageVariationRequest,
    ResponseType: ImagesResponse,
    MethodName: CreateImageVariationAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateImageVariation
  },
  {
    Id: CreateEmbedding,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /embeddings,
    Properties: [
      {
        Id: input,
        Name: Input,
        Type: object,
        IsRequired: true,
        Summary:
Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays. The input must not exceed the max input tokens for the model (8192 tokens for `text-embedding-ada-002`), cannot be an empty string, and any array must be 2048 dimensions or less. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.

<br/>Example: The quick brown fox jumped over the lazy dog
      },
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.

<br/>Example: text-embedding-3-small
      },
      {
        Id: encoding_format,
        Name: EncodingFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateEmbeddingRequestEncodingFormat.Float,
        Summary:
The format to return the embeddings in. Can be either `float` or [`base64`](https://pypi.org/project/pybase64/).
<br/>Default Value: float
<br/>Example: float
      },
      {
        Id: dimensions,
        Name: Dimensions,
        Type: int,
        IsRequired: false,
        Summary:
The number of dimensions the resulting output embeddings should have. Only supported in `text-embedding-3` and later models.

      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    HttpMethod: Post,
    Summary: Creates an embedding vector representing the input text.,
    RequestType: CreateEmbeddingRequest,
    ResponseType: CreateEmbeddingResponse,
    MethodName: CreateEmbeddingAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateEmbedding
  },
  {
    Id: CreateSpeech,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /audio/speech,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
One of the available [TTS models](/docs/models/tts): `tts-1` or `tts-1-hd`

      },
      {
        Id: input,
        Name: Input,
        Type: string,
        IsRequired: true,
        Summary: The text to generate audio for. The maximum length is 4096 characters.
      },
      {
        Id: voice,
        Name: Voice,
        Type: string,
        IsRequired: true,
        Summary: The voice to use when generating the audio. Supported voices are `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`. Previews of the voices are available in the [Text to speech guide](/docs/guides/text-to-speech/voice-options).
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateSpeechRequestResponseFormat.Mp3,
        Summary:
The format to audio in. Supported formats are `mp3`, `opus`, `aac`, `flac`, `wav`, and `pcm`.
<br/>Default Value: mp3
      },
      {
        Id: speed,
        Name: Speed,
        Type: double,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
The speed of the generated audio. Select a value from `0.25` to `4.0`. `1.0` is the default.
<br/>Default Value: 1
      }
    ],
    HttpMethod: Post,
    Summary: Generates audio from the input text.,
    RequestType: CreateSpeechRequest,
    ResponseType: ,
    MethodName: CreateSpeechAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateSpeech
  },
  {
    Id: CreateTranscription,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /audio/transcriptions,
    Properties: [
      {
        Id: file,
        Name: File,
        Type: byte[],
        IsRequired: true,
        Summary:
The audio file object (not file name) to transcribe, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

      },
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. Only `whisper-1` (which is powered by our open source Whisper V2 model) is currently available.

<br/>Example: whisper-1
      },
      {
        Id: language,
        Name: Language,
        Type: string?,
        IsRequired: false,
        Summary:
The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.

      },
      {
        Id: prompt,
        Name: Prompt,
        Type: string?,
        IsRequired: false,
        Summary:
An optional text to guide the model's style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.

      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: CreateTranscriptionRequestResponseFormat.Json,
        Summary:
The format of the transcript output, in one of these options: `json`, `text`, `srt`, `verbose_json`, or `vtt`.

<br/>Default Value: json
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.

<br/>Default Value: 0
      }
    ],
    HttpMethod: Post,
    Summary: Transcribes audio into the input language.,
    RequestType: CreateTranscriptionRequest,
    ResponseType: ,
    MethodName: CreateTranscriptionAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateTranscription
  },
  {
    Id: CreateTranslation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /audio/translations,
    Properties: [
      {
        Id: file,
        Name: File,
        Type: byte[],
        IsRequired: true,
        Summary:
The audio file object (not file name) translate, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

      },
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. Only `whisper-1` (which is powered by our open source Whisper V2 model) is currently available.

<br/>Example: whisper-1
      },
      {
        Id: prompt,
        Name: Prompt,
        Type: string?,
        IsRequired: false,
        Summary:
An optional text to guide the model's style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.

      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: "json",
        Summary:
The format of the transcript output, in one of these options: `json`, `text`, `srt`, `verbose_json`, or `vtt`.

<br/>Default Value: json
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.

<br/>Default Value: 0
      }
    ],
    HttpMethod: Post,
    Summary: Translates audio into English.,
    RequestType: CreateTranslationRequest,
    ResponseType: ,
    MethodName: CreateTranslationAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateTranslation
  },
  {
    Id: ListFiles,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /files,
    Properties: null,
    Summary: Returns a list of files that belong to the user's organization.,
    RequestType: ,
    ResponseType: ListFilesResponse,
    MethodName: ListFilesAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListFiles
  },
  {
    Id: CreateFile,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /files,
    Properties: [
      {
        Id: file,
        Name: File,
        Type: byte[],
        IsRequired: true,
        Summary:
The File object (not file name) to be uploaded.

      },
      {
        Id: purpose,
        Name: Purpose,
        Type: string,
        IsRequired: true,
        Summary:
The intended purpose of the uploaded file.

Use "assistants" for [Assistants](/docs/api-reference/assistants) and [Message](/docs/api-reference/messages) files, "vision" for Assistants image file inputs, "batch" for [Batch API](/docs/guides/batch), and "fine-tune" for [Fine-tuning](/docs/api-reference/fine-tuning).

      }
    ],
    HttpMethod: Post,
    Summary:
Upload a file that can be used across various endpoints. The size of all the files uploaded by one organization can be up to 100 GB.

The size of individual files can be a maximum of 512 MB or 2 million tokens for Assistants. See the [Assistants Tools guide](/docs/assistants/tools) to learn more about the types of files supported. The Fine-tuning API only supports `.jsonl` files.

Please [contact us](https://help.openai.com/) if you need to increase these storage limits.
,
    RequestType: CreateFileRequest,
    ResponseType: OpenAIFile,
    MethodName: CreateFileAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateFile
  },
  {
    Id: DeleteFile,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /files/{file_id},
    Properties: null,
    HttpMethod: Delete,
    Summary: Delete a file.,
    RequestType: ,
    ResponseType: DeleteFileResponse,
    MethodName: DeleteFileAsync,
    FileNameWithoutExtension: G.Api.EndPoints.DeleteFile
  },
  {
    Id: RetrieveFile,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /files/{file_id},
    Properties: null,
    Summary: Returns information about a specific file.,
    RequestType: ,
    ResponseType: OpenAIFile,
    MethodName: RetrieveFileAsync,
    FileNameWithoutExtension: G.Api.EndPoints.RetrieveFile
  },
  {
    Id: DownloadFile,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /files/{file_id}/content,
    Properties: null,
    Summary: Returns the contents of the specified file.,
    RequestType: ,
    ResponseType: ,
    MethodName: DownloadFileAsync,
    FileNameWithoutExtension: G.Api.EndPoints.DownloadFile
  },
  {
    Id: CreateFineTuningJob,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /fine_tuning/jobs,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
The name of the model to fine-tune. You can select one of the
[supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).

<br/>Example: gpt-3.5-turbo
      },
      {
        Id: training_file,
        Name: TrainingFile,
        Type: string,
        IsRequired: true,
        Summary:
The ID of an uploaded file that contains training data.

See [upload file](/docs/api-reference/files/create) for how to upload a file.

Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose `fine-tune`.

See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.

<br/>Example: file-abc123
      },
      {
        Id: hyperparameters,
        Name: Hyperparameters,
        Type: CreateFineTuningJobRequestHyperparameters?,
        IsRequired: false,
        Summary: The hyperparameters used for the fine-tuning job.
      },
      {
        Id: suffix,
        Name: Suffix,
        Type: string?,
        IsRequired: false,
        Summary:
A string of up to 18 characters that will be added to your fine-tuned model name.

For example, a `suffix` of "custom-model-name" would produce a model name like `ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel`.

<br/>Default Value: 
      },
      {
        Id: validation_file,
        Name: ValidationFile,
        Type: string?,
        IsRequired: false,
        Summary:
The ID of an uploaded file that contains validation data.

If you provide this file, the data is used to generate validation
metrics periodically during fine-tuning. These metrics can be viewed in
the fine-tuning results file.
The same data should not be present in both train and validation files.

Your dataset must be formatted as a JSONL file. You must upload your file with the purpose `fine-tune`.

See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.

<br/>Example: file-abc123
      },
      {
        Id: integrations,
        Name: Integrations,
        Type: global::System.Collections.Generic.IList<CreateFineTuningJobRequestIntegrations?>?,
        IsRequired: false,
        Summary: A list of integrations to enable for your fine-tuning job.
      },
      {
        Id: seed,
        Name: Seed,
        Type: int?,
        IsRequired: false,
        Summary:
The seed controls the reproducibility of the job. Passing in the same seed and job parameters should produce the same results, but may differ in rare cases.
If a seed is not specified, one will be generated for you.

<br/>Example: 42
      }
    ],
    HttpMethod: Post,
    Summary:
Creates a fine-tuning job which begins the process of creating a new model from a given dataset.

Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.

[Learn more about fine-tuning](/docs/guides/fine-tuning)
,
    RequestType: CreateFineTuningJobRequest,
    ResponseType: FineTuningJob,
    MethodName: CreateFineTuningJobAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateFineTuningJob
  },
  {
    Id: ListPaginatedFineTuningJobs,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /fine_tuning/jobs,
    Properties: null,
    Summary:
List your organization's fine-tuning jobs
,
    RequestType: ,
    ResponseType: ListPaginatedFineTuningJobsResponse,
    MethodName: ListPaginatedFineTuningJobsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListPaginatedFineTuningJobs
  },
  {
    Id: RetrieveFineTuningJob,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /fine_tuning/jobs/{fine_tuning_job_id},
    Properties: null,
    Summary:
Get info about a fine-tuning job.

[Learn more about fine-tuning](/docs/guides/fine-tuning)
,
    RequestType: ,
    ResponseType: FineTuningJob,
    MethodName: RetrieveFineTuningJobAsync,
    FileNameWithoutExtension: G.Api.EndPoints.RetrieveFineTuningJob
  },
  {
    Id: ListFineTuningEvents,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /fine_tuning/jobs/{fine_tuning_job_id}/events,
    Properties: null,
    Summary:
Get status updates for a fine-tuning job.
,
    RequestType: ,
    ResponseType: ListFineTuningJobEventsResponse,
    MethodName: ListFineTuningEventsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListFineTuningEvents
  },
  {
    Id: CancelFineTuningJob,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /fine_tuning/jobs/{fine_tuning_job_id}/cancel,
    Properties: null,
    HttpMethod: Post,
    Summary:
Immediately cancel a fine-tune job.
,
    RequestType: ,
    ResponseType: FineTuningJob,
    MethodName: CancelFineTuningJobAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CancelFineTuningJob
  },
  {
    Id: ListFineTuningJobCheckpoints,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /fine_tuning/jobs/{fine_tuning_job_id}/checkpoints,
    Properties: null,
    Summary:
List checkpoints for a fine-tuning job.
,
    RequestType: ,
    ResponseType: ListFineTuningJobCheckpointsResponse,
    MethodName: ListFineTuningJobCheckpointsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListFineTuningJobCheckpoints
  },
  {
    Id: ListModels,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /models,
    Properties: null,
    Summary: Lists the currently available models, and provides basic information about each one such as the owner and availability.,
    RequestType: ,
    ResponseType: ListModelsResponse,
    MethodName: ListModelsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListModels
  },
  {
    Id: RetrieveModel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /models/{model},
    Properties: null,
    Summary: Retrieves a model instance, providing basic information about the model such as the owner and permissioning.,
    RequestType: ,
    ResponseType: Model,
    MethodName: RetrieveModelAsync,
    FileNameWithoutExtension: G.Api.EndPoints.RetrieveModel
  },
  {
    Id: DeleteModel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /models/{model},
    Properties: null,
    HttpMethod: Delete,
    Summary: Delete a fine-tuned model. You must have the Owner role in your organization to delete a model.,
    RequestType: ,
    ResponseType: DeleteModelResponse,
    MethodName: DeleteModelAsync,
    FileNameWithoutExtension: G.Api.EndPoints.DeleteModel
  },
  {
    Id: CreateModeration,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /moderations,
    Properties: [
      {
        Id: input,
        Name: Input,
        Type: object,
        IsRequired: true,
        Summary: The input text to classify
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
Two content moderations models are available: `text-moderation-stable` and `text-moderation-latest`.

The default is `text-moderation-latest` which will be automatically upgraded over time. This ensures you are always using our most accurate model. If you use `text-moderation-stable`, we will provide advanced notice before updating the model. Accuracy of `text-moderation-stable` may be slightly lower than for `text-moderation-latest`.

<br/>Default Value: text-moderation-latest
<br/>Example: text-moderation-stable
      }
    ],
    HttpMethod: Post,
    Summary: Classifies if text is potentially harmful.,
    RequestType: CreateModerationRequest,
    ResponseType: CreateModerationResponse,
    MethodName: CreateModerationAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateModeration
  },
  {
    Id: ListAssistants,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /assistants,
    Properties: null,
    Summary: Returns a list of assistants.,
    RequestType: ,
    ResponseType: ListAssistantsResponse,
    MethodName: ListAssistantsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListAssistants
  },
  {
    Id: CreateAssistant,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /assistants,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.

<br/>Example: gpt-4-turbo
      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary:
The name of the assistant. The maximum length is 256 characters.

      },
      {
        Id: description,
        Name: Description,
        Type: string?,
        IsRequired: false,
        Summary:
The description of the assistant. The maximum length is 512 characters.

      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string?,
        IsRequired: false,
        Summary:
The system instructions that the assistant uses. The maximum length is 256,000 characters.

      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object?>?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `file_search`, or `function`.

<br/>Default Value: []
      },
      {
        Id: tool_resources,
        Name: ToolResources,
        Type: CreateAssistantRequestToolResources?,
        IsRequired: false,
        Summary:
A set of resources that are used by the assistant's tools. The resources are specific to the type of tool. For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.

      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateAssistantRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: top_p,
        Name: TopP,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or temperature but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: AssistantsApiResponseFormatOption?,
        IsRequired: false,
        Summary:
Specifies the format that the model must output. Compatible with [GPT-4 Turbo](/docs/models/gpt-4-and-gpt-4-turbo) and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.

Setting to `{ "type": "json_object" }` enables JSON mode, which guarantees the message the model generates is valid JSON.

**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.

      }
    ],
    HttpMethod: Post,
    Summary: Create an assistant with a model and instructions.,
    RequestType: CreateAssistantRequest,
    ResponseType: AssistantObject,
    MethodName: CreateAssistantAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateAssistant
  },
  {
    Id: GetAssistant,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /assistants/{assistant_id},
    Properties: null,
    Summary: Retrieves an assistant.,
    RequestType: ,
    ResponseType: AssistantObject,
    MethodName: GetAssistantAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GetAssistant
  },
  {
    Id: ModifyAssistant,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /assistants/{assistant_id},
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.

      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary:
The name of the assistant. The maximum length is 256 characters.

      },
      {
        Id: description,
        Name: Description,
        Type: string?,
        IsRequired: false,
        Summary:
The description of the assistant. The maximum length is 512 characters.

      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string?,
        IsRequired: false,
        Summary:
The system instructions that the assistant uses. The maximum length is 256,000 characters.

      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object?>?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `file_search`, or `function`.

<br/>Default Value: []
      },
      {
        Id: tool_resources,
        Name: ToolResources,
        Type: ModifyAssistantRequestToolResources?,
        IsRequired: false,
        Summary:
A set of resources that are used by the assistant's tools. The resources are specific to the type of tool. For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.

      },
      {
        Id: metadata,
        Name: Metadata,
        Type: ModifyAssistantRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: top_p,
        Name: TopP,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or temperature but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: AssistantsApiResponseFormatOption?,
        IsRequired: false,
        Summary:
Specifies the format that the model must output. Compatible with [GPT-4 Turbo](/docs/models/gpt-4-and-gpt-4-turbo) and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.

Setting to `{ "type": "json_object" }` enables JSON mode, which guarantees the message the model generates is valid JSON.

**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.

      }
    ],
    HttpMethod: Post,
    Summary: Modifies an assistant.,
    RequestType: ModifyAssistantRequest,
    ResponseType: AssistantObject,
    MethodName: ModifyAssistantAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ModifyAssistant
  },
  {
    Id: DeleteAssistant,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /assistants/{assistant_id},
    Properties: null,
    HttpMethod: Delete,
    Summary: Delete an assistant.,
    RequestType: ,
    ResponseType: DeleteAssistantResponse,
    MethodName: DeleteAssistantAsync,
    FileNameWithoutExtension: G.Api.EndPoints.DeleteAssistant
  },
  {
    Id: CreateThread,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads,
    Properties: [
      {
        Id: messages,
        Name: Messages,
        Type: global::System.Collections.Generic.IList<CreateMessageRequest?>?,
        IsRequired: false,
        Summary: A list of [messages](/docs/api-reference/messages) to start the thread with.
      },
      {
        Id: tool_resources,
        Name: ToolResources,
        Type: CreateThreadRequestToolResources?,
        IsRequired: false,
        Summary:
A set of resources that are made available to the assistant's tools in this thread. The resources are specific to the type of tool. For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.

      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateThreadRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    HttpMethod: Post,
    Summary: Create a thread.,
    RequestType: CreateThreadRequest,
    ResponseType: ThreadObject,
    MethodName: CreateThreadAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateThread
  },
  {
    Id: GetThread,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id},
    Properties: null,
    Summary: Retrieves a thread.,
    RequestType: ,
    ResponseType: ThreadObject,
    MethodName: GetThreadAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GetThread
  },
  {
    Id: ModifyThread,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id},
    Properties: [
      {
        Id: tool_resources,
        Name: ToolResources,
        Type: ModifyThreadRequestToolResources?,
        IsRequired: false,
        Summary:
A set of resources that are made available to the assistant's tools in this thread. The resources are specific to the type of tool. For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.

      },
      {
        Id: metadata,
        Name: Metadata,
        Type: ModifyThreadRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    HttpMethod: Post,
    Summary: Modifies a thread.,
    RequestType: ModifyThreadRequest,
    ResponseType: ThreadObject,
    MethodName: ModifyThreadAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ModifyThread
  },
  {
    Id: DeleteThread,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id},
    Properties: null,
    HttpMethod: Delete,
    Summary: Delete a thread.,
    RequestType: ,
    ResponseType: DeleteThreadResponse,
    MethodName: DeleteThreadAsync,
    FileNameWithoutExtension: G.Api.EndPoints.DeleteThread
  },
  {
    Id: ListMessages,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/messages,
    Properties: null,
    Summary: Returns a list of messages for a given thread.,
    RequestType: ,
    ResponseType: ListMessagesResponse,
    MethodName: ListMessagesAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListMessages
  },
  {
    Id: CreateMessage,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/messages,
    Properties: [
      {
        Id: role,
        Name: Role,
        Type: string,
        IsRequired: true,
        Summary:
The role of the entity that is creating the message. Allowed values include:
- `user`: Indicates the message is sent by an actual user and should be used in most cases to represent user-generated messages.
- `assistant`: Indicates the message is generated by the assistant. Use this value to insert messages from the assistant into the conversation.

      },
      {
        Id: content,
        Name: Content,
        Type: object,
        IsRequired: true,
        Summary: 
      },
      {
        Id: attachments,
        Name: Attachments,
        Type: global::System.Collections.Generic.IList<CreateMessageRequestAttachments?>?,
        IsRequired: false,
        Summary: A list of files attached to the message, and the tools they should be added to.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateMessageRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    HttpMethod: Post,
    Summary: Create a message.,
    RequestType: CreateMessageRequest,
    ResponseType: MessageObject,
    MethodName: CreateMessageAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateMessage
  },
  {
    Id: GetMessage,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/messages/{message_id},
    Properties: null,
    Summary: Retrieve a message.,
    RequestType: ,
    ResponseType: MessageObject,
    MethodName: GetMessageAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GetMessage
  },
  {
    Id: ModifyMessage,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/messages/{message_id},
    Properties: [
      {
        Id: metadata,
        Name: Metadata,
        Type: ModifyMessageRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    HttpMethod: Post,
    Summary: Modifies a message.,
    RequestType: ModifyMessageRequest,
    ResponseType: MessageObject,
    MethodName: ModifyMessageAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ModifyMessage
  },
  {
    Id: DeleteMessage,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/messages/{message_id},
    Properties: null,
    HttpMethod: Delete,
    Summary: Deletes a message.,
    RequestType: ,
    ResponseType: DeleteMessageResponse,
    MethodName: DeleteMessageAsync,
    FileNameWithoutExtension: G.Api.EndPoints.DeleteMessage
  },
  {
    Id: CreateThreadAndRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/runs,
    Properties: [
      {
        Id: assistant_id,
        Name: AssistantId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
      },
      {
        Id: thread,
        Name: Thread,
        Type: CreateThreadRequest?,
        IsRequired: false,
        Summary: 
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
The ID of the [Model](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it will override the model associated with the assistant. If not, the model associated with the assistant will be used.
<br/>Example: gpt-4-turbo
      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string?,
        IsRequired: false,
        Summary: Override the default system message of the assistant. This is useful for modifying the behavior on a per-run basis.
      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object?>?,
        IsRequired: false,
        Summary: Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.
      },
      {
        Id: tool_resources,
        Name: ToolResources,
        Type: CreateThreadAndRunRequestToolResources?,
        IsRequired: false,
        Summary:
A set of resources that are used by the assistant's tools. The resources are specific to the type of tool. For example, the `code_interpreter` tool requires a list of file IDs, while the `file_search` tool requires a list of vector store IDs.

      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateThreadAndRunRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: top_p,
        Name: TopP,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or temperature but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: stream,
        Name: Stream,
        Type: bool?,
        IsRequired: false,
        Summary:
If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message.

      },
      {
        Id: max_prompt_tokens,
        Name: MaxPromptTokens,
        Type: int?,
        IsRequired: false,
        Summary:
The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified, the run will end with status `incomplete`. See `incomplete_details` for more info.

      },
      {
        Id: max_completion_tokens,
        Name: MaxCompletionTokens,
        Type: int?,
        IsRequired: false,
        Summary:
The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens specified, the run will end with status `incomplete`. See `incomplete_details` for more info.

      },
      {
        Id: truncation_strategy,
        Name: TruncationStrategy,
        Type: TruncationObject?,
        IsRequired: false,
        Summary: Controls for how a thread will be truncated prior to the run. Use this to control the intial context window of the run.
      },
      {
        Id: tool_choice,
        Name: ToolChoice,
        Type: AssistantsApiToolChoiceOption?,
        IsRequired: false,
        Summary:
Controls which (if any) tool is called by the model.
`none` means the model will not call any tools and instead generates a message.
`auto` is the default value and means the model can pick between generating a message or calling one or more tools.
`required` means the model must call one or more tools before responding to the user.
Specifying a particular tool like `{"type": "file_search"}` or `{"type": "function", "function": {"name": "my_function"}}` forces the model to call that tool.

      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: AssistantsApiResponseFormatOption?,
        IsRequired: false,
        Summary:
Specifies the format that the model must output. Compatible with [GPT-4 Turbo](/docs/models/gpt-4-and-gpt-4-turbo) and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.

Setting to `{ "type": "json_object" }` enables JSON mode, which guarantees the message the model generates is valid JSON.

**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.

      }
    ],
    HttpMethod: Post,
    Summary: Create a thread and run it in one request.,
    RequestType: CreateThreadAndRunRequest,
    ResponseType: RunObject,
    MethodName: CreateThreadAndRunAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateThreadAndRun
  },
  {
    Id: ListRuns,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/runs,
    Properties: null,
    Summary: Returns a list of runs belonging to a thread.,
    RequestType: ,
    ResponseType: ListRunsResponse,
    MethodName: ListRunsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListRuns
  },
  {
    Id: CreateRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/runs,
    Properties: [
      {
        Id: assistant_id,
        Name: AssistantId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
The ID of the [Model](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it will override the model associated with the assistant. If not, the model associated with the assistant will be used.
<br/>Example: gpt-4-turbo
      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string?,
        IsRequired: false,
        Summary: Overrides the [instructions](/docs/api-reference/assistants/createAssistant) of the assistant. This is useful for modifying the behavior on a per-run basis.
      },
      {
        Id: additional_instructions,
        Name: AdditionalInstructions,
        Type: string?,
        IsRequired: false,
        Summary: Appends additional instructions at the end of the instructions for the run. This is useful for modifying the behavior on a per-run basis without overriding other instructions.
      },
      {
        Id: additional_messages,
        Name: AdditionalMessages,
        Type: global::System.Collections.Generic.IList<CreateMessageRequest?>?,
        IsRequired: false,
        Summary: Adds additional messages to the thread before creating the run.
      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object?>?,
        IsRequired: false,
        Summary: Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateRunRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: top_p,
        Name: TopP,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or temperature but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: stream,
        Name: Stream,
        Type: bool?,
        IsRequired: false,
        Summary:
If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message.

      },
      {
        Id: max_prompt_tokens,
        Name: MaxPromptTokens,
        Type: int?,
        IsRequired: false,
        Summary:
The maximum number of prompt tokens that may be used over the course of the run. The run will make a best effort to use only the number of prompt tokens specified, across multiple turns of the run. If the run exceeds the number of prompt tokens specified, the run will end with status `incomplete`. See `incomplete_details` for more info.

      },
      {
        Id: max_completion_tokens,
        Name: MaxCompletionTokens,
        Type: int?,
        IsRequired: false,
        Summary:
The maximum number of completion tokens that may be used over the course of the run. The run will make a best effort to use only the number of completion tokens specified, across multiple turns of the run. If the run exceeds the number of completion tokens specified, the run will end with status `incomplete`. See `incomplete_details` for more info.

      },
      {
        Id: truncation_strategy,
        Name: TruncationStrategy,
        Type: TruncationObject?,
        IsRequired: false,
        Summary: Controls for how a thread will be truncated prior to the run. Use this to control the intial context window of the run.
      },
      {
        Id: tool_choice,
        Name: ToolChoice,
        Type: AssistantsApiToolChoiceOption?,
        IsRequired: false,
        Summary:
Controls which (if any) tool is called by the model.
`none` means the model will not call any tools and instead generates a message.
`auto` is the default value and means the model can pick between generating a message or calling one or more tools.
`required` means the model must call one or more tools before responding to the user.
Specifying a particular tool like `{"type": "file_search"}` or `{"type": "function", "function": {"name": "my_function"}}` forces the model to call that tool.

      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: AssistantsApiResponseFormatOption?,
        IsRequired: false,
        Summary:
Specifies the format that the model must output. Compatible with [GPT-4 Turbo](/docs/models/gpt-4-and-gpt-4-turbo) and all GPT-3.5 Turbo models since `gpt-3.5-turbo-1106`.

Setting to `{ "type": "json_object" }` enables JSON mode, which guarantees the message the model generates is valid JSON.

**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.

      }
    ],
    HttpMethod: Post,
    Summary: Create a run.,
    RequestType: CreateRunRequest,
    ResponseType: RunObject,
    MethodName: CreateRunAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateRun
  },
  {
    Id: GetRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/runs/{run_id},
    Properties: null,
    Summary: Retrieves a run.,
    RequestType: ,
    ResponseType: RunObject,
    MethodName: GetRunAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GetRun
  },
  {
    Id: ModifyRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/runs/{run_id},
    Properties: [
      {
        Id: metadata,
        Name: Metadata,
        Type: ModifyRunRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    HttpMethod: Post,
    Summary: Modifies a run.,
    RequestType: ModifyRunRequest,
    ResponseType: RunObject,
    MethodName: ModifyRunAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ModifyRun
  },
  {
    Id: SubmitToolOuputsToRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/runs/{run_id}/submit_tool_outputs,
    Properties: [
      {
        Id: tool_outputs,
        Name: ToolOutputs,
        Type: global::System.Collections.Generic.IList<SubmitToolOutputsRunRequestToolOutputs>,
        IsRequired: true,
        Summary: A list of tools for which the outputs are being submitted.
      },
      {
        Id: stream,
        Name: Stream,
        Type: bool?,
        IsRequired: false,
        Summary:
If `true`, returns a stream of events that happen during the Run as server-sent events, terminating when the Run enters a terminal state with a `data: [DONE]` message.

      }
    ],
    HttpMethod: Post,
    Summary:
When a run has the `status: "requires_action"` and `required_action.type` is `submit_tool_outputs`, this endpoint can be used to submit the outputs from the tool calls once they're all completed. All outputs must be submitted in a single request.
,
    RequestType: SubmitToolOutputsRunRequest,
    ResponseType: RunObject,
    MethodName: SubmitToolOuputsToRunAsync,
    FileNameWithoutExtension: G.Api.EndPoints.SubmitToolOuputsToRun
  },
  {
    Id: CancelRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/runs/{run_id}/cancel,
    Properties: null,
    HttpMethod: Post,
    Summary: Cancels a run that is `in_progress`.,
    RequestType: ,
    ResponseType: RunObject,
    MethodName: CancelRunAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CancelRun
  },
  {
    Id: ListRunSteps,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/runs/{run_id}/steps,
    Properties: null,
    Summary: Returns a list of run steps belonging to a run.,
    RequestType: ,
    ResponseType: ListRunStepsResponse,
    MethodName: ListRunStepsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListRunSteps
  },
  {
    Id: GetRunStep,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /threads/{thread_id}/runs/{run_id}/steps/{step_id},
    Properties: null,
    Summary: Retrieves a run step.,
    RequestType: ,
    ResponseType: RunStepObject,
    MethodName: GetRunStepAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GetRunStep
  },
  {
    Id: ListVectorStores,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores,
    Properties: null,
    Summary: Returns a list of vector stores.,
    RequestType: ,
    ResponseType: ListVectorStoresResponse,
    MethodName: ListVectorStoresAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListVectorStores
  },
  {
    Id: CreateVectorStore,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores,
    Properties: [
      {
        Id: file_ids,
        Name: FileIds,
        Type: global::System.Collections.Generic.IList<string?>?,
        IsRequired: false,
        Summary: A list of [File](/docs/api-reference/files) IDs that the vector store should use. Useful for tools like `file_search` that can access files.
      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary: The name of the vector store.
      },
      {
        Id: expires_after,
        Name: ExpiresAfter,
        Type: VectorStoreExpirationAfter?,
        IsRequired: false,
        Summary: The expiration policy for a vector store.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateVectorStoreRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    HttpMethod: Post,
    Summary: Create a vector store.,
    RequestType: CreateVectorStoreRequest,
    ResponseType: VectorStoreObject,
    MethodName: CreateVectorStoreAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateVectorStore
  },
  {
    Id: GetVectorStore,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id},
    Properties: null,
    Summary: Retrieves a vector store.,
    RequestType: ,
    ResponseType: VectorStoreObject,
    MethodName: GetVectorStoreAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GetVectorStore
  },
  {
    Id: ModifyVectorStore,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id},
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary: The name of the vector store.
      },
      {
        Id: expires_after,
        Name: ExpiresAfter,
        Type: VectorStoreExpirationAfter?,
        IsRequired: false,
        Summary: The expiration policy for a vector store.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: UpdateVectorStoreRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    HttpMethod: Post,
    Summary: Modifies a vector store.,
    RequestType: UpdateVectorStoreRequest,
    ResponseType: VectorStoreObject,
    MethodName: ModifyVectorStoreAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ModifyVectorStore
  },
  {
    Id: DeleteVectorStore,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id},
    Properties: null,
    HttpMethod: Delete,
    Summary: Delete a vector store.,
    RequestType: ,
    ResponseType: DeleteVectorStoreResponse,
    MethodName: DeleteVectorStoreAsync,
    FileNameWithoutExtension: G.Api.EndPoints.DeleteVectorStore
  },
  {
    Id: ListVectorStoreFiles,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id}/files,
    Properties: null,
    Summary: Returns a list of vector store files.,
    RequestType: ,
    ResponseType: ListVectorStoreFilesResponse,
    MethodName: ListVectorStoreFilesAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListVectorStoreFiles
  },
  {
    Id: CreateVectorStoreFile,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id}/files,
    Properties: [
      {
        Id: file_id,
        Name: FileId,
        Type: string,
        IsRequired: true,
        Summary: A [File](/docs/api-reference/files) ID that the vector store should use. Useful for tools like `file_search` that can access files.
      }
    ],
    HttpMethod: Post,
    Summary: Create a vector store file by attaching a [File](/docs/api-reference/files) to a [vector store](/docs/api-reference/vector-stores/object).,
    RequestType: CreateVectorStoreFileRequest,
    ResponseType: VectorStoreFileObject,
    MethodName: CreateVectorStoreFileAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateVectorStoreFile
  },
  {
    Id: GetVectorStoreFile,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id}/files/{file_id},
    Properties: null,
    Summary: Retrieves a vector store file.,
    RequestType: ,
    ResponseType: VectorStoreFileObject,
    MethodName: GetVectorStoreFileAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GetVectorStoreFile
  },
  {
    Id: DeleteVectorStoreFile,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id}/files/{file_id},
    Properties: null,
    HttpMethod: Delete,
    Summary: Delete a vector store file. This will remove the file from the vector store but the file itself will not be deleted. To delete the file, use the [delete file](/docs/api-reference/files/delete) endpoint.,
    RequestType: ,
    ResponseType: DeleteVectorStoreFileResponse,
    MethodName: DeleteVectorStoreFileAsync,
    FileNameWithoutExtension: G.Api.EndPoints.DeleteVectorStoreFile
  },
  {
    Id: CreateVectorStoreFileBatch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id}/file_batches,
    Properties: [
      {
        Id: file_ids,
        Name: FileIds,
        Type: global::System.Collections.Generic.IList<string>,
        IsRequired: true,
        Summary: A list of [File](/docs/api-reference/files) IDs that the vector store should use. Useful for tools like `file_search` that can access files.
      }
    ],
    HttpMethod: Post,
    Summary: Create a vector store file batch.,
    RequestType: CreateVectorStoreFileBatchRequest,
    ResponseType: VectorStoreFileBatchObject,
    MethodName: CreateVectorStoreFileBatchAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateVectorStoreFileBatch
  },
  {
    Id: GetVectorStoreFileBatch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id}/file_batches/{batch_id},
    Properties: null,
    Summary: Retrieves a vector store file batch.,
    RequestType: ,
    ResponseType: VectorStoreFileBatchObject,
    MethodName: GetVectorStoreFileBatchAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GetVectorStoreFileBatch
  },
  {
    Id: CancelVectorStoreFileBatch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id}/file_batches/{batch_id}/cancel,
    Properties: null,
    HttpMethod: Post,
    Summary: Cancel a vector store file batch. This attempts to cancel the processing of files in this batch as soon as possible.,
    RequestType: ,
    ResponseType: VectorStoreFileBatchObject,
    MethodName: CancelVectorStoreFileBatchAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CancelVectorStoreFileBatch
  },
  {
    Id: ListFilesInVectorStoreBatch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /vector_stores/{vector_store_id}/file_batches/{batch_id}/files,
    Properties: null,
    Summary: Returns a list of vector store files in a batch.,
    RequestType: ,
    ResponseType: ListVectorStoreFilesResponse,
    MethodName: ListFilesInVectorStoreBatchAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListFilesInVectorStoreBatch
  },
  {
    Id: CreateBatch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /batches,
    Properties: [
      {
        Id: input_file_id,
        Name: InputFileId,
        Type: string,
        IsRequired: true,
        Summary:
The ID of an uploaded file that contains requests for the new batch.

See [upload file](/docs/api-reference/files/create) for how to upload a file.

Your input file must be formatted as a [JSONL file](/docs/api-reference/batch/requestInput), and must be uploaded with the purpose `batch`.

      },
      {
        Id: endpoint,
        Name: Endpoint,
        Type: string,
        IsRequired: true,
        Summary: The endpoint to be used for all requests in the batch. Currently `/v1/chat/completions` and `/v1/embeddings` are supported.
      },
      {
        Id: completion_window,
        Name: CompletionWindow,
        Type: string,
        IsRequired: true,
        Summary: The time frame within which the batch should be processed. Currently only `24h` is supported.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: TestMetadata?,
        IsRequired: false,
        Summary: Optional custom metadata for the batch.
      }
    ],
    HttpMethod: Post,
    Summary: Creates and executes a batch from an uploaded file of requests,
    RequestType: ,
    ResponseType: Batch,
    MethodName: CreateBatchAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateBatch
  },
  {
    Id: ListBatches,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /batches,
    Properties: null,
    Summary: List your organization's batches.,
    RequestType: ,
    ResponseType: ListBatchesResponse,
    MethodName: ListBatchesAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListBatches
  },
  {
    Id: RetrieveBatch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /batches/{batch_id},
    Properties: null,
    Summary: Retrieves a batch.,
    RequestType: ,
    ResponseType: Batch,
    MethodName: RetrieveBatchAsync,
    FileNameWithoutExtension: G.Api.EndPoints.RetrieveBatch
  },
  {
    Id: CancelBatch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /batches/{batch_id}/cancel,
    Properties: null,
    HttpMethod: Post,
    Summary: Cancels an in-progress batch.,
    RequestType: ,
    ResponseType: Batch,
    MethodName: CancelBatchAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CancelBatch
  },
  {
    Id: Constructors,
    Namespace: G,
    ClassName: Api,
    BaseUrl: https://api.openai.com/v1,
    Stream: false,
    Path: ,
    Properties: null,
    Summary: ,
    RequestType: ,
    ResponseType: ,
    MethodName: ConstructorsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.Constructors
  }
]