[
  {
    Id: MetaRoot,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: GitHub API Root,
    RequestType: ,
    ResponseType: root,
    MethodName: MetaRootAsync,
    NotAsyncMethodName: MetaRoot,
    FileNameWithoutExtension: G.Api.EndPoints.MetaRoot
  },
  {
    Id: SecurityAdvisoriesListGlobalAdvisories,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/advisories?ghsa_id={ghsaId}&type={type}&cve_id={cveId}&ecosystem={ecosystem}&severity={severity}&cwes={cwes}&is_withdrawn={isWithdrawn}&affects={affects}&published={published}&updated={updated}&modified={modified}&before={before}&after={after}&direction={direction}&per_page={perPage}&sort={sort}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: ghsa_id,
        Name: GhsaId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ghsaId,
        ArgumentName: ghsaId,
        ParameterDefaultValue: default
      },
      {
        Id: type,
        Name: Type,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Reviewed,
            Malware,
            Unreviewed
          ],
          EnumValues: [
            reviewed,
            malware,
            unreviewed
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Type.Reviewed,
        Summary:
<br/>Default Value: reviewed,
        ParameterName: type,
        ArgumentName: type,
        ParameterDefaultValue: Type.Reviewed
      },
      {
        Id: cve_id,
        Name: CveId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: cveId,
        ArgumentName: cveId,
        ParameterDefaultValue: default
      },
      {
        Id: ecosystem,
        Name: Ecosystem,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Rubygems,
            Npm,
            Pip,
            Maven,
            Nuget,
            Composer,
            Go,
            Rust,
            Erlang,
            Actions,
            Pub,
            Other,
            Swift
          ],
          EnumValues: [
            rubygems,
            npm,
            pip,
            maven,
            nuget,
            composer,
            go,
            rust,
            erlang,
            actions,
            pub,
            other,
            swift
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: The package's language or package management ecosystem.,
        ParameterName: ecosystem,
        ArgumentName: ecosystem,
        ParameterDefaultValue: default
      },
      {
        Id: severity,
        Name: Severity,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Unknown,
            Low,
            Medium,
            High,
            Critical
          ],
          EnumValues: [
            unknown,
            low,
            medium,
            high,
            critical
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: severity,
        ArgumentName: severity,
        ParameterDefaultValue: default
      },
      {
        Id: cwes,
        Name: Cwes,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: cwes,
        ArgumentName: cwes,
        ParameterDefaultValue: default
      },
      {
        Id: is_withdrawn,
        Name: IsWithdrawn,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: isWithdrawn,
        ArgumentName: isWithdrawn,
        ParameterDefaultValue: default
      },
      {
        Id: affects,
        Name: Affects,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: affects,
        ArgumentName: affects,
        ParameterDefaultValue: default
      },
      {
        Id: published,
        Name: Published,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: published,
        ArgumentName: published,
        ParameterDefaultValue: default
      },
      {
        Id: updated,
        Name: Updated,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: updated,
        ArgumentName: updated,
        ParameterDefaultValue: default
      },
      {
        Id: modified,
        Name: Modified,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: modified,
        ArgumentName: modified,
        ParameterDefaultValue: default
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Updated,
            Published
          ],
          EnumValues: [
            updated,
            published
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Published,
        Summary:
<br/>Default Value: published,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Published
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List global security advisories,
    RequestType: ,
    ResponseType: ,
    MethodName: SecurityAdvisoriesListGlobalAdvisoriesAsync,
    NotAsyncMethodName: SecurityAdvisoriesListGlobalAdvisories,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesListGlobalAdvisories
  },
  {
    Id: SecurityAdvisoriesGetGlobalAdvisory,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/advisories/{ghsaId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: ghsa_id,
        Name: GhsaId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ghsaId,
        ArgumentName: ghsaId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a global security advisory,
    RequestType: ,
    ResponseType: global-advisory,
    MethodName: SecurityAdvisoriesGetGlobalAdvisoryAsync,
    NotAsyncMethodName: SecurityAdvisoriesGetGlobalAdvisory,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesGetGlobalAdvisory
  },
  {
    Id: AppsGetAuthenticated,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/app",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the authenticated app,
    RequestType: ,
    ResponseType: integration,
    MethodName: AppsGetAuthenticatedAsync,
    NotAsyncMethodName: AppsGetAuthenticated,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetAuthenticated
  },
  {
    Id: AppsCreateFromManifest,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app-manifests/{code}/conversions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: code,
        Name: Code,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: code,
        ArgumentName: code,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a GitHub App from a manifest,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsCreateFromManifestAsync,
    NotAsyncMethodName: AppsCreateFromManifest,
    FileNameWithoutExtension: G.Api.EndPoints.AppsCreateFromManifest
  },
  {
    Id: AppsGetWebhookConfigForApp,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/app/hook/config",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a webhook configuration for an app,
    RequestType: ,
    ResponseType: webhook-config,
    MethodName: AppsGetWebhookConfigForAppAsync,
    NotAsyncMethodName: AppsGetWebhookConfigForApp,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetWebhookConfigForApp
  },
  {
    Id: AppsUpdateWebhookConfigForApp,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/app/hook/config",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: url,
        Name: Url,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The URL to which the payloads will be delivered.
<br/>Example: https://example.com/webhook,
        ParameterName: url,
        ArgumentName: url,
        ParameterDefaultValue: default
      },
      {
        Id: content_type,
        Name: ContentType,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
<br/>Example: "json",
        ParameterName: contentType,
        ArgumentName: contentType,
        ParameterDefaultValue: default
      },
      {
        Id: secret,
        Name: Secret,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
<br/>Example: "********",
        ParameterName: secret,
        ArgumentName: secret,
        ParameterDefaultValue: default
      },
      {
        Id: insecure_ssl,
        Name: InsecureSsl,
        Type: {
          CSharpType: WebhookConfigInsecureSsl?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: ,
        ParameterName: insecureSsl,
        ArgumentName: insecureSsl,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a webhook configuration for an app,
    RequestType: ,
    ResponseType: webhook-config,
    MethodName: AppsUpdateWebhookConfigForAppAsync,
    NotAsyncMethodName: AppsUpdateWebhookConfigForApp,
    FileNameWithoutExtension: G.Api.EndPoints.AppsUpdateWebhookConfigForApp
  },
  {
    Id: AppsListWebhookDeliveries,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/hook/deliveries?per_page={perPage}&cursor={cursor}&redelivery={redelivery}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: cursor,
        Name: Cursor,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: cursor,
        ArgumentName: cursor,
        ParameterDefaultValue: default
      },
      {
        Id: redelivery,
        Name: Redelivery,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: redelivery,
        ArgumentName: redelivery,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List deliveries for an app webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListWebhookDeliveriesAsync,
    NotAsyncMethodName: AppsListWebhookDeliveries,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListWebhookDeliveries
  },
  {
    Id: AppsGetWebhookDelivery,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/hook/deliveries/{deliveryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: delivery_id,
        Name: DeliveryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deliveryId,
        ArgumentName: deliveryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a delivery for an app webhook,
    RequestType: ,
    ResponseType: hook-delivery,
    MethodName: AppsGetWebhookDeliveryAsync,
    NotAsyncMethodName: AppsGetWebhookDelivery,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetWebhookDelivery
  },
  {
    Id: AppsRedeliverWebhookDelivery,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/hook/deliveries/{deliveryId}/attempts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: delivery_id,
        Name: DeliveryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deliveryId,
        ArgumentName: deliveryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Redeliver a delivery for an app webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsRedeliverWebhookDeliveryAsync,
    NotAsyncMethodName: AppsRedeliverWebhookDelivery,
    FileNameWithoutExtension: G.Api.EndPoints.AppsRedeliverWebhookDelivery
  },
  {
    Id: AppsListInstallationRequestsForAuthenticatedApp,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/installation-requests?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List installation requests for the authenticated app,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListInstallationRequestsForAuthenticatedAppAsync,
    NotAsyncMethodName: AppsListInstallationRequestsForAuthenticatedApp,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListInstallationRequestsForAuthenticatedApp
  },
  {
    Id: AppsListInstallations,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/installations?per_page={perPage}&page={page}&since={since}&outdated={outdated}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: outdated,
        Name: Outdated,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: outdated,
        ArgumentName: outdated,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List installations for the authenticated app,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListInstallationsAsync,
    NotAsyncMethodName: AppsListInstallations,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListInstallations
  },
  {
    Id: AppsGetInstallation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/installations/{installationId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: installation_id,
        Name: InstallationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: installationId,
        ArgumentName: installationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an installation for the authenticated app,
    RequestType: ,
    ResponseType: installation,
    MethodName: AppsGetInstallationAsync,
    NotAsyncMethodName: AppsGetInstallation,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetInstallation
  },
  {
    Id: AppsDeleteInstallation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/installations/{installationId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: installation_id,
        Name: InstallationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: installationId,
        ArgumentName: installationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an installation for the authenticated app,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsDeleteInstallationAsync,
    NotAsyncMethodName: AppsDeleteInstallation,
    FileNameWithoutExtension: G.Api.EndPoints.AppsDeleteInstallation
  },
  {
    Id: AppsCreateInstallationAccessToken,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/installations/{installationId}/access_tokens",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: installation_id,
        Name: InstallationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: installationId,
        ArgumentName: installationId,
        ParameterDefaultValue: default
      },
      {
        Id: repositories,
        Name: Repositories,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: List of repository names that the token should have access to,
        ParameterName: repositories,
        ArgumentName: repositories,
        ParameterDefaultValue: default
      },
      {
        Id: repository_ids,
        Name: RepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
List of repository IDs that the token should have access to
<br/>Example: [1],
        ParameterName: repositoryIds,
        ArgumentName: repositoryIds,
        ParameterDefaultValue: default
      },
      {
        Id: permissions,
        Name: Permissions,
        Type: {
          CSharpType: AppPermissions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            actions,
            administration,
            checks,
            codespaces,
            contents,
            dependabot_secrets,
            deployments,
            environments,
            issues,
            metadata,
            packages,
            pages,
            pull_requests,
            repository_custom_properties,
            repository_hooks,
            repository_projects,
            secret_scanning_alerts,
            secrets,
            security_events,
            single_file,
            statuses,
            vulnerability_alerts,
            workflows,
            members,
            organization_administration,
            organization_custom_roles,
            organization_custom_org_roles,
            organization_custom_properties,
            organization_copilot_seat_management,
            organization_announcement_banners,
            organization_events,
            organization_hooks,
            organization_personal_access_tokens,
            organization_personal_access_token_requests,
            organization_plan,
            organization_projects,
            organization_packages,
            organization_secrets,
            organization_self_hosted_runners,
            organization_user_blocking,
            team_discussions,
            email_addresses,
            followers,
            git_ssh_keys,
            gpg_keys,
            interaction_limits,
            profile,
            starring
          ],
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The permissions granted to the user access token.
<br/>Example: ,
        ParameterName: permissions,
        ArgumentName: permissions,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an installation access token for an app,
    RequestType: ,
    ResponseType: installation-token,
    MethodName: AppsCreateInstallationAccessTokenAsync,
    NotAsyncMethodName: AppsCreateInstallationAccessToken,
    FileNameWithoutExtension: G.Api.EndPoints.AppsCreateInstallationAccessToken
  },
  {
    Id: AppsSuspendInstallation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/installations/{installationId}/suspended",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: installation_id,
        Name: InstallationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: installationId,
        ArgumentName: installationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Suspend an app installation,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsSuspendInstallationAsync,
    NotAsyncMethodName: AppsSuspendInstallation,
    FileNameWithoutExtension: G.Api.EndPoints.AppsSuspendInstallation
  },
  {
    Id: AppsUnsuspendInstallation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/app/installations/{installationId}/suspended",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: installation_id,
        Name: InstallationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: installationId,
        ArgumentName: installationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Unsuspend an app installation,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsUnsuspendInstallationAsync,
    NotAsyncMethodName: AppsUnsuspendInstallation,
    FileNameWithoutExtension: G.Api.EndPoints.AppsUnsuspendInstallation
  },
  {
    Id: AppsDeleteAuthorization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/applications/{clientId}/grant",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: client_id,
        Name: ClientId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: clientId,
        ArgumentName: clientId,
        ParameterDefaultValue: default
      },
      {
        Id: access_token,
        Name: AccessToken,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The OAuth access token used to authenticate to the GitHub API.,
        ParameterName: accessToken,
        ArgumentName: accessToken,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an app authorization,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsDeleteAuthorizationAsync,
    NotAsyncMethodName: AppsDeleteAuthorization,
    FileNameWithoutExtension: G.Api.EndPoints.AppsDeleteAuthorization
  },
  {
    Id: AppsCheckToken,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/applications/{clientId}/token",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: client_id,
        Name: ClientId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: clientId,
        ArgumentName: clientId,
        ParameterDefaultValue: default
      },
      {
        Id: access_token,
        Name: AccessToken,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The access_token of the OAuth or GitHub application.,
        ParameterName: accessToken,
        ArgumentName: accessToken,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Check a token,
    RequestType: ,
    ResponseType: authorization,
    MethodName: AppsCheckTokenAsync,
    NotAsyncMethodName: AppsCheckToken,
    FileNameWithoutExtension: G.Api.EndPoints.AppsCheckToken
  },
  {
    Id: AppsResetToken,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/applications/{clientId}/token",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: client_id,
        Name: ClientId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: clientId,
        ArgumentName: clientId,
        ParameterDefaultValue: default
      },
      {
        Id: access_token,
        Name: AccessToken,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The access_token of the OAuth or GitHub application.,
        ParameterName: accessToken,
        ArgumentName: accessToken,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Reset a token,
    RequestType: ,
    ResponseType: authorization,
    MethodName: AppsResetTokenAsync,
    NotAsyncMethodName: AppsResetToken,
    FileNameWithoutExtension: G.Api.EndPoints.AppsResetToken
  },
  {
    Id: AppsDeleteToken,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/applications/{clientId}/token",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: client_id,
        Name: ClientId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: clientId,
        ArgumentName: clientId,
        ParameterDefaultValue: default
      },
      {
        Id: access_token,
        Name: AccessToken,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The OAuth access token used to authenticate to the GitHub API.,
        ParameterName: accessToken,
        ArgumentName: accessToken,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an app token,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsDeleteTokenAsync,
    NotAsyncMethodName: AppsDeleteToken,
    FileNameWithoutExtension: G.Api.EndPoints.AppsDeleteToken
  },
  {
    Id: AppsScopeToken,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/applications/{clientId}/token/scoped",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: client_id,
        Name: ClientId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: clientId,
        ArgumentName: clientId,
        ParameterDefaultValue: default
      },
      {
        Id: access_token,
        Name: AccessToken,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The access token used to authenticate to the GitHub API.
<br/>Example: e72e16c7e42f292c6912e7710c838347ae178b4a,
        ParameterName: accessToken,
        ArgumentName: accessToken,
        ParameterDefaultValue: default
      },
      {
        Id: target,
        Name: Target,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The name of the user or organization to scope the user access token to. **Required** unless `target_id` is specified.
<br/>Example: octocat,
        ParameterName: target,
        ArgumentName: target,
        ParameterDefaultValue: default
      },
      {
        Id: target_id,
        Name: TargetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The ID of the user or organization to scope the user access token to. **Required** unless `target` is specified.
<br/>Example: 1,
        ParameterName: targetId,
        ArgumentName: targetId,
        ParameterDefaultValue: default
      },
      {
        Id: repositories,
        Name: Repositories,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The list of repository names to scope the user access token to. `repositories` may not be specified if `repository_ids` is specified.,
        ParameterName: repositories,
        ArgumentName: repositories,
        ParameterDefaultValue: default
      },
      {
        Id: repository_ids,
        Name: RepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The list of repository IDs to scope the user access token to. `repository_ids` may not be specified if `repositories` is specified.
<br/>Example: [1],
        ParameterName: repositoryIds,
        ArgumentName: repositoryIds,
        ParameterDefaultValue: default
      },
      {
        Id: permissions,
        Name: Permissions,
        Type: {
          CSharpType: AppPermissions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            actions,
            administration,
            checks,
            codespaces,
            contents,
            dependabot_secrets,
            deployments,
            environments,
            issues,
            metadata,
            packages,
            pages,
            pull_requests,
            repository_custom_properties,
            repository_hooks,
            repository_projects,
            secret_scanning_alerts,
            secrets,
            security_events,
            single_file,
            statuses,
            vulnerability_alerts,
            workflows,
            members,
            organization_administration,
            organization_custom_roles,
            organization_custom_org_roles,
            organization_custom_properties,
            organization_copilot_seat_management,
            organization_announcement_banners,
            organization_events,
            organization_hooks,
            organization_personal_access_tokens,
            organization_personal_access_token_requests,
            organization_plan,
            organization_projects,
            organization_packages,
            organization_secrets,
            organization_self_hosted_runners,
            organization_user_blocking,
            team_discussions,
            email_addresses,
            followers,
            git_ssh_keys,
            gpg_keys,
            interaction_limits,
            profile,
            starring
          ],
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The permissions granted to the user access token.
<br/>Example: ,
        ParameterName: permissions,
        ArgumentName: permissions,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a scoped access token,
    RequestType: ,
    ResponseType: authorization,
    MethodName: AppsScopeTokenAsync,
    NotAsyncMethodName: AppsScopeToken,
    FileNameWithoutExtension: G.Api.EndPoints.AppsScopeToken
  },
  {
    Id: AppsGetBySlug,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/apps/{appSlug}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: app_slug,
        Name: AppSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: appSlug,
        ArgumentName: appSlug,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an app,
    RequestType: ,
    ResponseType: integration,
    MethodName: AppsGetBySlugAsync,
    NotAsyncMethodName: AppsGetBySlug,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetBySlug
  },
  {
    Id: ClassroomGetAnAssignment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/assignments/{assignmentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: assignment_id,
        Name: AssignmentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: assignmentId,
        ArgumentName: assignmentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an assignment,
    RequestType: ,
    ResponseType: classroom-assignment,
    MethodName: ClassroomGetAnAssignmentAsync,
    NotAsyncMethodName: ClassroomGetAnAssignment,
    FileNameWithoutExtension: G.Api.EndPoints.ClassroomGetAnAssignment
  },
  {
    Id: ClassroomListAcceptedAssigmentsForAnAssignment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/assignments/{assignmentId}/accepted_assignments?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: assignment_id,
        Name: AssignmentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: assignmentId,
        ArgumentName: assignmentId,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List accepted assignments for an assignment,
    RequestType: ,
    ResponseType: ,
    MethodName: ClassroomListAcceptedAssigmentsForAnAssignmentAsync,
    NotAsyncMethodName: ClassroomListAcceptedAssigmentsForAnAssignment,
    FileNameWithoutExtension: G.Api.EndPoints.ClassroomListAcceptedAssigmentsForAnAssignment
  },
  {
    Id: ClassroomGetAssignmentGrades,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/assignments/{assignmentId}/grades",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: assignment_id,
        Name: AssignmentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: assignmentId,
        ArgumentName: assignmentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get assignment grades,
    RequestType: ,
    ResponseType: ,
    MethodName: ClassroomGetAssignmentGradesAsync,
    NotAsyncMethodName: ClassroomGetAssignmentGrades,
    FileNameWithoutExtension: G.Api.EndPoints.ClassroomGetAssignmentGrades
  },
  {
    Id: ClassroomListClassrooms,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/classrooms?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List classrooms,
    RequestType: ,
    ResponseType: ,
    MethodName: ClassroomListClassroomsAsync,
    NotAsyncMethodName: ClassroomListClassrooms,
    FileNameWithoutExtension: G.Api.EndPoints.ClassroomListClassrooms
  },
  {
    Id: ClassroomGetAClassroom,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/classrooms/{classroomId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: classroom_id,
        Name: ClassroomId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: classroomId,
        ArgumentName: classroomId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a classroom,
    RequestType: ,
    ResponseType: classroom,
    MethodName: ClassroomGetAClassroomAsync,
    NotAsyncMethodName: ClassroomGetAClassroom,
    FileNameWithoutExtension: G.Api.EndPoints.ClassroomGetAClassroom
  },
  {
    Id: ClassroomListAssignmentsForAClassroom,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/classrooms/{classroomId}/assignments?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: classroom_id,
        Name: ClassroomId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: classroomId,
        ArgumentName: classroomId,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List assignments for a classroom,
    RequestType: ,
    ResponseType: ,
    MethodName: ClassroomListAssignmentsForAClassroomAsync,
    NotAsyncMethodName: ClassroomListAssignmentsForAClassroom,
    FileNameWithoutExtension: G.Api.EndPoints.ClassroomListAssignmentsForAClassroom
  },
  {
    Id: CodesOfConductGetAllCodesOfConduct,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/codes_of_conduct",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all codes of conduct,
    RequestType: ,
    ResponseType: ,
    MethodName: CodesOfConductGetAllCodesOfConductAsync,
    NotAsyncMethodName: CodesOfConductGetAllCodesOfConduct,
    FileNameWithoutExtension: G.Api.EndPoints.CodesOfConductGetAllCodesOfConduct
  },
  {
    Id: CodesOfConductGetConductCode,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/codes_of_conduct/{key}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: key,
        Name: Key,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: key,
        ArgumentName: key,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a code of conduct,
    RequestType: ,
    ResponseType: code-of-conduct,
    MethodName: CodesOfConductGetConductCodeAsync,
    NotAsyncMethodName: CodesOfConductGetConductCode,
    FileNameWithoutExtension: G.Api.EndPoints.CodesOfConductGetConductCode
  },
  {
    Id: EmojisGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/emojis",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get emojis,
    RequestType: ,
    ResponseType: ,
    MethodName: EmojisGetAsync,
    NotAsyncMethodName: EmojisGet,
    FileNameWithoutExtension: G.Api.EndPoints.EmojisGet
  },
  {
    Id: CopilotUsageMetricsForEnterprise,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/enterprises/{enterprise}/copilot/usage?since={since}&until={until}&page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: enterprise,
        Name: Enterprise,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: enterprise,
        ArgumentName: enterprise,
        ParameterDefaultValue: default
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: until,
        Name: Until,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: until,
        ArgumentName: until,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 28,
        Summary:
<br/>Default Value: 28,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 28
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a summary of Copilot usage for enterprise members,
    RequestType: ,
    ResponseType: ,
    MethodName: CopilotUsageMetricsForEnterpriseAsync,
    NotAsyncMethodName: CopilotUsageMetricsForEnterprise,
    FileNameWithoutExtension: G.Api.EndPoints.CopilotUsageMetricsForEnterprise
  },
  {
    Id: DependabotListAlertsForEnterprise,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/enterprises/{enterprise}/dependabot/alerts?state={state}&severity={severity}&ecosystem={ecosystem}&package={package}&scope={scope}&sort={sort}&direction={direction}&before={before}&after={after}&first={first}&last={last}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: enterprise,
        Name: Enterprise,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: enterprise,
        ArgumentName: enterprise,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: severity,
        Name: Severity,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: severity,
        ArgumentName: severity,
        ParameterDefaultValue: default
      },
      {
        Id: ecosystem,
        Name: Ecosystem,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ecosystem,
        ArgumentName: ecosystem,
        ParameterDefaultValue: default
      },
      {
        Id: package,
        Name: Package,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: package,
        ArgumentName: package,
        ParameterDefaultValue: default
      },
      {
        Id: scope,
        Name: Scope,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Development,
            Runtime
          ],
          EnumValues: [
            development,
            runtime
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: scope,
        ArgumentName: scope,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: first,
        Name: First,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: first,
        ArgumentName: first,
        ParameterDefaultValue: 30
      },
      {
        Id: last,
        Name: Last,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: last,
        ArgumentName: last,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List Dependabot alerts for an enterprise,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotListAlertsForEnterpriseAsync,
    NotAsyncMethodName: DependabotListAlertsForEnterprise,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotListAlertsForEnterprise
  },
  {
    Id: SecretScanningListAlertsForEnterprise,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/enterprises/{enterprise}/secret-scanning/alerts?state={state}&secret_type={secretType}&resolution={resolution}&sort={sort}&direction={direction}&per_page={perPage}&before={before}&after={after}&validity={validity}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: enterprise,
        Name: Enterprise,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: enterprise,
        ArgumentName: enterprise,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Resolved
          ],
          EnumValues: [
            open,
            resolved
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: secret_type,
        Name: SecretType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: secretType,
        ArgumentName: secretType,
        ParameterDefaultValue: default
      },
      {
        Id: resolution,
        Name: Resolution,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: resolution,
        ArgumentName: resolution,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: validity,
        Name: Validity,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: validity,
        ArgumentName: validity,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List secret scanning alerts for an enterprise,
    RequestType: ,
    ResponseType: ,
    MethodName: SecretScanningListAlertsForEnterpriseAsync,
    NotAsyncMethodName: SecretScanningListAlertsForEnterprise,
    FileNameWithoutExtension: G.Api.EndPoints.SecretScanningListAlertsForEnterprise
  },
  {
    Id: ActivityListPublicEvents,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/events?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public events,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListPublicEventsAsync,
    NotAsyncMethodName: ActivityListPublicEvents,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListPublicEvents
  },
  {
    Id: ActivityGetFeeds,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/feeds",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get feeds,
    RequestType: ,
    ResponseType: feed,
    MethodName: ActivityGetFeedsAsync,
    NotAsyncMethodName: ActivityGetFeeds,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityGetFeeds
  },
  {
    Id: GistsList,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists?since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List gists for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsListAsync,
    NotAsyncMethodName: GistsList,
    FileNameWithoutExtension: G.Api.EndPoints.GistsList
  },
  {
    Id: GistsCreate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/gists",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Description of the gist
<br/>Example: Example Ruby script,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: files,
        Name: Files,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
Names and content for the files that make up the gist
<br/>Example: ,
        ParameterName: files,
        ArgumentName: files,
        ParameterDefaultValue: default
      },
      {
        Id: public,
        Name: Public,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: ,
        ParameterName: public,
        ArgumentName: public,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a gist,
    RequestType: ,
    ResponseType: gist-simple,
    MethodName: GistsCreateAsync,
    NotAsyncMethodName: GistsCreate,
    FileNameWithoutExtension: G.Api.EndPoints.GistsCreate
  },
  {
    Id: GistsListPublic,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/public?since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public gists,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsListPublicAsync,
    NotAsyncMethodName: GistsListPublic,
    FileNameWithoutExtension: G.Api.EndPoints.GistsListPublic
  },
  {
    Id: GistsListStarred,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/starred?since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List starred gists,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsListStarredAsync,
    NotAsyncMethodName: GistsListStarred,
    FileNameWithoutExtension: G.Api.EndPoints.GistsListStarred
  },
  {
    Id: GistsGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a gist,
    RequestType: ,
    ResponseType: gist-simple,
    MethodName: GistsGetAsync,
    NotAsyncMethodName: GistsGet,
    FileNameWithoutExtension: G.Api.EndPoints.GistsGet
  },
  {
    Id: GistsUpdate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The description of the gist.
<br/>Example: Example Ruby script,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: files,
        Name: Files,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary:
The gist files to be updated, renamed, or deleted. Each `key` must match the current filename
(including extension) of the targeted gist file. For example: `hello.py`.

To delete a file, set the whole file to null. For example: `hello.py : null`. The file will also be
deleted if the specified object does not contain at least one of `content` or `filename`.
<br/>Example: ,
        ParameterName: files,
        ArgumentName: files,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a gist,
    RequestType: ,
    ResponseType: gist-simple,
    MethodName: GistsUpdateAsync,
    NotAsyncMethodName: GistsUpdate,
    FileNameWithoutExtension: G.Api.EndPoints.GistsUpdate
  },
  {
    Id: GistsDelete,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a gist,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsDeleteAsync,
    NotAsyncMethodName: GistsDelete,
    FileNameWithoutExtension: G.Api.EndPoints.GistsDelete
  },
  {
    Id: GistsListComments,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/comments?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List gist comments,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsListCommentsAsync,
    NotAsyncMethodName: GistsListComments,
    FileNameWithoutExtension: G.Api.EndPoints.GistsListComments
  },
  {
    Id: GistsCreateComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/comments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The comment text.
<br/>Example: Body of the attachment,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a gist comment,
    RequestType: ,
    ResponseType: gist-comment,
    MethodName: GistsCreateCommentAsync,
    NotAsyncMethodName: GistsCreateComment,
    FileNameWithoutExtension: G.Api.EndPoints.GistsCreateComment
  },
  {
    Id: GistsGetComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a gist comment,
    RequestType: ,
    ResponseType: gist-comment,
    MethodName: GistsGetCommentAsync,
    NotAsyncMethodName: GistsGetComment,
    FileNameWithoutExtension: G.Api.EndPoints.GistsGetComment
  },
  {
    Id: GistsUpdateComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The comment text.
<br/>Example: Body of the attachment,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a gist comment,
    RequestType: ,
    ResponseType: gist-comment,
    MethodName: GistsUpdateCommentAsync,
    NotAsyncMethodName: GistsUpdateComment,
    FileNameWithoutExtension: G.Api.EndPoints.GistsUpdateComment
  },
  {
    Id: GistsDeleteComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a gist comment,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsDeleteCommentAsync,
    NotAsyncMethodName: GistsDeleteComment,
    FileNameWithoutExtension: G.Api.EndPoints.GistsDeleteComment
  },
  {
    Id: GistsListCommits,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/commits?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List gist commits,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsListCommitsAsync,
    NotAsyncMethodName: GistsListCommits,
    FileNameWithoutExtension: G.Api.EndPoints.GistsListCommits
  },
  {
    Id: GistsListForks,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/forks?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List gist forks,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsListForksAsync,
    NotAsyncMethodName: GistsListForks,
    FileNameWithoutExtension: G.Api.EndPoints.GistsListForks
  },
  {
    Id: GistsFork,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/forks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Fork a gist,
    RequestType: ,
    ResponseType: base-gist,
    MethodName: GistsForkAsync,
    NotAsyncMethodName: GistsFork,
    FileNameWithoutExtension: G.Api.EndPoints.GistsFork
  },
  {
    Id: GistsCheckIsStarred,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/star",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a gist is starred,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsCheckIsStarredAsync,
    NotAsyncMethodName: GistsCheckIsStarred,
    FileNameWithoutExtension: G.Api.EndPoints.GistsCheckIsStarred
  },
  {
    Id: GistsStar,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/star",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Star a gist,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsStarAsync,
    NotAsyncMethodName: GistsStar,
    FileNameWithoutExtension: G.Api.EndPoints.GistsStar
  },
  {
    Id: GistsUnstar,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/star",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Unstar a gist,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsUnstarAsync,
    NotAsyncMethodName: GistsUnstar,
    FileNameWithoutExtension: G.Api.EndPoints.GistsUnstar
  },
  {
    Id: GistsGetRevision,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gists/{gistId}/{sha}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gist_id,
        Name: GistId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gistId,
        ArgumentName: gistId,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a gist revision,
    RequestType: ,
    ResponseType: gist-simple,
    MethodName: GistsGetRevisionAsync,
    NotAsyncMethodName: GistsGetRevision,
    FileNameWithoutExtension: G.Api.EndPoints.GistsGetRevision
  },
  {
    Id: GitignoreGetAllTemplates,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/gitignore/templates",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all gitignore templates,
    RequestType: ,
    ResponseType: ,
    MethodName: GitignoreGetAllTemplatesAsync,
    NotAsyncMethodName: GitignoreGetAllTemplates,
    FileNameWithoutExtension: G.Api.EndPoints.GitignoreGetAllTemplates
  },
  {
    Id: GitignoreGetTemplate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/gitignore/templates/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a gitignore template,
    RequestType: ,
    ResponseType: gitignore-template,
    MethodName: GitignoreGetTemplateAsync,
    NotAsyncMethodName: GitignoreGetTemplate,
    FileNameWithoutExtension: G.Api.EndPoints.GitignoreGetTemplate
  },
  {
    Id: AppsListReposAccessibleToInstallation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/installation/repositories?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories accessible to the app installation,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListReposAccessibleToInstallationAsync,
    NotAsyncMethodName: AppsListReposAccessibleToInstallation,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListReposAccessibleToInstallation
  },
  {
    Id: AppsRevokeInstallationAccessToken,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/installation/token",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Revoke an installation access token,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsRevokeInstallationAccessTokenAsync,
    NotAsyncMethodName: AppsRevokeInstallationAccessToken,
    FileNameWithoutExtension: G.Api.EndPoints.AppsRevokeInstallationAccessToken
  },
  {
    Id: IssuesList,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/issues?filter={filter}&state={state}&labels={labels}&sort={sort}&direction={direction}&since={since}&collab={collab}&orgs={orgs}&owned={owned}&pulls={pulls}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: filter,
        Name: Filter,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Assigned,
            Created,
            Mentioned,
            Subscribed,
            Repos,
            All
          ],
          EnumValues: [
            assigned,
            created,
            mentioned,
            subscribed,
            repos,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Filter.Assigned,
        Summary:
<br/>Default Value: assigned,
        ParameterName: filter,
        ArgumentName: filter,
        ParameterDefaultValue: Filter.Assigned
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            All
          ],
          EnumValues: [
            open,
            closed,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Open,
        Summary:
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Open
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Comments
          ],
          EnumValues: [
            created,
            updated,
            comments
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: collab,
        Name: Collab,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: collab,
        ArgumentName: collab,
        ParameterDefaultValue: default
      },
      {
        Id: orgs,
        Name: Orgs,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: orgs,
        ArgumentName: orgs,
        ParameterDefaultValue: default
      },
      {
        Id: owned,
        Name: Owned,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: owned,
        ArgumentName: owned,
        ParameterDefaultValue: default
      },
      {
        Id: pulls,
        Name: Pulls,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: pulls,
        ArgumentName: pulls,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List issues assigned to the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListAsync,
    NotAsyncMethodName: IssuesList,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesList
  },
  {
    Id: LicensesGetAllCommonlyUsed,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/licenses?featured={featured}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: featured,
        Name: Featured,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: featured,
        ArgumentName: featured,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all commonly used licenses,
    RequestType: ,
    ResponseType: ,
    MethodName: LicensesGetAllCommonlyUsedAsync,
    NotAsyncMethodName: LicensesGetAllCommonlyUsed,
    FileNameWithoutExtension: G.Api.EndPoints.LicensesGetAllCommonlyUsed
  },
  {
    Id: LicensesGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/licenses/{license}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: license,
        Name: License,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: license,
        ArgumentName: license,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a license,
    RequestType: ,
    ResponseType: license,
    MethodName: LicensesGetAsync,
    NotAsyncMethodName: LicensesGet,
    FileNameWithoutExtension: G.Api.EndPoints.LicensesGet
  },
  {
    Id: MarkdownRender,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/markdown",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: text,
        Name: Text,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The Markdown text to render in HTML.,
        ParameterName: text,
        ArgumentName: text,
        ParameterDefaultValue: default
      },
      {
        Id: mode,
        Name: Mode,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Markdown,
            Gfm
          ],
          EnumValues: [
            markdown,
            gfm
          ]
        },
        IsRequired: false,
        DefaultValue: TestMode.Markdown,
        Summary:
The rendering mode.
<br/>Default Value: markdown
<br/>Example: markdown,
        ParameterName: mode,
        ArgumentName: mode,
        ParameterDefaultValue: TestMode.Markdown
      },
      {
        Id: context,
        Name: Context,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The repository context to use when creating references in `gfm` mode.  For example, setting `context` to `octo-org/octo-repo` will change the text `#42` into an HTML link to issue 42 in the `octo-org/octo-repo` repository.,
        ParameterName: context,
        ArgumentName: context,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Render a Markdown document,
    RequestType: ,
    ResponseType: ,
    MethodName: MarkdownRenderAsync,
    NotAsyncMethodName: MarkdownRender,
    FileNameWithoutExtension: G.Api.EndPoints.MarkdownRender
  },
  {
    Id: MarkdownRenderRaw,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/markdown/raw",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Render a Markdown document in raw mode,
    RequestType: ,
    ResponseType: ,
    MethodName: MarkdownRenderRawAsync,
    NotAsyncMethodName: MarkdownRenderRaw,
    FileNameWithoutExtension: G.Api.EndPoints.MarkdownRenderRaw
  },
  {
    Id: AppsGetSubscriptionPlanForAccount,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/marketplace_listing/accounts/{accountId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: account_id,
        Name: AccountId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: accountId,
        ArgumentName: accountId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a subscription plan for an account,
    RequestType: ,
    ResponseType: marketplace-purchase,
    MethodName: AppsGetSubscriptionPlanForAccountAsync,
    NotAsyncMethodName: AppsGetSubscriptionPlanForAccount,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetSubscriptionPlanForAccount
  },
  {
    Id: AppsListPlans,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/marketplace_listing/plans?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List plans,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListPlansAsync,
    NotAsyncMethodName: AppsListPlans,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListPlans
  },
  {
    Id: AppsListAccountsForPlan,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/marketplace_listing/plans/{planId}/accounts?sort={sort}&direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: plan_id,
        Name: PlanId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: planId,
        ArgumentName: planId,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List accounts for a plan,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListAccountsForPlanAsync,
    NotAsyncMethodName: AppsListAccountsForPlan,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListAccountsForPlan
  },
  {
    Id: AppsGetSubscriptionPlanForAccountStubbed,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/marketplace_listing/stubbed/accounts/{accountId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: account_id,
        Name: AccountId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: accountId,
        ArgumentName: accountId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a subscription plan for an account (stubbed),
    RequestType: ,
    ResponseType: marketplace-purchase,
    MethodName: AppsGetSubscriptionPlanForAccountStubbedAsync,
    NotAsyncMethodName: AppsGetSubscriptionPlanForAccountStubbed,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetSubscriptionPlanForAccountStubbed
  },
  {
    Id: AppsListPlansStubbed,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/marketplace_listing/stubbed/plans?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List plans (stubbed),
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListPlansStubbedAsync,
    NotAsyncMethodName: AppsListPlansStubbed,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListPlansStubbed
  },
  {
    Id: AppsListAccountsForPlanStubbed,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/marketplace_listing/stubbed/plans/{planId}/accounts?sort={sort}&direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: plan_id,
        Name: PlanId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: planId,
        ArgumentName: planId,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List accounts for a plan (stubbed),
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListAccountsForPlanStubbedAsync,
    NotAsyncMethodName: AppsListAccountsForPlanStubbed,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListAccountsForPlanStubbed
  },
  {
    Id: MetaGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/meta",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub meta information,
    RequestType: ,
    ResponseType: api-overview,
    MethodName: MetaGetAsync,
    NotAsyncMethodName: MetaGet,
    FileNameWithoutExtension: G.Api.EndPoints.MetaGet
  },
  {
    Id: ActivityListPublicEventsForRepoNetwork,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/networks/{owner}/{repo}/events?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public events for a network of repositories,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListPublicEventsForRepoNetworkAsync,
    NotAsyncMethodName: ActivityListPublicEventsForRepoNetwork,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListPublicEventsForRepoNetwork
  },
  {
    Id: ActivityListNotificationsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/notifications?all={all}&participating={participating}&since={since}&before={before}&page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: all,
        Name: All,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: false,
        Summary:
<br/>Default Value: false,
        ParameterName: all,
        ArgumentName: all,
        ParameterDefaultValue: false
      },
      {
        Id: participating,
        Name: Participating,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: false,
        Summary:
<br/>Default Value: false,
        ParameterName: participating,
        ArgumentName: participating,
        ParameterDefaultValue: false
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 50,
        Summary:
<br/>Default Value: 50,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 50
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List notifications for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListNotificationsForAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityListNotificationsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListNotificationsForAuthenticatedUser
  },
  {
    Id: ActivityMarkNotificationsAsRead,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/notifications",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: last_read_at,
        Name: LastReadAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.,
        ParameterName: lastReadAt,
        ArgumentName: lastReadAt,
        ParameterDefaultValue: default
      },
      {
        Id: read,
        Name: Read,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether the notification has been read.,
        ParameterName: read,
        ArgumentName: read,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Mark notifications as read,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityMarkNotificationsAsReadAsync,
    NotAsyncMethodName: ActivityMarkNotificationsAsRead,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityMarkNotificationsAsRead
  },
  {
    Id: ActivityGetThread,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/notifications/threads/{threadId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: thread_id,
        Name: ThreadId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: threadId,
        ArgumentName: threadId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a thread,
    RequestType: ,
    ResponseType: thread,
    MethodName: ActivityGetThreadAsync,
    NotAsyncMethodName: ActivityGetThread,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityGetThread
  },
  {
    Id: ActivityMarkThreadAsRead,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/notifications/threads/{threadId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: thread_id,
        Name: ThreadId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: threadId,
        ArgumentName: threadId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Mark a thread as read,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityMarkThreadAsReadAsync,
    NotAsyncMethodName: ActivityMarkThreadAsRead,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityMarkThreadAsRead
  },
  {
    Id: ActivityMarkThreadAsDone,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/notifications/threads/{threadId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: thread_id,
        Name: ThreadId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: threadId,
        ArgumentName: threadId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Mark a thread as done,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityMarkThreadAsDoneAsync,
    NotAsyncMethodName: ActivityMarkThreadAsDone,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityMarkThreadAsDone
  },
  {
    Id: ActivityGetThreadSubscriptionForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/notifications/threads/{threadId}/subscription",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: thread_id,
        Name: ThreadId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: threadId,
        ArgumentName: threadId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a thread subscription for the authenticated user,
    RequestType: ,
    ResponseType: thread-subscription,
    MethodName: ActivityGetThreadSubscriptionForAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityGetThreadSubscriptionForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityGetThreadSubscriptionForAuthenticatedUser
  },
  {
    Id: ActivitySetThreadSubscription,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/notifications/threads/{threadId}/subscription",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: thread_id,
        Name: ThreadId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: threadId,
        ArgumentName: threadId,
        ParameterDefaultValue: default
      },
      {
        Id: ignored,
        Name: Ignored,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to block all notifications from a thread.
<br/>Default Value: false,
        ParameterName: ignored,
        ArgumentName: ignored,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set a thread subscription,
    RequestType: ,
    ResponseType: thread-subscription,
    MethodName: ActivitySetThreadSubscriptionAsync,
    NotAsyncMethodName: ActivitySetThreadSubscription,
    FileNameWithoutExtension: G.Api.EndPoints.ActivitySetThreadSubscription
  },
  {
    Id: ActivityDeleteThreadSubscription,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/notifications/threads/{threadId}/subscription",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: thread_id,
        Name: ThreadId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: threadId,
        ArgumentName: threadId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a thread subscription,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityDeleteThreadSubscriptionAsync,
    NotAsyncMethodName: ActivityDeleteThreadSubscription,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityDeleteThreadSubscription
  },
  {
    Id: MetaGetOctocat,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/octocat?s={s}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: s,
        Name: S,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: s,
        ArgumentName: s,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get Octocat,
    RequestType: ,
    ResponseType: ,
    MethodName: MetaGetOctocatAsync,
    NotAsyncMethodName: MetaGetOctocat,
    FileNameWithoutExtension: G.Api.EndPoints.MetaGetOctocat
  },
  {
    Id: OrgsList,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/organizations?since={since}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organizations,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListAsync,
    NotAsyncMethodName: OrgsList,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsList
  },
  {
    Id: OrgsGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization,
    RequestType: ,
    ResponseType: organization-full,
    MethodName: OrgsGetAsync,
    NotAsyncMethodName: OrgsGet,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsGet
  },
  {
    Id: OrgsUpdate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: billing_email,
        Name: BillingEmail,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Billing email address. This address is not publicized.,
        ParameterName: billingEmail,
        ArgumentName: billingEmail,
        ParameterDefaultValue: default
      },
      {
        Id: company,
        Name: Company,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The company name.,
        ParameterName: company,
        ArgumentName: company,
        ParameterDefaultValue: default
      },
      {
        Id: email,
        Name: Email,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The publicly visible email address.,
        ParameterName: email,
        ArgumentName: email,
        ParameterDefaultValue: default
      },
      {
        Id: twitter_username,
        Name: TwitterUsername,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The Twitter username of the company.,
        ParameterName: twitterUsername,
        ArgumentName: twitterUsername,
        ParameterDefaultValue: default
      },
      {
        Id: location,
        Name: Location,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The location.,
        ParameterName: location,
        ArgumentName: location,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The shorthand name of the company.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The description of the company. The maximum size is 160 characters.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: has_organization_projects,
        Name: HasOrganizationProjects,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether an organization can use organization projects.,
        ParameterName: hasOrganizationProjects,
        ArgumentName: hasOrganizationProjects,
        ParameterDefaultValue: default
      },
      {
        Id: has_repository_projects,
        Name: HasRepositoryProjects,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether repositories that belong to the organization can use repository projects.,
        ParameterName: hasRepositoryProjects,
        ArgumentName: hasRepositoryProjects,
        ParameterDefaultValue: default
      },
      {
        Id: default_repository_permission,
        Name: DefaultRepositoryPermission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Read,
            Write,
            Admin,
            None
          ],
          EnumValues: [
            read,
            write,
            admin,
            none
          ]
        },
        IsRequired: false,
        DefaultValue: TestDefaultRepositoryPermission.Read,
        Summary:
Default permission level members have for organization repositories.
<br/>Default Value: read,
        ParameterName: defaultRepositoryPermission,
        ArgumentName: defaultRepositoryPermission,
        ParameterDefaultValue: TestDefaultRepositoryPermission.Read
      },
      {
        Id: members_can_create_repositories,
        Name: MembersCanCreateRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether of non-admin organization members can create repositories. **Note:** A parameter can override this parameter. See `members_allowed_repository_creation_type` in this table for details.
<br/>Default Value: true,
        ParameterName: membersCanCreateRepositories,
        ArgumentName: membersCanCreateRepositories,
        ParameterDefaultValue: true
      },
      {
        Id: members_can_create_internal_repositories,
        Name: MembersCanCreateInternalRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether organization members can create internal repositories, which are visible to all enterprise members. You can only allow members to create internal repositories if your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see "[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)" in the GitHub Help documentation.,
        ParameterName: membersCanCreateInternalRepositories,
        ArgumentName: membersCanCreateInternalRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: members_can_create_private_repositories,
        Name: MembersCanCreatePrivateRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether organization members can create private repositories, which are visible to organization members with permission. For more information, see "[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)" in the GitHub Help documentation.,
        ParameterName: membersCanCreatePrivateRepositories,
        ArgumentName: membersCanCreatePrivateRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: members_can_create_public_repositories,
        Name: MembersCanCreatePublicRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether organization members can create public repositories, which are visible to anyone. For more information, see "[Restricting repository creation in your organization](https://docs.github.com/github/setting-up-and-managing-organizations-and-teams/restricting-repository-creation-in-your-organization)" in the GitHub Help documentation.,
        ParameterName: membersCanCreatePublicRepositories,
        ArgumentName: membersCanCreatePublicRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: members_allowed_repository_creation_type,
        Name: MembersAllowedRepositoryCreationType,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Private,
            None
          ],
          EnumValues: [
            all,
            private,
            none
          ]
        },
        IsRequired: false,
        Summary:
Specifies which types of repositories non-admin organization members can create. `private` is only available to repositories that are part of an organization on GitHub Enterprise Cloud. 
**Note:** This parameter is deprecated and will be removed in the future. Its return value ignores internal repositories. Using this parameter overrides values set in `members_can_create_repositories`. See the parameter deprecation notice in the operation description for details.,
        ParameterName: membersAllowedRepositoryCreationType,
        ArgumentName: membersAllowedRepositoryCreationType,
        ParameterDefaultValue: default
      },
      {
        Id: members_can_create_pages,
        Name: MembersCanCreatePages,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether organization members can create GitHub Pages sites. Existing published sites will not be impacted.
<br/>Default Value: true,
        ParameterName: membersCanCreatePages,
        ArgumentName: membersCanCreatePages,
        ParameterDefaultValue: true
      },
      {
        Id: members_can_create_public_pages,
        Name: MembersCanCreatePublicPages,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether organization members can create public GitHub Pages sites. Existing published sites will not be impacted.
<br/>Default Value: true,
        ParameterName: membersCanCreatePublicPages,
        ArgumentName: membersCanCreatePublicPages,
        ParameterDefaultValue: true
      },
      {
        Id: members_can_create_private_pages,
        Name: MembersCanCreatePrivatePages,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether organization members can create private GitHub Pages sites. Existing published sites will not be impacted.
<br/>Default Value: true,
        ParameterName: membersCanCreatePrivatePages,
        ArgumentName: membersCanCreatePrivatePages,
        ParameterDefaultValue: true
      },
      {
        Id: members_can_fork_private_repositories,
        Name: MembersCanForkPrivateRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether organization members can fork private organization repositories.
<br/>Default Value: false,
        ParameterName: membersCanForkPrivateRepositories,
        ArgumentName: membersCanForkPrivateRepositories,
        ParameterDefaultValue: false
      },
      {
        Id: web_commit_signoff_required,
        Name: WebCommitSignoffRequired,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether contributors to organization repositories are required to sign off on commits they make through GitHub's web interface.
<br/>Default Value: false,
        ParameterName: webCommitSignoffRequired,
        ArgumentName: webCommitSignoffRequired,
        ParameterDefaultValue: false
      },
      {
        Id: blog,
        Name: Blog,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
<br/>Example: "http://github.blog",
        ParameterName: blog,
        ArgumentName: blog,
        ParameterDefaultValue: default
      },
      {
        Id: advanced_security_enabled_for_new_repositories,
        Name: AdvancedSecurityEnabledForNewRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Whether GitHub Advanced Security is automatically enabled for new repositories.

To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.,
        ParameterName: advancedSecurityEnabledForNewRepositories,
        ArgumentName: advancedSecurityEnabledForNewRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: dependabot_alerts_enabled_for_new_repositories,
        Name: DependabotAlertsEnabledForNewRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Whether Dependabot alerts is automatically enabled for new repositories.

To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.,
        ParameterName: dependabotAlertsEnabledForNewRepositories,
        ArgumentName: dependabotAlertsEnabledForNewRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: dependabot_security_updates_enabled_for_new_repositories,
        Name: DependabotSecurityUpdatesEnabledForNewRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Whether Dependabot security updates is automatically enabled for new repositories.

To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.,
        ParameterName: dependabotSecurityUpdatesEnabledForNewRepositories,
        ArgumentName: dependabotSecurityUpdatesEnabledForNewRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: dependency_graph_enabled_for_new_repositories,
        Name: DependencyGraphEnabledForNewRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Whether dependency graph is automatically enabled for new repositories.

To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.,
        ParameterName: dependencyGraphEnabledForNewRepositories,
        ArgumentName: dependencyGraphEnabledForNewRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: secret_scanning_enabled_for_new_repositories,
        Name: SecretScanningEnabledForNewRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Whether secret scanning is automatically enabled for new repositories.

To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.,
        ParameterName: secretScanningEnabledForNewRepositories,
        ArgumentName: secretScanningEnabledForNewRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: secret_scanning_push_protection_enabled_for_new_repositories,
        Name: SecretScanningPushProtectionEnabledForNewRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Whether secret scanning push protection is automatically enabled for new repositories.

To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

You can check which security and analysis features are currently enabled by using a `GET /orgs/{org}` request.,
        ParameterName: secretScanningPushProtectionEnabledForNewRepositories,
        ArgumentName: secretScanningPushProtectionEnabledForNewRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: secret_scanning_push_protection_custom_link_enabled,
        Name: SecretScanningPushProtectionCustomLinkEnabled,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether a custom link is shown to contributors who are blocked from pushing a secret by push protection.,
        ParameterName: secretScanningPushProtectionCustomLinkEnabled,
        ArgumentName: secretScanningPushProtectionCustomLinkEnabled,
        ParameterDefaultValue: default
      },
      {
        Id: secret_scanning_push_protection_custom_link,
        Name: SecretScanningPushProtectionCustomLink,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: If `secret_scanning_push_protection_custom_link_enabled` is true, the URL that will be displayed to contributors who are blocked from pushing a secret.,
        ParameterName: secretScanningPushProtectionCustomLink,
        ArgumentName: secretScanningPushProtectionCustomLink,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an organization,
    RequestType: ,
    ResponseType: organization-full,
    MethodName: OrgsUpdateAsync,
    NotAsyncMethodName: OrgsUpdate,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsUpdate
  },
  {
    Id: OrgsDelete,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsDeleteAsync,
    NotAsyncMethodName: OrgsDelete,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsDelete
  },
  {
    Id: ActionsGetActionsCacheUsageForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/cache/usage",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub Actions cache usage for an organization,
    RequestType: ,
    ResponseType: actions-cache-usage-org-enterprise,
    MethodName: ActionsGetActionsCacheUsageForOrgAsync,
    NotAsyncMethodName: ActionsGetActionsCacheUsageForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetActionsCacheUsageForOrg
  },
  {
    Id: ActionsGetActionsCacheUsageByRepoForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/cache/usage-by-repository?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories with GitHub Actions cache usage for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsGetActionsCacheUsageByRepoForOrgAsync,
    NotAsyncMethodName: ActionsGetActionsCacheUsageByRepoForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetActionsCacheUsageByRepoForOrg
  },
  {
    Id: OidcGetOidcCustomSubTemplateForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/oidc/customization/sub",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the customization template for an OIDC subject claim for an organization,
    RequestType: ,
    ResponseType: oidc-custom-sub,
    MethodName: OidcGetOidcCustomSubTemplateForOrgAsync,
    NotAsyncMethodName: OidcGetOidcCustomSubTemplateForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.OidcGetOidcCustomSubTemplateForOrg
  },
  {
    Id: OidcUpdateOidcCustomSubTemplateForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/oidc/customization/sub",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: include_claim_keys,
        Name: IncludeClaimKeys,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.,
        ParameterName: includeClaimKeys,
        ArgumentName: includeClaimKeys,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set the customization template for an OIDC subject claim for an organization,
    RequestType: OidcCustomSub,
    ResponseType: empty-object,
    MethodName: OidcUpdateOidcCustomSubTemplateForOrgAsync,
    NotAsyncMethodName: OidcUpdateOidcCustomSubTemplateForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.OidcUpdateOidcCustomSubTemplateForOrg
  },
  {
    Id: ActionsGetGithubActionsPermissionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub Actions permissions for an organization,
    RequestType: ,
    ResponseType: actions-organization-permissions,
    MethodName: ActionsGetGithubActionsPermissionsOrganizationAsync,
    NotAsyncMethodName: ActionsGetGithubActionsPermissionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetGithubActionsPermissionsOrganization
  },
  {
    Id: ActionsSetGithubActionsPermissionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: enabled_repositories,
        Name: EnabledRepositories,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            None,
            Selected
          ],
          EnumValues: [
            all,
            none,
            selected
          ]
        },
        IsRequired: true,
        Summary: The policy that controls the repositories in the organization that are allowed to run GitHub Actions.,
        ParameterName: enabledRepositories,
        ArgumentName: enabledRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: allowed_actions,
        Name: AllowedActions,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            LocalOnly,
            Selected
          ],
          EnumValues: [
            all,
            local_only,
            selected
          ]
        },
        IsRequired: false,
        Summary: The permissions policy that controls the actions and reusable workflows that are allowed to run.,
        ParameterName: allowedActions,
        ArgumentName: allowedActions,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set GitHub Actions permissions for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsSetGithubActionsPermissionsOrganizationAsync,
    NotAsyncMethodName: ActionsSetGithubActionsPermissionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetGithubActionsPermissionsOrganization
  },
  {
    Id: ActionsListSelectedRepositoriesEnabledGithubActionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions/repositories?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List selected repositories enabled for GitHub Actions in an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListSelectedRepositoriesEnabledGithubActionsOrganizationAsync,
    NotAsyncMethodName: ActionsListSelectedRepositoriesEnabledGithubActionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListSelectedRepositoriesEnabledGithubActionsOrganization
  },
  {
    Id: ActionsSetSelectedRepositoriesEnabledGithubActionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions/repositories",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: List of repository IDs to enable for GitHub Actions.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set selected repositories enabled for GitHub Actions in an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsSetSelectedRepositoriesEnabledGithubActionsOrganizationAsync,
    NotAsyncMethodName: ActionsSetSelectedRepositoriesEnabledGithubActionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetSelectedRepositoriesEnabledGithubActionsOrganization
  },
  {
    Id: ActionsEnableSelectedRepositoryGithubActionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Enable a selected repository for GitHub Actions in an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsEnableSelectedRepositoryGithubActionsOrganizationAsync,
    NotAsyncMethodName: ActionsEnableSelectedRepositoryGithubActionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsEnableSelectedRepositoryGithubActionsOrganization
  },
  {
    Id: ActionsDisableSelectedRepositoryGithubActionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Disable a selected repository for GitHub Actions in an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDisableSelectedRepositoryGithubActionsOrganizationAsync,
    NotAsyncMethodName: ActionsDisableSelectedRepositoryGithubActionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDisableSelectedRepositoryGithubActionsOrganization
  },
  {
    Id: ActionsGetAllowedActionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions/selected-actions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get allowed actions and reusable workflows for an organization,
    RequestType: ,
    ResponseType: selected-actions,
    MethodName: ActionsGetAllowedActionsOrganizationAsync,
    NotAsyncMethodName: ActionsGetAllowedActionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetAllowedActionsOrganization
  },
  {
    Id: ActionsSetAllowedActionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions/selected-actions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: github_owned_allowed,
        Name: GithubOwnedAllowed,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.,
        ParameterName: githubOwnedAllowed,
        ArgumentName: githubOwnedAllowed,
        ParameterDefaultValue: default
      },
      {
        Id: verified_allowed,
        Name: VerifiedAllowed,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Marketplace verified creators.,
        ParameterName: verifiedAllowed,
        ArgumentName: verifiedAllowed,
        ParameterDefaultValue: default
      },
      {
        Id: patterns_allowed,
        Name: PatternsAllowed,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.

**Note**: The `patterns_allowed` setting only applies to public repositories.,
        ParameterName: patternsAllowed,
        ArgumentName: patternsAllowed,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set allowed actions and reusable workflows for an organization,
    RequestType: SelectedActions,
    ResponseType: ,
    MethodName: ActionsSetAllowedActionsOrganizationAsync,
    NotAsyncMethodName: ActionsSetAllowedActionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetAllowedActionsOrganization
  },
  {
    Id: ActionsGetGithubActionsDefaultWorkflowPermissionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions/workflow",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get default workflow permissions for an organization,
    RequestType: ,
    ResponseType: actions-get-default-workflow-permissions,
    MethodName: ActionsGetGithubActionsDefaultWorkflowPermissionsOrganizationAsync,
    NotAsyncMethodName: ActionsGetGithubActionsDefaultWorkflowPermissionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetGithubActionsDefaultWorkflowPermissionsOrganization
  },
  {
    Id: ActionsSetGithubActionsDefaultWorkflowPermissionsOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/permissions/workflow",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: default_workflow_permissions,
        Name: DefaultWorkflowPermissions,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Read,
            Write
          ],
          EnumValues: [
            read,
            write
          ]
        },
        IsRequired: false,
        Summary: The default workflow permissions granted to the GITHUB_TOKEN when running workflows.,
        ParameterName: defaultWorkflowPermissions,
        ArgumentName: defaultWorkflowPermissions,
        ParameterDefaultValue: default
      },
      {
        Id: can_approve_pull_request_reviews,
        Name: CanApprovePullRequestReviews,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether GitHub Actions can approve pull requests. Enabling this can be a security risk.,
        ParameterName: canApprovePullRequestReviews,
        ArgumentName: canApprovePullRequestReviews,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set default workflow permissions for an organization,
    RequestType: ActionsSetDefaultWorkflowPermissions,
    ResponseType: ,
    MethodName: ActionsSetGithubActionsDefaultWorkflowPermissionsOrganizationAsync,
    NotAsyncMethodName: ActionsSetGithubActionsDefaultWorkflowPermissionsOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetGithubActionsDefaultWorkflowPermissionsOrganization
  },
  {
    Id: ActionsListSelfHostedRunnersForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners?name={name}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List self-hosted runners for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListSelfHostedRunnersForOrgAsync,
    NotAsyncMethodName: ActionsListSelfHostedRunnersForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListSelfHostedRunnersForOrg
  },
  {
    Id: ActionsListRunnerApplicationsForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/downloads",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List runner applications for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListRunnerApplicationsForOrgAsync,
    NotAsyncMethodName: ActionsListRunnerApplicationsForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListRunnerApplicationsForOrg
  },
  {
    Id: ActionsGenerateRunnerJitconfigForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/generate-jitconfig",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the new runner.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: runner_group_id,
        Name: RunnerGroupId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The ID of the runner group to register the runner to.,
        ParameterName: runnerGroupId,
        ArgumentName: runnerGroupId,
        ParameterDefaultValue: default
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The names of the custom labels to add to the runner. **Minimum items**: 1. **Maximum items**: 100.,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      },
      {
        Id: work_folder,
        Name: WorkFolder,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "_work",
        Summary:
The working directory to be used for job execution, relative to the runner install directory.
<br/>Default Value: _work,
        ParameterName: workFolder,
        ArgumentName: workFolder,
        ParameterDefaultValue: "_work"
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create configuration for a just-in-time runner for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsGenerateRunnerJitconfigForOrgAsync,
    NotAsyncMethodName: ActionsGenerateRunnerJitconfigForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGenerateRunnerJitconfigForOrg
  },
  {
    Id: ActionsCreateRegistrationTokenForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/registration-token",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a registration token for an organization,
    RequestType: ,
    ResponseType: authentication-token,
    MethodName: ActionsCreateRegistrationTokenForOrgAsync,
    NotAsyncMethodName: ActionsCreateRegistrationTokenForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateRegistrationTokenForOrg
  },
  {
    Id: ActionsCreateRemoveTokenForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/remove-token",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a remove token for an organization,
    RequestType: ,
    ResponseType: authentication-token,
    MethodName: ActionsCreateRemoveTokenForOrgAsync,
    NotAsyncMethodName: ActionsCreateRemoveTokenForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateRemoveTokenForOrg
  },
  {
    Id: ActionsGetSelfHostedRunnerForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/{runnerId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a self-hosted runner for an organization,
    RequestType: ,
    ResponseType: runner,
    MethodName: ActionsGetSelfHostedRunnerForOrgAsync,
    NotAsyncMethodName: ActionsGetSelfHostedRunnerForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetSelfHostedRunnerForOrg
  },
  {
    Id: ActionsDeleteSelfHostedRunnerFromOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/{runnerId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a self-hosted runner from an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteSelfHostedRunnerFromOrgAsync,
    NotAsyncMethodName: ActionsDeleteSelfHostedRunnerFromOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteSelfHostedRunnerFromOrg
  },
  {
    Id: ActionsListLabelsForSelfHostedRunnerForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/{runnerId}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List labels for a self-hosted runner for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListLabelsForSelfHostedRunnerForOrgAsync,
    NotAsyncMethodName: ActionsListLabelsForSelfHostedRunnerForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListLabelsForSelfHostedRunnerForOrg
  },
  {
    Id: ActionsAddCustomLabelsToSelfHostedRunnerForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/{runnerId}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The names of the custom labels to add to the runner.,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add custom labels to a self-hosted runner for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsAddCustomLabelsToSelfHostedRunnerForOrgAsync,
    NotAsyncMethodName: ActionsAddCustomLabelsToSelfHostedRunnerForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsAddCustomLabelsToSelfHostedRunnerForOrg
  },
  {
    Id: ActionsSetCustomLabelsForSelfHostedRunnerForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/{runnerId}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels.,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set custom labels for a self-hosted runner for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsSetCustomLabelsForSelfHostedRunnerForOrgAsync,
    NotAsyncMethodName: ActionsSetCustomLabelsForSelfHostedRunnerForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetCustomLabelsForSelfHostedRunnerForOrg
  },
  {
    Id: ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/{runnerId}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove all custom labels from a self-hosted runner for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForOrgAsync,
    NotAsyncMethodName: ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForOrg
  },
  {
    Id: ActionsRemoveCustomLabelFromSelfHostedRunnerForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/runners/{runnerId}/labels/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a custom label from a self-hosted runner for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsRemoveCustomLabelFromSelfHostedRunnerForOrgAsync,
    NotAsyncMethodName: ActionsRemoveCustomLabelFromSelfHostedRunnerForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsRemoveCustomLabelFromSelfHostedRunnerForOrg
  },
  {
    Id: ActionsListOrgSecrets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/secrets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization secrets,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListOrgSecretsAsync,
    NotAsyncMethodName: ActionsListOrgSecrets,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListOrgSecrets
  },
  {
    Id: ActionsGetOrgPublicKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/secrets/public-key",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization public key,
    RequestType: ,
    ResponseType: actions-public-key,
    MethodName: ActionsGetOrgPublicKeyAsync,
    NotAsyncMethodName: ActionsGetOrgPublicKey,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetOrgPublicKey
  },
  {
    Id: ActionsGetOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization secret,
    RequestType: ,
    ResponseType: organization-actions-secret,
    MethodName: ActionsGetOrgSecretAsync,
    NotAsyncMethodName: ActionsGetOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetOrgSecret
  },
  {
    Id: ActionsCreateOrUpdateOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: encrypted_value,
        Name: EncryptedValue,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/rest/actions/secrets#get-an-organization-public-key) endpoint.,
        ParameterName: encryptedValue,
        ArgumentName: encryptedValue,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: ID of the key you used to encrypt the secret.,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Private,
            Selected
          ],
          EnumValues: [
            all,
            private,
            selected
          ]
        },
        IsRequired: true,
        Summary: Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret.,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/rest/actions/secrets#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/rest/actions/secrets#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/rest/actions/secrets#remove-selected-repository-from-an-organization-secret) endpoints.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update an organization secret,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsCreateOrUpdateOrgSecretAsync,
    NotAsyncMethodName: ActionsCreateOrUpdateOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateOrUpdateOrgSecret
  },
  {
    Id: ActionsDeleteOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteOrgSecretAsync,
    NotAsyncMethodName: ActionsDeleteOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteOrgSecret
  },
  {
    Id: ActionsListSelectedReposForOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/secrets/{secretName}/repositories?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List selected repositories for an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListSelectedReposForOrgSecretAsync,
    NotAsyncMethodName: ActionsListSelectedReposForOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListSelectedReposForOrgSecret
  },
  {
    Id: ActionsSetSelectedReposForOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/secrets/{secretName}/repositories",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can add and remove individual repositories using the [Add selected repository to an organization secret](https://docs.github.com/rest/actions/secrets#add-selected-repository-to-an-organization-secret) and [Remove selected repository from an organization secret](https://docs.github.com/rest/actions/secrets#remove-selected-repository-from-an-organization-secret) endpoints.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set selected repositories for an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsSetSelectedReposForOrgSecretAsync,
    NotAsyncMethodName: ActionsSetSelectedReposForOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetSelectedReposForOrgSecret
  },
  {
    Id: ActionsAddSelectedRepoToOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/secrets/{secretName}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add selected repository to an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsAddSelectedRepoToOrgSecretAsync,
    NotAsyncMethodName: ActionsAddSelectedRepoToOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsAddSelectedRepoToOrgSecret
  },
  {
    Id: ActionsRemoveSelectedRepoFromOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/secrets/{secretName}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove selected repository from an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsRemoveSelectedRepoFromOrgSecretAsync,
    NotAsyncMethodName: ActionsRemoveSelectedRepoFromOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsRemoveSelectedRepoFromOrgSecret
  },
  {
    Id: ActionsListOrgVariables,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/variables?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 10,
        Summary:
<br/>Default Value: 10,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 10
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization variables,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListOrgVariablesAsync,
    NotAsyncMethodName: ActionsListOrgVariables,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListOrgVariables
  },
  {
    Id: ActionsCreateOrgVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/variables",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the variable.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: value,
        Name: Value,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The value of the variable.,
        ParameterName: value,
        ArgumentName: value,
        ParameterDefaultValue: default
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Private,
            Selected
          ],
          EnumValues: [
            all,
            private,
            selected
          ]
        },
        IsRequired: true,
        Summary: The type of repositories in the organization that can access the variable. `selected` means only the repositories specified by `selected_repository_ids` can access the variable.,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of repository ids that can access the organization variable. You can only provide a list of repository ids when the `visibility` is set to `selected`.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an organization variable,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsCreateOrgVariableAsync,
    NotAsyncMethodName: ActionsCreateOrgVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateOrgVariable
  },
  {
    Id: ActionsGetOrgVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/variables/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization variable,
    RequestType: ,
    ResponseType: organization-actions-variable,
    MethodName: ActionsGetOrgVariableAsync,
    NotAsyncMethodName: ActionsGetOrgVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetOrgVariable
  },
  {
    Id: ActionsUpdateOrgVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/variables/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the variable.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: value,
        Name: Value,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The value of the variable.,
        ParameterName: value,
        ArgumentName: value,
        ParameterDefaultValue: default
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Private,
            Selected
          ],
          EnumValues: [
            all,
            private,
            selected
          ]
        },
        IsRequired: false,
        Summary: The type of repositories in the organization that can access the variable. `selected` means only the repositories specified by `selected_repository_ids` can access the variable.,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of repository ids that can access the organization variable. You can only provide a list of repository ids when the `visibility` is set to `selected`.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an organization variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsUpdateOrgVariableAsync,
    NotAsyncMethodName: ActionsUpdateOrgVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsUpdateOrgVariable
  },
  {
    Id: ActionsDeleteOrgVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/variables/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an organization variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteOrgVariableAsync,
    NotAsyncMethodName: ActionsDeleteOrgVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteOrgVariable
  },
  {
    Id: ActionsListSelectedReposForOrgVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/variables/{name}/repositories?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List selected repositories for an organization variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListSelectedReposForOrgVariableAsync,
    NotAsyncMethodName: ActionsListSelectedReposForOrgVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListSelectedReposForOrgVariable
  },
  {
    Id: ActionsSetSelectedReposForOrgVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/variables/{name}/repositories",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The IDs of the repositories that can access the organization variable.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set selected repositories for an organization variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsSetSelectedReposForOrgVariableAsync,
    NotAsyncMethodName: ActionsSetSelectedReposForOrgVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetSelectedReposForOrgVariable
  },
  {
    Id: ActionsAddSelectedRepoToOrgVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/variables/{name}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add selected repository to an organization variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsAddSelectedRepoToOrgVariableAsync,
    NotAsyncMethodName: ActionsAddSelectedRepoToOrgVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsAddSelectedRepoToOrgVariable
  },
  {
    Id: ActionsRemoveSelectedRepoFromOrgVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/actions/variables/{name}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove selected repository from an organization variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsRemoveSelectedRepoFromOrgVariableAsync,
    NotAsyncMethodName: ActionsRemoveSelectedRepoFromOrgVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsRemoveSelectedRepoFromOrgVariable
  },
  {
    Id: OrgsListBlockedUsers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/blocks?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List users blocked by an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListBlockedUsersAsync,
    NotAsyncMethodName: OrgsListBlockedUsers,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListBlockedUsers
  },
  {
    Id: OrgsCheckBlockedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/blocks/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a user is blocked by an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsCheckBlockedUserAsync,
    NotAsyncMethodName: OrgsCheckBlockedUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCheckBlockedUser
  },
  {
    Id: OrgsBlockUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/blocks/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Block a user from an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsBlockUserAsync,
    NotAsyncMethodName: OrgsBlockUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsBlockUser
  },
  {
    Id: OrgsUnblockUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/blocks/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Unblock a user from an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsUnblockUserAsync,
    NotAsyncMethodName: OrgsUnblockUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsUnblockUser
  },
  {
    Id: CodeScanningListAlertsForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/code-scanning/alerts?tool_name={toolName}&tool_guid={toolGuid}&before={before}&after={after}&page={page}&per_page={perPage}&direction={direction}&state={state}&sort={sort}&severity={severity}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: tool_name,
        Name: ToolName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: The name of the tool used to generate the code scanning analysis.,
        ParameterName: toolName,
        ArgumentName: toolName,
        ParameterDefaultValue: default
      },
      {
        Id: tool_guid,
        Name: ToolGuid,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.,
        ParameterName: toolGuid,
        ArgumentName: toolGuid,
        ParameterDefaultValue: default
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            Dismissed,
            Fixed
          ],
          EnumValues: [
            open,
            closed,
            dismissed,
            fixed
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: State of a code scanning alert.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: severity,
        Name: Severity,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Critical,
            High,
            Medium,
            Low,
            Warning,
            Note,
            Error
          ],
          EnumValues: [
            critical,
            high,
            medium,
            low,
            warning,
            note,
            error
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: Severity of a code scanning alert.,
        ParameterName: severity,
        ArgumentName: severity,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List code scanning alerts for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CodeScanningListAlertsForOrgAsync,
    NotAsyncMethodName: CodeScanningListAlertsForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningListAlertsForOrg
  },
  {
    Id: CodespacesListInOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List codespaces for the organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesListInOrganizationAsync,
    NotAsyncMethodName: CodespacesListInOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesListInOrganization
  },
  {
    Id: CodespacesSetCodespacesAccess,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/access",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Disabled,
            SelectedMembers,
            AllMembers,
            AllMembersAndOutsideCollaborators
          ],
          EnumValues: [
            disabled,
            selected_members,
            all_members,
            all_members_and_outside_collaborators
          ]
        },
        IsRequired: true,
        Summary: Which users can access codespaces in the organization. `disabled` means that no users can access codespaces in the organization.,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: selected_usernames,
        Name: SelectedUsernames,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The usernames of the organization members who should have access to codespaces in the organization. Required when `visibility` is `selected_members`. The provided list of usernames will replace any existing value.,
        ParameterName: selectedUsernames,
        ArgumentName: selectedUsernames,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Manage access control for organization codespaces,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesSetCodespacesAccessAsync,
    NotAsyncMethodName: CodespacesSetCodespacesAccess,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesSetCodespacesAccess
  },
  {
    Id: CodespacesSetCodespacesAccessUsers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/access/selected_users",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: selected_usernames,
        Name: SelectedUsernames,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The usernames of the organization members whose codespaces be billed to the organization.,
        ParameterName: selectedUsernames,
        ArgumentName: selectedUsernames,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add users to Codespaces access for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesSetCodespacesAccessUsersAsync,
    NotAsyncMethodName: CodespacesSetCodespacesAccessUsers,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesSetCodespacesAccessUsers
  },
  {
    Id: CodespacesDeleteCodespacesAccessUsers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/access/selected_users",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: selected_usernames,
        Name: SelectedUsernames,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The usernames of the organization members whose codespaces should not be billed to the organization.,
        ParameterName: selectedUsernames,
        ArgumentName: selectedUsernames,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove users from Codespaces access for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesDeleteCodespacesAccessUsersAsync,
    NotAsyncMethodName: CodespacesDeleteCodespacesAccessUsers,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesDeleteCodespacesAccessUsers
  },
  {
    Id: CodespacesListOrgSecrets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/secrets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization secrets,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesListOrgSecretsAsync,
    NotAsyncMethodName: CodespacesListOrgSecrets,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesListOrgSecrets
  },
  {
    Id: CodespacesGetOrgPublicKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/secrets/public-key",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization public key,
    RequestType: ,
    ResponseType: codespaces-public-key,
    MethodName: CodespacesGetOrgPublicKeyAsync,
    NotAsyncMethodName: CodespacesGetOrgPublicKey,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesGetOrgPublicKey
  },
  {
    Id: CodespacesGetOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization secret,
    RequestType: ,
    ResponseType: codespaces-org-secret,
    MethodName: CodespacesGetOrgSecretAsync,
    NotAsyncMethodName: CodespacesGetOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesGetOrgSecret
  },
  {
    Id: CodespacesCreateOrUpdateOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: encrypted_value,
        Name: EncryptedValue,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/rest/codespaces/organization-secrets#get-an-organization-public-key) endpoint.,
        ParameterName: encryptedValue,
        ArgumentName: encryptedValue,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The ID of the key you used to encrypt the secret.,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Private,
            Selected
          ],
          EnumValues: [
            all,
            private,
            selected
          ]
        },
        IsRequired: true,
        Summary: Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret.,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of repository IDs that can access the organization secret. You can only provide a list of repository IDs when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#remove-selected-repository-from-an-organization-secret) endpoints.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update an organization secret,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: CodespacesCreateOrUpdateOrgSecretAsync,
    NotAsyncMethodName: CodespacesCreateOrUpdateOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesCreateOrUpdateOrgSecret
  },
  {
    Id: CodespacesDeleteOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesDeleteOrgSecretAsync,
    NotAsyncMethodName: CodespacesDeleteOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesDeleteOrgSecret
  },
  {
    Id: CodespacesListSelectedReposForOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/secrets/{secretName}/repositories?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List selected repositories for an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesListSelectedReposForOrgSecretAsync,
    NotAsyncMethodName: CodespacesListSelectedReposForOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesListSelectedReposForOrgSecret
  },
  {
    Id: CodespacesSetSelectedReposForOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/secrets/{secretName}/repositories",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can add and remove individual repositories using the [Set selected repositories for an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#set-selected-repositories-for-an-organization-secret) and [Remove selected repository from an organization secret](https://docs.github.com/rest/codespaces/organization-secrets#remove-selected-repository-from-an-organization-secret) endpoints.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set selected repositories for an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesSetSelectedReposForOrgSecretAsync,
    NotAsyncMethodName: CodespacesSetSelectedReposForOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesSetSelectedReposForOrgSecret
  },
  {
    Id: CodespacesAddSelectedRepoToOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/secrets/{secretName}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add selected repository to an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesAddSelectedRepoToOrgSecretAsync,
    NotAsyncMethodName: CodespacesAddSelectedRepoToOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesAddSelectedRepoToOrgSecret
  },
  {
    Id: CodespacesRemoveSelectedRepoFromOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/codespaces/secrets/{secretName}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove selected repository from an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesRemoveSelectedRepoFromOrgSecretAsync,
    NotAsyncMethodName: CodespacesRemoveSelectedRepoFromOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesRemoveSelectedRepoFromOrgSecret
  },
  {
    Id: CopilotGetCopilotOrganizationDetails,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/copilot/billing",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get Copilot seat information and settings for an organization,
    RequestType: ,
    ResponseType: copilot-organization-details,
    MethodName: CopilotGetCopilotOrganizationDetailsAsync,
    NotAsyncMethodName: CopilotGetCopilotOrganizationDetails,
    FileNameWithoutExtension: G.Api.EndPoints.CopilotGetCopilotOrganizationDetails
  },
  {
    Id: CopilotListCopilotSeats,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/copilot/billing/seats?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 50,
        Summary:
<br/>Default Value: 50,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 50
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List all Copilot seat assignments for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CopilotListCopilotSeatsAsync,
    NotAsyncMethodName: CopilotListCopilotSeats,
    FileNameWithoutExtension: G.Api.EndPoints.CopilotListCopilotSeats
  },
  {
    Id: CopilotAddCopilotSeatsForTeams,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/copilot/billing/selected_teams",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: selected_teams,
        Name: SelectedTeams,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: List of team names within the organization to which to grant access to GitHub Copilot.,
        ParameterName: selectedTeams,
        ArgumentName: selectedTeams,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add teams to the Copilot subscription for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CopilotAddCopilotSeatsForTeamsAsync,
    NotAsyncMethodName: CopilotAddCopilotSeatsForTeams,
    FileNameWithoutExtension: G.Api.EndPoints.CopilotAddCopilotSeatsForTeams
  },
  {
    Id: CopilotCancelCopilotSeatAssignmentForTeams,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/copilot/billing/selected_teams",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: selected_teams,
        Name: SelectedTeams,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The names of teams from which to revoke access to GitHub Copilot.,
        ParameterName: selectedTeams,
        ArgumentName: selectedTeams,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove teams from the Copilot subscription for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CopilotCancelCopilotSeatAssignmentForTeamsAsync,
    NotAsyncMethodName: CopilotCancelCopilotSeatAssignmentForTeams,
    FileNameWithoutExtension: G.Api.EndPoints.CopilotCancelCopilotSeatAssignmentForTeams
  },
  {
    Id: CopilotAddCopilotSeatsForUsers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/copilot/billing/selected_users",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: selected_usernames,
        Name: SelectedUsernames,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The usernames of the organization members to be granted access to GitHub Copilot.,
        ParameterName: selectedUsernames,
        ArgumentName: selectedUsernames,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add users to the Copilot subscription for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CopilotAddCopilotSeatsForUsersAsync,
    NotAsyncMethodName: CopilotAddCopilotSeatsForUsers,
    FileNameWithoutExtension: G.Api.EndPoints.CopilotAddCopilotSeatsForUsers
  },
  {
    Id: CopilotCancelCopilotSeatAssignmentForUsers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/copilot/billing/selected_users",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: selected_usernames,
        Name: SelectedUsernames,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The usernames of the organization members for which to revoke access to GitHub Copilot.,
        ParameterName: selectedUsernames,
        ArgumentName: selectedUsernames,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove users from the Copilot subscription for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CopilotCancelCopilotSeatAssignmentForUsersAsync,
    NotAsyncMethodName: CopilotCancelCopilotSeatAssignmentForUsers,
    FileNameWithoutExtension: G.Api.EndPoints.CopilotCancelCopilotSeatAssignmentForUsers
  },
  {
    Id: CopilotUsageMetricsForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/copilot/usage?since={since}&until={until}&page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: until,
        Name: Until,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: until,
        ArgumentName: until,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 28,
        Summary:
<br/>Default Value: 28,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 28
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a summary of Copilot usage for organization members,
    RequestType: ,
    ResponseType: ,
    MethodName: CopilotUsageMetricsForOrgAsync,
    NotAsyncMethodName: CopilotUsageMetricsForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.CopilotUsageMetricsForOrg
  },
  {
    Id: DependabotListAlertsForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/alerts?state={state}&severity={severity}&ecosystem={ecosystem}&package={package}&scope={scope}&sort={sort}&direction={direction}&before={before}&after={after}&first={first}&last={last}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: severity,
        Name: Severity,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: severity,
        ArgumentName: severity,
        ParameterDefaultValue: default
      },
      {
        Id: ecosystem,
        Name: Ecosystem,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ecosystem,
        ArgumentName: ecosystem,
        ParameterDefaultValue: default
      },
      {
        Id: package,
        Name: Package,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: package,
        ArgumentName: package,
        ParameterDefaultValue: default
      },
      {
        Id: scope,
        Name: Scope,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Development,
            Runtime
          ],
          EnumValues: [
            development,
            runtime
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: scope,
        ArgumentName: scope,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: first,
        Name: First,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: first,
        ArgumentName: first,
        ParameterDefaultValue: 30
      },
      {
        Id: last,
        Name: Last,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: last,
        ArgumentName: last,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List Dependabot alerts for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotListAlertsForOrgAsync,
    NotAsyncMethodName: DependabotListAlertsForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotListAlertsForOrg
  },
  {
    Id: DependabotListOrgSecrets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/secrets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization secrets,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotListOrgSecretsAsync,
    NotAsyncMethodName: DependabotListOrgSecrets,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotListOrgSecrets
  },
  {
    Id: DependabotGetOrgPublicKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/secrets/public-key",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization public key,
    RequestType: ,
    ResponseType: dependabot-public-key,
    MethodName: DependabotGetOrgPublicKeyAsync,
    NotAsyncMethodName: DependabotGetOrgPublicKey,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotGetOrgPublicKey
  },
  {
    Id: DependabotGetOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization secret,
    RequestType: ,
    ResponseType: organization-dependabot-secret,
    MethodName: DependabotGetOrgSecretAsync,
    NotAsyncMethodName: DependabotGetOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotGetOrgSecret
  },
  {
    Id: DependabotCreateOrUpdateOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: encrypted_value,
        Name: EncryptedValue,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/rest/dependabot/secrets#get-an-organization-public-key) endpoint.,
        ParameterName: encryptedValue,
        ArgumentName: encryptedValue,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: ID of the key you used to encrypt the secret.,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Private,
            Selected
          ],
          EnumValues: [
            all,
            private,
            selected
          ]
        },
        IsRequired: true,
        Summary: Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret.,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/rest/dependabot/secrets#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/rest/dependabot/secrets#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/rest/dependabot/secrets#remove-selected-repository-from-an-organization-secret) endpoints.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update an organization secret,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: DependabotCreateOrUpdateOrgSecretAsync,
    NotAsyncMethodName: DependabotCreateOrUpdateOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotCreateOrUpdateOrgSecret
  },
  {
    Id: DependabotDeleteOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotDeleteOrgSecretAsync,
    NotAsyncMethodName: DependabotDeleteOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotDeleteOrgSecret
  },
  {
    Id: DependabotListSelectedReposForOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/secrets/{secretName}/repositories?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List selected repositories for an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotListSelectedReposForOrgSecretAsync,
    NotAsyncMethodName: DependabotListSelectedReposForOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotListSelectedReposForOrgSecret
  },
  {
    Id: DependabotSetSelectedReposForOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/secrets/{secretName}/repositories",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can add and remove individual repositories using the [Set selected repositories for an organization secret](https://docs.github.com/rest/dependabot/secrets#set-selected-repositories-for-an-organization-secret) and [Remove selected repository from an organization secret](https://docs.github.com/rest/dependabot/secrets#remove-selected-repository-from-an-organization-secret) endpoints.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set selected repositories for an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotSetSelectedReposForOrgSecretAsync,
    NotAsyncMethodName: DependabotSetSelectedReposForOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotSetSelectedReposForOrgSecret
  },
  {
    Id: DependabotAddSelectedRepoToOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/secrets/{secretName}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add selected repository to an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotAddSelectedRepoToOrgSecretAsync,
    NotAsyncMethodName: DependabotAddSelectedRepoToOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotAddSelectedRepoToOrgSecret
  },
  {
    Id: DependabotRemoveSelectedRepoFromOrgSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/dependabot/secrets/{secretName}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove selected repository from an organization secret,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotRemoveSelectedRepoFromOrgSecretAsync,
    NotAsyncMethodName: DependabotRemoveSelectedRepoFromOrgSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotRemoveSelectedRepoFromOrgSecret
  },
  {
    Id: PackagesListDockerMigrationConflictingPackagesForOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/docker/conflicts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get list of conflicting packages during Docker migration for organization,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesListDockerMigrationConflictingPackagesForOrganizationAsync,
    NotAsyncMethodName: PackagesListDockerMigrationConflictingPackagesForOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesListDockerMigrationConflictingPackagesForOrganization
  },
  {
    Id: ActivityListPublicOrgEvents,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/events?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public organization events,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListPublicOrgEventsAsync,
    NotAsyncMethodName: ActivityListPublicOrgEvents,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListPublicOrgEvents
  },
  {
    Id: OrgsListFailedInvitations,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/failed_invitations?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List failed organization invitations,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListFailedInvitationsAsync,
    NotAsyncMethodName: OrgsListFailedInvitations,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListFailedInvitations
  },
  {
    Id: OrgsListWebhooks,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization webhooks,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListWebhooksAsync,
    NotAsyncMethodName: OrgsListWebhooks,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListWebhooks
  },
  {
    Id: OrgsCreateWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Must be passed as "web".,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: config,
        Name: Config,
        Type: {
          CSharpType: TestConfig,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Key/value pairs to provide settings for this webhook.,
        ParameterName: config,
        ArgumentName: config,
        ParameterDefaultValue: default
      },
      {
        Id: events,
        Name: Events,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary:
Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. Set to `["*"]` to receive all possible events.
<br/>Default Value: [push],
        ParameterName: events,
        ArgumentName: events,
        ParameterDefaultValue: default
      },
      {
        Id: active,
        Name: Active,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
<br/>Default Value: true,
        ParameterName: active,
        ArgumentName: active,
        ParameterDefaultValue: true
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an organization webhook,
    RequestType: ,
    ResponseType: org-hook,
    MethodName: OrgsCreateWebhookAsync,
    NotAsyncMethodName: OrgsCreateWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCreateWebhook
  },
  {
    Id: OrgsGetWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks/{hookId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization webhook,
    RequestType: ,
    ResponseType: org-hook,
    MethodName: OrgsGetWebhookAsync,
    NotAsyncMethodName: OrgsGetWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsGetWebhook
  },
  {
    Id: OrgsUpdateWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks/{hookId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: config,
        Name: Config,
        Type: {
          CSharpType: TestConfig?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Key/value pairs to provide settings for this webhook.,
        ParameterName: config,
        ArgumentName: config,
        ParameterDefaultValue: default
      },
      {
        Id: events,
        Name: Events,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary:
Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.
<br/>Default Value: [push],
        ParameterName: events,
        ArgumentName: events,
        ParameterDefaultValue: default
      },
      {
        Id: active,
        Name: Active,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
<br/>Default Value: true,
        ParameterName: active,
        ArgumentName: active,
        ParameterDefaultValue: true
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
<br/>Example: "web",
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an organization webhook,
    RequestType: ,
    ResponseType: org-hook,
    MethodName: OrgsUpdateWebhookAsync,
    NotAsyncMethodName: OrgsUpdateWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsUpdateWebhook
  },
  {
    Id: OrgsDeleteWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks/{hookId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an organization webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsDeleteWebhookAsync,
    NotAsyncMethodName: OrgsDeleteWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsDeleteWebhook
  },
  {
    Id: OrgsGetWebhookConfigForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks/{hookId}/config",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a webhook configuration for an organization,
    RequestType: ,
    ResponseType: webhook-config,
    MethodName: OrgsGetWebhookConfigForOrgAsync,
    NotAsyncMethodName: OrgsGetWebhookConfigForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsGetWebhookConfigForOrg
  },
  {
    Id: OrgsUpdateWebhookConfigForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks/{hookId}/config",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: url,
        Name: Url,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The URL to which the payloads will be delivered.
<br/>Example: https://example.com/webhook,
        ParameterName: url,
        ArgumentName: url,
        ParameterDefaultValue: default
      },
      {
        Id: content_type,
        Name: ContentType,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
<br/>Example: "json",
        ParameterName: contentType,
        ArgumentName: contentType,
        ParameterDefaultValue: default
      },
      {
        Id: secret,
        Name: Secret,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
<br/>Example: "********",
        ParameterName: secret,
        ArgumentName: secret,
        ParameterDefaultValue: default
      },
      {
        Id: insecure_ssl,
        Name: InsecureSsl,
        Type: {
          CSharpType: WebhookConfigInsecureSsl?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: ,
        ParameterName: insecureSsl,
        ArgumentName: insecureSsl,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a webhook configuration for an organization,
    RequestType: ,
    ResponseType: webhook-config,
    MethodName: OrgsUpdateWebhookConfigForOrgAsync,
    NotAsyncMethodName: OrgsUpdateWebhookConfigForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsUpdateWebhookConfigForOrg
  },
  {
    Id: OrgsListWebhookDeliveries,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks/{hookId}/deliveries?per_page={perPage}&cursor={cursor}&redelivery={redelivery}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: cursor,
        Name: Cursor,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: cursor,
        ArgumentName: cursor,
        ParameterDefaultValue: default
      },
      {
        Id: redelivery,
        Name: Redelivery,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: redelivery,
        ArgumentName: redelivery,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List deliveries for an organization webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListWebhookDeliveriesAsync,
    NotAsyncMethodName: OrgsListWebhookDeliveries,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListWebhookDeliveries
  },
  {
    Id: OrgsGetWebhookDelivery,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks/{hookId}/deliveries/{deliveryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: delivery_id,
        Name: DeliveryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deliveryId,
        ArgumentName: deliveryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a webhook delivery for an organization webhook,
    RequestType: ,
    ResponseType: hook-delivery,
    MethodName: OrgsGetWebhookDeliveryAsync,
    NotAsyncMethodName: OrgsGetWebhookDelivery,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsGetWebhookDelivery
  },
  {
    Id: OrgsRedeliverWebhookDelivery,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks/{hookId}/deliveries/{deliveryId}/attempts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: delivery_id,
        Name: DeliveryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deliveryId,
        ArgumentName: deliveryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Redeliver a delivery for an organization webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRedeliverWebhookDeliveryAsync,
    NotAsyncMethodName: OrgsRedeliverWebhookDelivery,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRedeliverWebhookDelivery
  },
  {
    Id: OrgsPingWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/hooks/{hookId}/pings",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Ping an organization webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsPingWebhookAsync,
    NotAsyncMethodName: OrgsPingWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsPingWebhook
  },
  {
    Id: AppsGetOrgInstallation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/installation",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization installation for the authenticated app,
    RequestType: ,
    ResponseType: installation,
    MethodName: AppsGetOrgInstallationAsync,
    NotAsyncMethodName: AppsGetOrgInstallation,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetOrgInstallation
  },
  {
    Id: OrgsListAppInstallations,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/installations?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List app installations for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListAppInstallationsAsync,
    NotAsyncMethodName: OrgsListAppInstallations,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListAppInstallations
  },
  {
    Id: InteractionsGetRestrictionsForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/interaction-limits",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get interaction restrictions for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: InteractionsGetRestrictionsForOrgAsync,
    NotAsyncMethodName: InteractionsGetRestrictionsForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.InteractionsGetRestrictionsForOrg
  },
  {
    Id: InteractionsSetRestrictionsForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/interaction-limits",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: limit,
        Name: Limit,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            ExistingUsers,
            ContributorsOnly,
            CollaboratorsOnly
          ],
          EnumValues: [
            existing_users,
            contributors_only,
            collaborators_only
          ]
        },
        IsRequired: true,
        Summary:
The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect.
<br/>Example: collaborators_only,
        ParameterName: limit,
        ArgumentName: limit,
        ParameterDefaultValue: default
      },
      {
        Id: expiry,
        Name: Expiry,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            OneDay,
            ThreeDays,
            OneWeek,
            OneMonth,
            SixMonths
          ],
          EnumValues: [
            one_day,
            three_days,
            one_week,
            one_month,
            six_months
          ]
        },
        IsRequired: false,
        Summary:
The duration of the interaction restriction. Default: `one_day`.
<br/>Example: one_month,
        ParameterName: expiry,
        ArgumentName: expiry,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set interaction restrictions for an organization,
    RequestType: InteractionLimit,
    ResponseType: interaction-limit-response,
    MethodName: InteractionsSetRestrictionsForOrgAsync,
    NotAsyncMethodName: InteractionsSetRestrictionsForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.InteractionsSetRestrictionsForOrg
  },
  {
    Id: InteractionsRemoveRestrictionsForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/interaction-limits",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove interaction restrictions for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: InteractionsRemoveRestrictionsForOrgAsync,
    NotAsyncMethodName: InteractionsRemoveRestrictionsForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.InteractionsRemoveRestrictionsForOrg
  },
  {
    Id: OrgsListPendingInvitations,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/invitations?per_page={perPage}&page={page}&role={role}&invitation_source={invitationSource}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: role,
        Name: Role,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Admin,
            DirectMember,
            BillingManager,
            HiringManager
          ],
          EnumValues: [
            all,
            admin,
            direct_member,
            billing_manager,
            hiring_manager
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Role.All,
        Summary:
<br/>Default Value: all,
        ParameterName: role,
        ArgumentName: role,
        ParameterDefaultValue: Role.All
      },
      {
        Id: invitation_source,
        Name: InvitationSource,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Member,
            Scim
          ],
          EnumValues: [
            all,
            member,
            scim
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: InvitationSource.All,
        Summary:
<br/>Default Value: all,
        ParameterName: invitationSource,
        ArgumentName: invitationSource,
        ParameterDefaultValue: InvitationSource.All
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List pending organization invitations,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListPendingInvitationsAsync,
    NotAsyncMethodName: OrgsListPendingInvitations,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListPendingInvitations
  },
  {
    Id: OrgsCreateInvitation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/invitations",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: invitee_id,
        Name: InviteeId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: **Required unless you provide `email`**. GitHub user ID for the person you are inviting.,
        ParameterName: inviteeId,
        ArgumentName: inviteeId,
        ParameterDefaultValue: default
      },
      {
        Id: email,
        Name: Email,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: **Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user.,
        ParameterName: email,
        ArgumentName: email,
        ParameterDefaultValue: default
      },
      {
        Id: role,
        Name: Role,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Admin,
            DirectMember,
            BillingManager,
            Reinstate
          ],
          EnumValues: [
            admin,
            direct_member,
            billing_manager,
            reinstate
          ]
        },
        IsRequired: false,
        DefaultValue: TestRole.DirectMember,
        Summary:
The role for the new member. 
 * `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  
 * `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  
 * `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization. 
 * `reinstate` - The previous role assigned to the invitee before they were removed from your organization. Can be one of the roles listed above. Only works if the invitee was previously part of your organization.
<br/>Default Value: direct_member,
        ParameterName: role,
        ArgumentName: role,
        ParameterDefaultValue: TestRole.DirectMember
      },
      {
        Id: team_ids,
        Name: TeamIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specify IDs for the teams you want to invite new members to.,
        ParameterName: teamIds,
        ArgumentName: teamIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an organization invitation,
    RequestType: ,
    ResponseType: organization-invitation,
    MethodName: OrgsCreateInvitationAsync,
    NotAsyncMethodName: OrgsCreateInvitation,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCreateInvitation
  },
  {
    Id: OrgsCancelInvitation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/invitations/{invitationId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: invitation_id,
        Name: InvitationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: invitationId,
        ArgumentName: invitationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Cancel an organization invitation,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsCancelInvitationAsync,
    NotAsyncMethodName: OrgsCancelInvitation,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCancelInvitation
  },
  {
    Id: OrgsListInvitationTeams,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/invitations/{invitationId}/teams?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: invitation_id,
        Name: InvitationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: invitationId,
        ArgumentName: invitationId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization invitation teams,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListInvitationTeamsAsync,
    NotAsyncMethodName: OrgsListInvitationTeams,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListInvitationTeams
  },
  {
    Id: IssuesListForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/issues?filter={filter}&state={state}&labels={labels}&sort={sort}&direction={direction}&since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: filter,
        Name: Filter,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Assigned,
            Created,
            Mentioned,
            Subscribed,
            Repos,
            All
          ],
          EnumValues: [
            assigned,
            created,
            mentioned,
            subscribed,
            repos,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Filter.Assigned,
        Summary:
<br/>Default Value: assigned,
        ParameterName: filter,
        ArgumentName: filter,
        ParameterDefaultValue: Filter.Assigned
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            All
          ],
          EnumValues: [
            open,
            closed,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Open,
        Summary:
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Open
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Comments
          ],
          EnumValues: [
            created,
            updated,
            comments
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization issues assigned to the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListForOrgAsync,
    NotAsyncMethodName: IssuesListForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListForOrg
  },
  {
    Id: OrgsListMembers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/members?filter={filter}&role={role}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: filter,
        Name: Filter,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            _2faDisabled,
            All
          ],
          EnumValues: [
            2fa_disabled,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Filter.All,
        Summary:
<br/>Default Value: all,
        ParameterName: filter,
        ArgumentName: filter,
        ParameterDefaultValue: Filter.All
      },
      {
        Id: role,
        Name: Role,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Admin,
            Member
          ],
          EnumValues: [
            all,
            admin,
            member
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Role.All,
        Summary:
<br/>Default Value: all,
        ParameterName: role,
        ArgumentName: role,
        ParameterDefaultValue: Role.All
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization members,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListMembersAsync,
    NotAsyncMethodName: OrgsListMembers,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListMembers
  },
  {
    Id: OrgsCheckMembershipForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/members/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check organization membership for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsCheckMembershipForUserAsync,
    NotAsyncMethodName: OrgsCheckMembershipForUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCheckMembershipForUser
  },
  {
    Id: OrgsRemoveMember,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/members/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove an organization member,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRemoveMemberAsync,
    NotAsyncMethodName: OrgsRemoveMember,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRemoveMember
  },
  {
    Id: CodespacesGetCodespacesForUserInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/members/{username}/codespaces?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List codespaces for a user in organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesGetCodespacesForUserInOrgAsync,
    NotAsyncMethodName: CodespacesGetCodespacesForUserInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesGetCodespacesForUserInOrg
  },
  {
    Id: CodespacesDeleteFromOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/members/{username}/codespaces/{codespaceName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a codespace from the organization,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesDeleteFromOrganizationAsync,
    NotAsyncMethodName: CodespacesDeleteFromOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesDeleteFromOrganization
  },
  {
    Id: CodespacesStopInOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/members/{username}/codespaces/{codespaceName}/stop",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Stop a codespace for an organization user,
    RequestType: ,
    ResponseType: codespace,
    MethodName: CodespacesStopInOrganizationAsync,
    NotAsyncMethodName: CodespacesStopInOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesStopInOrganization
  },
  {
    Id: CopilotGetCopilotSeatDetailsForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/members/{username}/copilot",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get Copilot seat assignment details for a user,
    RequestType: ,
    ResponseType: copilot-seat-details,
    MethodName: CopilotGetCopilotSeatDetailsForUserAsync,
    NotAsyncMethodName: CopilotGetCopilotSeatDetailsForUser,
    FileNameWithoutExtension: G.Api.EndPoints.CopilotGetCopilotSeatDetailsForUser
  },
  {
    Id: OrgsGetMembershipForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/memberships/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get organization membership for a user,
    RequestType: ,
    ResponseType: org-membership,
    MethodName: OrgsGetMembershipForUserAsync,
    NotAsyncMethodName: OrgsGetMembershipForUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsGetMembershipForUser
  },
  {
    Id: OrgsSetMembershipForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/memberships/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: role,
        Name: Role,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Admin,
            Member
          ],
          EnumValues: [
            admin,
            member
          ]
        },
        IsRequired: false,
        DefaultValue: TestRole.Member,
        Summary:
The role to give the user in the organization. Can be one of:  
 * `admin` - The user will become an owner of the organization.  
 * `member` - The user will become a non-owner member of the organization.
<br/>Default Value: member,
        ParameterName: role,
        ArgumentName: role,
        ParameterDefaultValue: TestRole.Member
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set organization membership for a user,
    RequestType: ,
    ResponseType: org-membership,
    MethodName: OrgsSetMembershipForUserAsync,
    NotAsyncMethodName: OrgsSetMembershipForUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsSetMembershipForUser
  },
  {
    Id: OrgsRemoveMembershipForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/memberships/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove organization membership for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRemoveMembershipForUserAsync,
    NotAsyncMethodName: OrgsRemoveMembershipForUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRemoveMembershipForUser
  },
  {
    Id: MigrationsListForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/migrations?per_page={perPage}&page={page}&{string.Join("&", exclude.Select(static x => $"exclude={x}"))}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: exclude,
        Name: Exclude,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: exclude,
        ArgumentName: exclude,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization migrations,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsListForOrgAsync,
    NotAsyncMethodName: MigrationsListForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsListForOrg
  },
  {
    Id: MigrationsStartForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/migrations",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: repositories,
        Name: Repositories,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A list of arrays indicating which repositories should be migrated.,
        ParameterName: repositories,
        ArgumentName: repositories,
        ParameterDefaultValue: default
      },
      {
        Id: lock_repositories,
        Name: LockRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Indicates whether repositories should be locked (to prevent manipulation) while migrating data.
<br/>Default Value: false
<br/>Example: true,
        ParameterName: lockRepositories,
        ArgumentName: lockRepositories,
        ParameterDefaultValue: false
      },
      {
        Id: exclude_metadata,
        Name: ExcludeMetadata,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Indicates whether metadata should be excluded and only git source should be included for the migration.
<br/>Default Value: false,
        ParameterName: excludeMetadata,
        ArgumentName: excludeMetadata,
        ParameterDefaultValue: false
      },
      {
        Id: exclude_git_data,
        Name: ExcludeGitData,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Indicates whether the repository git data should be excluded from the migration.
<br/>Default Value: false,
        ParameterName: excludeGitData,
        ArgumentName: excludeGitData,
        ParameterDefaultValue: false
      },
      {
        Id: exclude_attachments,
        Name: ExcludeAttachments,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).
<br/>Default Value: false
<br/>Example: true,
        ParameterName: excludeAttachments,
        ArgumentName: excludeAttachments,
        ParameterDefaultValue: false
      },
      {
        Id: exclude_releases,
        Name: ExcludeReleases,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Indicates whether releases should be excluded from the migration (to reduce migration archive file size).
<br/>Default Value: false
<br/>Example: true,
        ParameterName: excludeReleases,
        ArgumentName: excludeReleases,
        ParameterDefaultValue: false
      },
      {
        Id: exclude_owner_projects,
        Name: ExcludeOwnerProjects,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Indicates whether projects owned by the organization or users should be excluded. from the migration.
<br/>Default Value: false
<br/>Example: true,
        ParameterName: excludeOwnerProjects,
        ArgumentName: excludeOwnerProjects,
        ParameterDefaultValue: false
      },
      {
        Id: org_metadata_only,
        Name: OrgMetadataOnly,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
<br/>Default Value: false
<br/>Example: true,
        ParameterName: orgMetadataOnly,
        ArgumentName: orgMetadataOnly,
        ParameterDefaultValue: false
      },
      {
        Id: exclude,
        Name: Exclude,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Exclude related items from being returned in the response in order to improve performance of the request.,
        ParameterName: exclude,
        ArgumentName: exclude,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Start an organization migration,
    RequestType: ,
    ResponseType: migration,
    MethodName: MigrationsStartForOrgAsync,
    NotAsyncMethodName: MigrationsStartForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsStartForOrg
  },
  {
    Id: MigrationsGetStatusForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/migrations/{migrationId}?{string.Join("&", exclude.Select(static x => $"exclude={x}"))}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      },
      {
        Id: exclude,
        Name: Exclude,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: exclude,
        ArgumentName: exclude,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization migration status,
    RequestType: ,
    ResponseType: migration,
    MethodName: MigrationsGetStatusForOrgAsync,
    NotAsyncMethodName: MigrationsGetStatusForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsGetStatusForOrg
  },
  {
    Id: MigrationsDownloadArchiveForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/migrations/{migrationId}/archive",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Download an organization migration archive,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsDownloadArchiveForOrgAsync,
    NotAsyncMethodName: MigrationsDownloadArchiveForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsDownloadArchiveForOrg
  },
  {
    Id: MigrationsDeleteArchiveForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/migrations/{migrationId}/archive",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an organization migration archive,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsDeleteArchiveForOrgAsync,
    NotAsyncMethodName: MigrationsDeleteArchiveForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsDeleteArchiveForOrg
  },
  {
    Id: MigrationsUnlockRepoForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/migrations/{migrationId}/repos/{repoName}/lock",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      },
      {
        Id: repo_name,
        Name: RepoName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repoName,
        ArgumentName: repoName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Unlock an organization repository,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsUnlockRepoForOrgAsync,
    NotAsyncMethodName: MigrationsUnlockRepoForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsUnlockRepoForOrg
  },
  {
    Id: MigrationsListReposForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/migrations/{migrationId}/repositories?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories in an organization migration,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsListReposForOrgAsync,
    NotAsyncMethodName: MigrationsListReposForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsListReposForOrg
  },
  {
    Id: OrgsListOrganizationFineGrainedPermissions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-fine-grained-permissions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization fine-grained permissions for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListOrganizationFineGrainedPermissionsAsync,
    NotAsyncMethodName: OrgsListOrganizationFineGrainedPermissions,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListOrganizationFineGrainedPermissions
  },
  {
    Id: OrgsListOrgRoles,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all organization roles for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListOrgRolesAsync,
    NotAsyncMethodName: OrgsListOrgRoles,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListOrgRoles
  },
  {
    Id: OrgsCreateCustomOrganizationRole,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the custom role.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short description about the intended usage of this role or what permissions it grants.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: permissions,
        Name: Permissions,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A list of additional permissions included in this role.,
        ParameterName: permissions,
        ArgumentName: permissions,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a custom organization role,
    RequestType: ,
    ResponseType: organization-role,
    MethodName: OrgsCreateCustomOrganizationRoleAsync,
    NotAsyncMethodName: OrgsCreateCustomOrganizationRole,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCreateCustomOrganizationRole
  },
  {
    Id: OrgsRevokeAllOrgRolesTeam,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/teams/{teamSlug}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove all organization roles for a team,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRevokeAllOrgRolesTeamAsync,
    NotAsyncMethodName: OrgsRevokeAllOrgRolesTeam,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRevokeAllOrgRolesTeam
  },
  {
    Id: OrgsAssignTeamToOrgRole,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/teams/{teamSlug}/{roleId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: role_id,
        Name: RoleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: roleId,
        ArgumentName: roleId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Assign an organization role to a team,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsAssignTeamToOrgRoleAsync,
    NotAsyncMethodName: OrgsAssignTeamToOrgRole,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsAssignTeamToOrgRole
  },
  {
    Id: OrgsRevokeOrgRoleTeam,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/teams/{teamSlug}/{roleId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: role_id,
        Name: RoleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: roleId,
        ArgumentName: roleId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove an organization role from a team,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRevokeOrgRoleTeamAsync,
    NotAsyncMethodName: OrgsRevokeOrgRoleTeam,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRevokeOrgRoleTeam
  },
  {
    Id: OrgsRevokeAllOrgRolesUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/users/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove all organization roles for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRevokeAllOrgRolesUserAsync,
    NotAsyncMethodName: OrgsRevokeAllOrgRolesUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRevokeAllOrgRolesUser
  },
  {
    Id: OrgsAssignUserToOrgRole,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/users/{username}/{roleId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: role_id,
        Name: RoleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: roleId,
        ArgumentName: roleId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Assign an organization role to a user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsAssignUserToOrgRoleAsync,
    NotAsyncMethodName: OrgsAssignUserToOrgRole,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsAssignUserToOrgRole
  },
  {
    Id: OrgsRevokeOrgRoleUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/users/{username}/{roleId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: role_id,
        Name: RoleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: roleId,
        ArgumentName: roleId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove an organization role from a user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRevokeOrgRoleUserAsync,
    NotAsyncMethodName: OrgsRevokeOrgRoleUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRevokeOrgRoleUser
  },
  {
    Id: OrgsGetOrgRole,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/{roleId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: role_id,
        Name: RoleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: roleId,
        ArgumentName: roleId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization role,
    RequestType: ,
    ResponseType: organization-role,
    MethodName: OrgsGetOrgRoleAsync,
    NotAsyncMethodName: OrgsGetOrgRole,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsGetOrgRole
  },
  {
    Id: OrgsPatchCustomOrganizationRole,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/{roleId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: role_id,
        Name: RoleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: roleId,
        ArgumentName: roleId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the custom role.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short description about the intended usage of this role or what permissions it grants.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: permissions,
        Name: Permissions,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A list of additional permissions included in this role.,
        ParameterName: permissions,
        ArgumentName: permissions,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a custom organization role,
    RequestType: ,
    ResponseType: organization-role,
    MethodName: OrgsPatchCustomOrganizationRoleAsync,
    NotAsyncMethodName: OrgsPatchCustomOrganizationRole,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsPatchCustomOrganizationRole
  },
  {
    Id: OrgsDeleteCustomOrganizationRole,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/{roleId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: role_id,
        Name: RoleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: roleId,
        ArgumentName: roleId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a custom organization role.,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsDeleteCustomOrganizationRoleAsync,
    NotAsyncMethodName: OrgsDeleteCustomOrganizationRole,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsDeleteCustomOrganizationRole
  },
  {
    Id: OrgsListOrgRoleTeams,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/{roleId}/teams?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: role_id,
        Name: RoleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: roleId,
        ArgumentName: roleId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List teams that are assigned to an organization role,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListOrgRoleTeamsAsync,
    NotAsyncMethodName: OrgsListOrgRoleTeams,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListOrgRoleTeams
  },
  {
    Id: OrgsListOrgRoleUsers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/organization-roles/{roleId}/users?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: role_id,
        Name: RoleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: roleId,
        ArgumentName: roleId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List users that are assigned to an organization role,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListOrgRoleUsersAsync,
    NotAsyncMethodName: OrgsListOrgRoleUsers,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListOrgRoleUsers
  },
  {
    Id: OrgsListOutsideCollaborators,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/outside_collaborators?filter={filter}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: filter,
        Name: Filter,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            _2faDisabled,
            All
          ],
          EnumValues: [
            2fa_disabled,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Filter.All,
        Summary:
<br/>Default Value: all,
        ParameterName: filter,
        ArgumentName: filter,
        ParameterDefaultValue: Filter.All
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List outside collaborators for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListOutsideCollaboratorsAsync,
    NotAsyncMethodName: OrgsListOutsideCollaborators,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListOutsideCollaborators
  },
  {
    Id: OrgsConvertMemberToOutsideCollaborator,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/outside_collaborators/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: async,
        Name: Async,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
When set to `true`, the request will be performed asynchronously. Returns a 202 status code when the job is successfully queued.
<br/>Default Value: false,
        ParameterName: async,
        ArgumentName: async,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Convert an organization member to outside collaborator,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsConvertMemberToOutsideCollaboratorAsync,
    NotAsyncMethodName: OrgsConvertMemberToOutsideCollaborator,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsConvertMemberToOutsideCollaborator
  },
  {
    Id: OrgsRemoveOutsideCollaborator,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/outside_collaborators/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove outside collaborator from an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRemoveOutsideCollaboratorAsync,
    NotAsyncMethodName: OrgsRemoveOutsideCollaborator,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRemoveOutsideCollaborator
  },
  {
    Id: PackagesListPackagesForOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/packages?package_type={packageType}&visibility={visibility}&page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Public,
            Private,
            Internal
          ],
          EnumValues: [
            public,
            private,
            internal
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List packages for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesListPackagesForOrganizationAsync,
    NotAsyncMethodName: PackagesListPackagesForOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesListPackagesForOrganization
  },
  {
    Id: PackagesGetPackageForOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/packages/{packageType}/{packageName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a package for an organization,
    RequestType: ,
    ResponseType: package,
    MethodName: PackagesGetPackageForOrganizationAsync,
    NotAsyncMethodName: PackagesGetPackageForOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesGetPackageForOrganization
  },
  {
    Id: PackagesDeletePackageForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/packages/{packageType}/{packageName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a package for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesDeletePackageForOrgAsync,
    NotAsyncMethodName: PackagesDeletePackageForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesDeletePackageForOrg
  },
  {
    Id: PackagesRestorePackageForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/packages/{packageType}/{packageName}/restore?token={token}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: token,
        Name: Token,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: token,
        ArgumentName: token,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Restore a package for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesRestorePackageForOrgAsync,
    NotAsyncMethodName: PackagesRestorePackageForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesRestorePackageForOrg
  },
  {
    Id: PackagesGetAllPackageVersionsForPackageOwnedByOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/packages/{packageType}/{packageName}/versions?page={page}&per_page={perPage}&state={state}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Active,
            Deleted
          ],
          EnumValues: [
            active,
            deleted
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Active,
        Summary:
<br/>Default Value: active,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Active
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List package versions for a package owned by an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesGetAllPackageVersionsForPackageOwnedByOrgAsync,
    NotAsyncMethodName: PackagesGetAllPackageVersionsForPackageOwnedByOrg,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesGetAllPackageVersionsForPackageOwnedByOrg
  },
  {
    Id: PackagesGetPackageVersionForOrganization,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/packages/{packageType}/{packageName}/versions/{packageVersionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: package_version_id,
        Name: PackageVersionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageVersionId,
        ArgumentName: packageVersionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a package version for an organization,
    RequestType: ,
    ResponseType: package-version,
    MethodName: PackagesGetPackageVersionForOrganizationAsync,
    NotAsyncMethodName: PackagesGetPackageVersionForOrganization,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesGetPackageVersionForOrganization
  },
  {
    Id: PackagesDeletePackageVersionForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/packages/{packageType}/{packageName}/versions/{packageVersionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: package_version_id,
        Name: PackageVersionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageVersionId,
        ArgumentName: packageVersionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete package version for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesDeletePackageVersionForOrgAsync,
    NotAsyncMethodName: PackagesDeletePackageVersionForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesDeletePackageVersionForOrg
  },
  {
    Id: PackagesRestorePackageVersionForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/packages/{packageType}/{packageName}/versions/{packageVersionId}/restore",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: package_version_id,
        Name: PackageVersionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageVersionId,
        ArgumentName: packageVersionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Restore package version for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesRestorePackageVersionForOrgAsync,
    NotAsyncMethodName: PackagesRestorePackageVersionForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesRestorePackageVersionForOrg
  },
  {
    Id: OrgsListPatGrantRequests,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/personal-access-token-requests?per_page={perPage}&page={page}&sort={sort}&direction={direction}&{string.Join("&", owner.Select(static x => $"owner={x}"))}&repository={repository}&permission={permission}&last_used_before={lastUsedBefore}&last_used_after={lastUsedAfter}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            CreatedAt
          ],
          EnumValues: [
            created_at
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.CreatedAt,
        Summary:
<br/>Default Value: created_at,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.CreatedAt
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: owner[]=octocat1,owner[]=octocat2,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repository,
        Name: Repository,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: Hello-World,
        ParameterName: repository,
        ArgumentName: repository,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: issues_read,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: default
      },
      {
        Id: last_used_before,
        Name: LastUsedBefore,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: lastUsedBefore,
        ArgumentName: lastUsedBefore,
        ParameterDefaultValue: default
      },
      {
        Id: last_used_after,
        Name: LastUsedAfter,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: lastUsedAfter,
        ArgumentName: lastUsedAfter,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List requests to access organization resources with fine-grained personal access tokens,
    RequestType: ,
    ResponseType: basic-error,
    MethodName: OrgsListPatGrantRequestsAsync,
    NotAsyncMethodName: OrgsListPatGrantRequests,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListPatGrantRequests
  },
  {
    Id: OrgsReviewPatGrantRequestsInBulk,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/personal-access-token-requests",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: pat_request_ids,
        Name: PatRequestIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Unique identifiers of the requests for access via fine-grained personal access token. Must be formed of between 1 and 100 `pat_request_id` values.,
        ParameterName: patRequestIds,
        ArgumentName: patRequestIds,
        ParameterDefaultValue: default
      },
      {
        Id: action,
        Name: Action,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Approve,
            Deny
          ],
          EnumValues: [
            approve,
            deny
          ]
        },
        IsRequired: true,
        Summary: Action to apply to the requests.,
        ParameterName: action,
        ArgumentName: action,
        ParameterDefaultValue: default
      },
      {
        Id: reason,
        Name: Reason,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Reason for approving or denying the requests. Max 1024 characters.,
        ParameterName: reason,
        ArgumentName: reason,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Review requests to access organization resources with fine-grained personal access tokens,
    RequestType: ,
    ResponseType: basic-error,
    MethodName: OrgsReviewPatGrantRequestsInBulkAsync,
    NotAsyncMethodName: OrgsReviewPatGrantRequestsInBulk,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsReviewPatGrantRequestsInBulk
  },
  {
    Id: OrgsReviewPatGrantRequest,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/personal-access-token-requests/{patRequestId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: pat_request_id,
        Name: PatRequestId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: patRequestId,
        ArgumentName: patRequestId,
        ParameterDefaultValue: default
      },
      {
        Id: action,
        Name: Action,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Approve,
            Deny
          ],
          EnumValues: [
            approve,
            deny
          ]
        },
        IsRequired: true,
        Summary: Action to apply to the request.,
        ParameterName: action,
        ArgumentName: action,
        ParameterDefaultValue: default
      },
      {
        Id: reason,
        Name: Reason,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Reason for approving or denying the request. Max 1024 characters.,
        ParameterName: reason,
        ArgumentName: reason,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Review a request to access organization resources with a fine-grained personal access token,
    RequestType: ,
    ResponseType: basic-error,
    MethodName: OrgsReviewPatGrantRequestAsync,
    NotAsyncMethodName: OrgsReviewPatGrantRequest,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsReviewPatGrantRequest
  },
  {
    Id: OrgsListPatGrantRequestRepositories,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/personal-access-token-requests/{patRequestId}/repositories?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: pat_request_id,
        Name: PatRequestId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: patRequestId,
        ArgumentName: patRequestId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories requested to be accessed by a fine-grained personal access token,
    RequestType: ,
    ResponseType: basic-error,
    MethodName: OrgsListPatGrantRequestRepositoriesAsync,
    NotAsyncMethodName: OrgsListPatGrantRequestRepositories,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListPatGrantRequestRepositories
  },
  {
    Id: OrgsListPatGrants,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/personal-access-tokens?per_page={perPage}&page={page}&sort={sort}&direction={direction}&{string.Join("&", owner.Select(static x => $"owner={x}"))}&repository={repository}&permission={permission}&last_used_before={lastUsedBefore}&last_used_after={lastUsedAfter}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            CreatedAt
          ],
          EnumValues: [
            created_at
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.CreatedAt,
        Summary:
<br/>Default Value: created_at,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.CreatedAt
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: owner[]=octocat1,owner[]=octocat2,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repository,
        Name: Repository,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: Hello-World,
        ParameterName: repository,
        ArgumentName: repository,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: issues_read,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: default
      },
      {
        Id: last_used_before,
        Name: LastUsedBefore,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: lastUsedBefore,
        ArgumentName: lastUsedBefore,
        ParameterDefaultValue: default
      },
      {
        Id: last_used_after,
        Name: LastUsedAfter,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: lastUsedAfter,
        ArgumentName: lastUsedAfter,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List fine-grained personal access tokens with access to organization resources,
    RequestType: ,
    ResponseType: basic-error,
    MethodName: OrgsListPatGrantsAsync,
    NotAsyncMethodName: OrgsListPatGrants,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListPatGrants
  },
  {
    Id: OrgsUpdatePatAccesses,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/personal-access-tokens",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: action,
        Name: Action,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Revoke
          ],
          EnumValues: [
            revoke
          ]
        },
        IsRequired: true,
        Summary: Action to apply to the fine-grained personal access token.,
        ParameterName: action,
        ArgumentName: action,
        ParameterDefaultValue: default
      },
      {
        Id: pat_ids,
        Name: PatIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The IDs of the fine-grained personal access tokens.,
        ParameterName: patIds,
        ArgumentName: patIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Update the access to organization resources via fine-grained personal access tokens,
    RequestType: ,
    ResponseType: basic-error,
    MethodName: OrgsUpdatePatAccessesAsync,
    NotAsyncMethodName: OrgsUpdatePatAccesses,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsUpdatePatAccesses
  },
  {
    Id: OrgsUpdatePatAccess,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/personal-access-tokens/{patId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: pat_id,
        Name: PatId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: patId,
        ArgumentName: patId,
        ParameterDefaultValue: default
      },
      {
        Id: action,
        Name: Action,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Revoke
          ],
          EnumValues: [
            revoke
          ]
        },
        IsRequired: true,
        Summary: Action to apply to the fine-grained personal access token.,
        ParameterName: action,
        ArgumentName: action,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Update the access a fine-grained personal access token has to organization resources,
    RequestType: ,
    ResponseType: basic-error,
    MethodName: OrgsUpdatePatAccessAsync,
    NotAsyncMethodName: OrgsUpdatePatAccess,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsUpdatePatAccess
  },
  {
    Id: OrgsListPatGrantRepositories,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/personal-access-tokens/{patId}/repositories?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: pat_id,
        Name: PatId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: patId,
        ArgumentName: patId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories a fine-grained personal access token has access to,
    RequestType: ,
    ResponseType: basic-error,
    MethodName: OrgsListPatGrantRepositoriesAsync,
    NotAsyncMethodName: OrgsListPatGrantRepositories,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListPatGrantRepositories
  },
  {
    Id: ProjectsListForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/projects?state={state}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            All
          ],
          EnumValues: [
            open,
            closed,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Open,
        Summary:
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Open
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization projects,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsListForOrgAsync,
    NotAsyncMethodName: ProjectsListForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsListForOrg
  },
  {
    Id: ProjectsCreateForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/projects",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the project.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The description of the project.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an organization project,
    RequestType: ,
    ResponseType: project,
    MethodName: ProjectsCreateForOrgAsync,
    NotAsyncMethodName: ProjectsCreateForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsCreateForOrg
  },
  {
    Id: OrgsGetAllCustomProperties,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/properties/schema",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all custom properties for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsGetAllCustomPropertiesAsync,
    NotAsyncMethodName: OrgsGetAllCustomProperties,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsGetAllCustomProperties
  },
  {
    Id: OrgsCreateOrUpdateCustomProperties,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/properties/schema",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: properties,
        Name: Properties,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<OrgCustomProperty>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The array of custom properties to create or update.,
        ParameterName: properties,
        ArgumentName: properties,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Create or update custom properties for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsCreateOrUpdateCustomPropertiesAsync,
    NotAsyncMethodName: OrgsCreateOrUpdateCustomProperties,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCreateOrUpdateCustomProperties
  },
  {
    Id: OrgsGetCustomProperty,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/properties/schema/{customPropertyName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: custom_property_name,
        Name: CustomPropertyName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: customPropertyName,
        ArgumentName: customPropertyName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a custom property for an organization,
    RequestType: ,
    ResponseType: org-custom-property,
    MethodName: OrgsGetCustomPropertyAsync,
    NotAsyncMethodName: OrgsGetCustomProperty,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsGetCustomProperty
  },
  {
    Id: OrgsCreateOrUpdateCustomProperty,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/properties/schema/{customPropertyName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: custom_property_name,
        Name: CustomPropertyName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: customPropertyName,
        ArgumentName: customPropertyName,
        ParameterDefaultValue: default
      },
      {
        Id: value_type,
        Name: ValueType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            String,
            SingleSelect
          ],
          EnumValues: [
            string,
            single_select
          ]
        },
        IsRequired: true,
        Summary:
The type of the value for the property
<br/>Example: single_select,
        ParameterName: valueType,
        ArgumentName: valueType,
        ParameterDefaultValue: default
      },
      {
        Id: required,
        Name: Required,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether the property is required.,
        ParameterName: required,
        ArgumentName: required,
        ParameterDefaultValue: default
      },
      {
        Id: default_value,
        Name: DefaultValue,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: Default value of the property,
        ParameterName: defaultValue,
        ArgumentName: defaultValue,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Short description of the property,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: allowed_values,
        Name: AllowedValues,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
An ordered list of the allowed values of the property.
The property can have up to 200 allowed values.,
        ParameterName: allowedValues,
        ArgumentName: allowedValues,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update a custom property for an organization,
    RequestType: ,
    ResponseType: org-custom-property,
    MethodName: OrgsCreateOrUpdateCustomPropertyAsync,
    NotAsyncMethodName: OrgsCreateOrUpdateCustomProperty,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCreateOrUpdateCustomProperty
  },
  {
    Id: OrgsRemoveCustomProperty,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/properties/schema/{customPropertyName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: custom_property_name,
        Name: CustomPropertyName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: customPropertyName,
        ArgumentName: customPropertyName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a custom property for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRemoveCustomPropertyAsync,
    NotAsyncMethodName: OrgsRemoveCustomProperty,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRemoveCustomProperty
  },
  {
    Id: OrgsListCustomPropertiesValuesForRepos,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/properties/values?per_page={perPage}&page={page}&repository_query={repositoryQuery}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: repository_query,
        Name: RepositoryQuery,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: repositoryQuery,
        ArgumentName: repositoryQuery,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List custom property values for organization repositories,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListCustomPropertiesValuesForReposAsync,
    NotAsyncMethodName: OrgsListCustomPropertiesValuesForRepos,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListCustomPropertiesValuesForRepos
  },
  {
    Id: OrgsCreateOrUpdateCustomPropertiesValuesForRepos,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/properties/values",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: repository_names,
        Name: RepositoryNames,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The names of repositories that the custom property values will be applied to.,
        ParameterName: repositoryNames,
        ArgumentName: repositoryNames,
        ParameterDefaultValue: default
      },
      {
        Id: properties,
        Name: Properties,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<CustomPropertyValue>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: List of custom property names and associated values to apply to the repositories.,
        ParameterName: properties,
        ArgumentName: properties,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Create or update custom property values for organization repositories,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsCreateOrUpdateCustomPropertiesValuesForReposAsync,
    NotAsyncMethodName: OrgsCreateOrUpdateCustomPropertiesValuesForRepos,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCreateOrUpdateCustomPropertiesValuesForRepos
  },
  {
    Id: OrgsListPublicMembers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/public_members?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public organization members,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListPublicMembersAsync,
    NotAsyncMethodName: OrgsListPublicMembers,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListPublicMembers
  },
  {
    Id: OrgsCheckPublicMembershipForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/public_members/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check public organization membership for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsCheckPublicMembershipForUserAsync,
    NotAsyncMethodName: OrgsCheckPublicMembershipForUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsCheckPublicMembershipForUser
  },
  {
    Id: OrgsSetPublicMembershipForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/public_members/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set public organization membership for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsSetPublicMembershipForAuthenticatedUserAsync,
    NotAsyncMethodName: OrgsSetPublicMembershipForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsSetPublicMembershipForAuthenticatedUser
  },
  {
    Id: OrgsRemovePublicMembershipForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/public_members/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove public organization membership for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRemovePublicMembershipForAuthenticatedUserAsync,
    NotAsyncMethodName: OrgsRemovePublicMembershipForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRemovePublicMembershipForAuthenticatedUser
  },
  {
    Id: ReposListForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/repos?type={type}&sort={sort}&direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: type,
        Name: Type,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Public,
            Private,
            Forks,
            Sources,
            Member
          ],
          EnumValues: [
            all,
            public,
            private,
            forks,
            sources,
            member
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Type.All,
        Summary:
<br/>Default Value: all,
        ParameterName: type,
        ArgumentName: type,
        ParameterDefaultValue: Type.All
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Pushed,
            FullName
          ],
          EnumValues: [
            created,
            updated,
            pushed,
            full_name
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization repositories,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListForOrgAsync,
    NotAsyncMethodName: ReposListForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListForOrg
  },
  {
    Id: ReposCreateInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/repos",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the repository.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short description of the repository.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: homepage,
        Name: Homepage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A URL with more information about the repository.,
        ParameterName: homepage,
        ArgumentName: homepage,
        ParameterDefaultValue: default
      },
      {
        Id: private,
        Name: Private,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether the repository is private.
<br/>Default Value: false,
        ParameterName: private,
        ArgumentName: private,
        ParameterDefaultValue: false
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Public,
            Private
          ],
          EnumValues: [
            public,
            private
          ]
        },
        IsRequired: false,
        Summary: The visibility of the repository.,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: has_issues,
        Name: HasIssues,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to enable issues for this repository or `false` to disable them.
<br/>Default Value: true,
        ParameterName: hasIssues,
        ArgumentName: hasIssues,
        ParameterDefaultValue: true
      },
      {
        Id: has_projects,
        Name: HasProjects,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.
<br/>Default Value: true,
        ParameterName: hasProjects,
        ArgumentName: hasProjects,
        ParameterDefaultValue: true
      },
      {
        Id: has_wiki,
        Name: HasWiki,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to enable the wiki for this repository or `false` to disable it.
<br/>Default Value: true,
        ParameterName: hasWiki,
        ArgumentName: hasWiki,
        ParameterDefaultValue: true
      },
      {
        Id: has_downloads,
        Name: HasDownloads,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether downloads are enabled.
<br/>Default Value: true
<br/>Example: true,
        ParameterName: hasDownloads,
        ArgumentName: hasDownloads,
        ParameterDefaultValue: true
      },
      {
        Id: is_template,
        Name: IsTemplate,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to make this repo available as a template repository or `false` to prevent it.
<br/>Default Value: false,
        ParameterName: isTemplate,
        ArgumentName: isTemplate,
        ParameterDefaultValue: false
      },
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: auto_init,
        Name: AutoInit,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Pass `true` to create an initial commit with empty README.
<br/>Default Value: false,
        ParameterName: autoInit,
        ArgumentName: autoInit,
        ParameterDefaultValue: false
      },
      {
        Id: gitignore_template,
        Name: GitignoreTemplate,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Desired language or platform [.gitignore template](https://github.com/github/gitignore) to apply. Use the name of the template without the extension. For example, "Haskell".,
        ParameterName: gitignoreTemplate,
        ArgumentName: gitignoreTemplate,
        ParameterDefaultValue: default
      },
      {
        Id: license_template,
        Name: LicenseTemplate,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Choose an [open source license template](https://choosealicense.com/) that best suits your needs, and then use the [license keyword](https://docs.github.com/articles/licensing-a-repository/#searching-github-by-license-type) as the `license_template` string. For example, "mit" or "mpl-2.0".,
        ParameterName: licenseTemplate,
        ArgumentName: licenseTemplate,
        ParameterDefaultValue: default
      },
      {
        Id: allow_squash_merge,
        Name: AllowSquashMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
<br/>Default Value: true,
        ParameterName: allowSquashMerge,
        ArgumentName: allowSquashMerge,
        ParameterDefaultValue: true
      },
      {
        Id: allow_merge_commit,
        Name: AllowMergeCommit,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
<br/>Default Value: true,
        ParameterName: allowMergeCommit,
        ArgumentName: allowMergeCommit,
        ParameterDefaultValue: true
      },
      {
        Id: allow_rebase_merge,
        Name: AllowRebaseMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
<br/>Default Value: true,
        ParameterName: allowRebaseMerge,
        ArgumentName: allowRebaseMerge,
        ParameterDefaultValue: true
      },
      {
        Id: allow_auto_merge,
        Name: AllowAutoMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
<br/>Default Value: false,
        ParameterName: allowAutoMerge,
        ArgumentName: allowAutoMerge,
        ParameterDefaultValue: false
      },
      {
        Id: delete_branch_on_merge,
        Name: DeleteBranchOnMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion. **The authenticated user must be an organization owner to set this property to `true`.**
<br/>Default Value: false,
        ParameterName: deleteBranchOnMerge,
        ArgumentName: deleteBranchOnMerge,
        ParameterDefaultValue: false
      },
      {
        Id: use_squash_pr_title_as_default,
        Name: UseSquashPrTitleAsDefault,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property has been deprecated. Please use `squash_merge_commit_title` instead.
<br/>Default Value: false,
        ParameterName: useSquashPrTitleAsDefault,
        ArgumentName: useSquashPrTitleAsDefault,
        ParameterDefaultValue: false
      },
      {
        Id: squash_merge_commit_title,
        Name: SquashMergeCommitTitle,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRTITLE,
            COMMITORPRTITLE
          ],
          EnumValues: [
            PR_TITLE,
            COMMIT_OR_PR_TITLE
          ]
        },
        IsRequired: false,
        Summary:
The default value for a squash merge commit title:

- `PR_TITLE` - default to the pull request's title.
- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).,
        ParameterName: squashMergeCommitTitle,
        ArgumentName: squashMergeCommitTitle,
        ParameterDefaultValue: default
      },
      {
        Id: squash_merge_commit_message,
        Name: SquashMergeCommitMessage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRBODY,
            COMMITMESSAGES,
            BLANK
          ],
          EnumValues: [
            PR_BODY,
            COMMIT_MESSAGES,
            BLANK
          ]
        },
        IsRequired: false,
        Summary:
The default value for a squash merge commit message:

- `PR_BODY` - default to the pull request's body.
- `COMMIT_MESSAGES` - default to the branch's commit messages.
- `BLANK` - default to a blank commit message.,
        ParameterName: squashMergeCommitMessage,
        ArgumentName: squashMergeCommitMessage,
        ParameterDefaultValue: default
      },
      {
        Id: merge_commit_title,
        Name: MergeCommitTitle,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRTITLE,
            MERGEMESSAGE
          ],
          EnumValues: [
            PR_TITLE,
            MERGE_MESSAGE
          ]
        },
        IsRequired: false,
        Summary:
The default value for a merge commit title.

- `PR_TITLE` - default to the pull request's title.
- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).,
        ParameterName: mergeCommitTitle,
        ArgumentName: mergeCommitTitle,
        ParameterDefaultValue: default
      },
      {
        Id: merge_commit_message,
        Name: MergeCommitMessage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRBODY,
            PRTITLE,
            BLANK
          ],
          EnumValues: [
            PR_BODY,
            PR_TITLE,
            BLANK
          ]
        },
        IsRequired: false,
        Summary:
The default value for a merge commit message.

- `PR_TITLE` - default to the pull request's title.
- `PR_BODY` - default to the pull request's body.
- `BLANK` - default to a blank commit message.,
        ParameterName: mergeCommitMessage,
        ArgumentName: mergeCommitMessage,
        ParameterDefaultValue: default
      },
      {
        Id: custom_properties,
        Name: CustomProperties,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: The custom properties for the new repository. The keys are the custom property names, and the values are the corresponding custom property values.,
        ParameterName: customProperties,
        ArgumentName: customProperties,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an organization repository,
    RequestType: ,
    ResponseType: full-repository,
    MethodName: ReposCreateInOrgAsync,
    NotAsyncMethodName: ReposCreateInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateInOrg
  },
  {
    Id: ReposGetOrgRulesets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/rulesets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all organization repository rulesets,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetOrgRulesetsAsync,
    NotAsyncMethodName: ReposGetOrgRulesets,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetOrgRulesets
  },
  {
    Id: ReposCreateOrgRuleset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/rulesets",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the ruleset.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: target,
        Name: Target,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Branch,
            Tag,
            Push
          ],
          EnumValues: [
            branch,
            tag,
            push
          ]
        },
        IsRequired: false,
        Summary:
The target of the ruleset

**Note**: The `push` target is in beta and is subject to change.,
        ParameterName: target,
        ArgumentName: target,
        ParameterDefaultValue: default
      },
      {
        Id: enforcement,
        Name: Enforcement,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Disabled,
            Active,
            Evaluate
          ],
          EnumValues: [
            disabled,
            active,
            evaluate
          ]
        },
        IsRequired: true,
        Summary: The enforcement level of the ruleset. `evaluate` allows admins to test rules before enforcing them. Admins can view insights on the Rule Insights page (`evaluate` is only available with GitHub Enterprise).,
        ParameterName: enforcement,
        ArgumentName: enforcement,
        ParameterDefaultValue: default
      },
      {
        Id: bypass_actors,
        Name: BypassActors,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryRulesetBypassActor>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The actors that can bypass the rules in this ruleset,
        ParameterName: bypassActors,
        ArgumentName: bypassActors,
        ParameterDefaultValue: default
      },
      {
        Id: conditions,
        Name: Conditions,
        Type: {
          CSharpType: OrgRulesetConditions?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Conditions for an organization ruleset. The conditions object should contain both `repository_name` and `ref_name` properties or both `repository_id` and `ref_name` properties.
,
        ParameterName: conditions,
        ArgumentName: conditions,
        ParameterDefaultValue: default
      },
      {
        Id: rules,
        Name: Rules,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryRule>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of rules within the ruleset.,
        ParameterName: rules,
        ArgumentName: rules,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an organization repository ruleset,
    RequestType: ,
    ResponseType: repository-ruleset,
    MethodName: ReposCreateOrgRulesetAsync,
    NotAsyncMethodName: ReposCreateOrgRuleset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateOrgRuleset
  },
  {
    Id: ReposGetOrgRuleSuites,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/rulesets/rule-suites?repository_name={repositoryName}&time_period={timePeriod}&actor_name={actorName}&rule_suite_result={ruleSuiteResult}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: repository_name,
        Name: RepositoryName,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: repositoryName,
        ArgumentName: repositoryName,
        ParameterDefaultValue: default
      },
      {
        Id: time_period,
        Name: TimePeriod,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Hour,
            Day,
            Week,
            Month
          ],
          EnumValues: [
            hour,
            day,
            week,
            month
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: TimePeriod.Day,
        Summary:
<br/>Default Value: day,
        ParameterName: timePeriod,
        ArgumentName: timePeriod,
        ParameterDefaultValue: TimePeriod.Day
      },
      {
        Id: actor_name,
        Name: ActorName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: actorName,
        ArgumentName: actorName,
        ParameterDefaultValue: default
      },
      {
        Id: rule_suite_result,
        Name: RuleSuiteResult,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Pass,
            Fail,
            Bypass,
            All
          ],
          EnumValues: [
            pass,
            fail,
            bypass,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: RuleSuiteResult.All,
        Summary:
<br/>Default Value: all,
        ParameterName: ruleSuiteResult,
        ArgumentName: ruleSuiteResult,
        ParameterDefaultValue: RuleSuiteResult.All
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization rule suites,
    RequestType: ,
    ResponseType: rule-suites,
    MethodName: ReposGetOrgRuleSuitesAsync,
    NotAsyncMethodName: ReposGetOrgRuleSuites,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetOrgRuleSuites
  },
  {
    Id: ReposGetOrgRuleSuite,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/rulesets/rule-suites/{ruleSuiteId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: rule_suite_id,
        Name: RuleSuiteId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ruleSuiteId,
        ArgumentName: ruleSuiteId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization rule suite,
    RequestType: ,
    ResponseType: rule-suite,
    MethodName: ReposGetOrgRuleSuiteAsync,
    NotAsyncMethodName: ReposGetOrgRuleSuite,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetOrgRuleSuite
  },
  {
    Id: ReposGetOrgRuleset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/rulesets/{rulesetId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: ruleset_id,
        Name: RulesetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: rulesetId,
        ArgumentName: rulesetId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization repository ruleset,
    RequestType: ,
    ResponseType: repository-ruleset,
    MethodName: ReposGetOrgRulesetAsync,
    NotAsyncMethodName: ReposGetOrgRuleset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetOrgRuleset
  },
  {
    Id: ReposUpdateOrgRuleset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/rulesets/{rulesetId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: ruleset_id,
        Name: RulesetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: rulesetId,
        ArgumentName: rulesetId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the ruleset.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: target,
        Name: Target,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Branch,
            Tag,
            Push
          ],
          EnumValues: [
            branch,
            tag,
            push
          ]
        },
        IsRequired: false,
        Summary:
The target of the ruleset

**Note**: The `push` target is in beta and is subject to change.,
        ParameterName: target,
        ArgumentName: target,
        ParameterDefaultValue: default
      },
      {
        Id: enforcement,
        Name: Enforcement,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Disabled,
            Active,
            Evaluate
          ],
          EnumValues: [
            disabled,
            active,
            evaluate
          ]
        },
        IsRequired: false,
        Summary: The enforcement level of the ruleset. `evaluate` allows admins to test rules before enforcing them. Admins can view insights on the Rule Insights page (`evaluate` is only available with GitHub Enterprise).,
        ParameterName: enforcement,
        ArgumentName: enforcement,
        ParameterDefaultValue: default
      },
      {
        Id: bypass_actors,
        Name: BypassActors,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryRulesetBypassActor>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The actors that can bypass the rules in this ruleset,
        ParameterName: bypassActors,
        ArgumentName: bypassActors,
        ParameterDefaultValue: default
      },
      {
        Id: conditions,
        Name: Conditions,
        Type: {
          CSharpType: OrgRulesetConditions?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Conditions for an organization ruleset. The conditions object should contain both `repository_name` and `ref_name` properties or both `repository_id` and `ref_name` properties.
,
        ParameterName: conditions,
        ArgumentName: conditions,
        ParameterDefaultValue: default
      },
      {
        Id: rules,
        Name: Rules,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryRule>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of rules within the ruleset.,
        ParameterName: rules,
        ArgumentName: rules,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Update an organization repository ruleset,
    RequestType: ,
    ResponseType: repository-ruleset,
    MethodName: ReposUpdateOrgRulesetAsync,
    NotAsyncMethodName: ReposUpdateOrgRuleset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateOrgRuleset
  },
  {
    Id: ReposDeleteOrgRuleset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/rulesets/{rulesetId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: ruleset_id,
        Name: RulesetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: rulesetId,
        ArgumentName: rulesetId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an organization repository ruleset,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteOrgRulesetAsync,
    NotAsyncMethodName: ReposDeleteOrgRuleset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteOrgRuleset
  },
  {
    Id: SecretScanningListAlertsForOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/secret-scanning/alerts?state={state}&secret_type={secretType}&resolution={resolution}&sort={sort}&direction={direction}&page={page}&per_page={perPage}&before={before}&after={after}&validity={validity}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Resolved
          ],
          EnumValues: [
            open,
            resolved
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: secret_type,
        Name: SecretType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: secretType,
        ArgumentName: secretType,
        ParameterDefaultValue: default
      },
      {
        Id: resolution,
        Name: Resolution,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: resolution,
        ArgumentName: resolution,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: validity,
        Name: Validity,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: validity,
        ArgumentName: validity,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List secret scanning alerts for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: SecretScanningListAlertsForOrgAsync,
    NotAsyncMethodName: SecretScanningListAlertsForOrg,
    FileNameWithoutExtension: G.Api.EndPoints.SecretScanningListAlertsForOrg
  },
  {
    Id: SecurityAdvisoriesListOrgRepositoryAdvisories,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/security-advisories?direction={direction}&sort={sort}&before={before}&after={after}&per_page={perPage}&state={state}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Published
          ],
          EnumValues: [
            created,
            updated,
            published
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Triage,
            Draft,
            Published,
            Closed
          ],
          EnumValues: [
            triage,
            draft,
            published,
            closed
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository security advisories for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: SecurityAdvisoriesListOrgRepositoryAdvisoriesAsync,
    NotAsyncMethodName: SecurityAdvisoriesListOrgRepositoryAdvisories,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesListOrgRepositoryAdvisories
  },
  {
    Id: OrgsListSecurityManagerTeams,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/security-managers",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List security manager teams,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListSecurityManagerTeamsAsync,
    NotAsyncMethodName: OrgsListSecurityManagerTeams,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListSecurityManagerTeams
  },
  {
    Id: OrgsAddSecurityManagerTeam,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/security-managers/teams/{teamSlug}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add a security manager team,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsAddSecurityManagerTeamAsync,
    NotAsyncMethodName: OrgsAddSecurityManagerTeam,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsAddSecurityManagerTeam
  },
  {
    Id: OrgsRemoveSecurityManagerTeam,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/security-managers/teams/{teamSlug}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a security manager team,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsRemoveSecurityManagerTeamAsync,
    NotAsyncMethodName: OrgsRemoveSecurityManagerTeam,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsRemoveSecurityManagerTeam
  },
  {
    Id: BillingGetGithubActionsBillingOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/settings/billing/actions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub Actions billing for an organization,
    RequestType: ,
    ResponseType: actions-billing-usage,
    MethodName: BillingGetGithubActionsBillingOrgAsync,
    NotAsyncMethodName: BillingGetGithubActionsBillingOrg,
    FileNameWithoutExtension: G.Api.EndPoints.BillingGetGithubActionsBillingOrg
  },
  {
    Id: BillingGetGithubPackagesBillingOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/settings/billing/packages",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub Packages billing for an organization,
    RequestType: ,
    ResponseType: packages-billing-usage,
    MethodName: BillingGetGithubPackagesBillingOrgAsync,
    NotAsyncMethodName: BillingGetGithubPackagesBillingOrg,
    FileNameWithoutExtension: G.Api.EndPoints.BillingGetGithubPackagesBillingOrg
  },
  {
    Id: BillingGetSharedStorageBillingOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/settings/billing/shared-storage",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get shared storage billing for an organization,
    RequestType: ,
    ResponseType: combined-billing-usage,
    MethodName: BillingGetSharedStorageBillingOrgAsync,
    NotAsyncMethodName: BillingGetSharedStorageBillingOrg,
    FileNameWithoutExtension: G.Api.EndPoints.BillingGetSharedStorageBillingOrg
  },
  {
    Id: TeamsList,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List teams,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListAsync,
    NotAsyncMethodName: TeamsList,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsList
  },
  {
    Id: TeamsCreate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the team.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The description of the team.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: maintainers,
        Name: Maintainers,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: List GitHub IDs for organization members who will become team maintainers.,
        ParameterName: maintainers,
        ArgumentName: maintainers,
        ParameterDefaultValue: default
      },
      {
        Id: repo_names,
        Name: RepoNames,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The full name (e.g., "organization-name/repository-name") of repositories to add the team to.,
        ParameterName: repoNames,
        ArgumentName: repoNames,
        ParameterDefaultValue: default
      },
      {
        Id: privacy,
        Name: Privacy,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Secret,
            Closed
          ],
          EnumValues: [
            secret,
            closed
          ]
        },
        IsRequired: false,
        Summary:
The level of privacy this team should have. The options are:  
**For a non-nested team:**  
 * `secret` - only visible to organization owners and members of this team.  
 * `closed` - visible to all members of this organization.  
Default: `secret`  
**For a parent or child team:**  
 * `closed` - visible to all members of this organization.  
Default for child team: `closed`,
        ParameterName: privacy,
        ArgumentName: privacy,
        ParameterDefaultValue: default
      },
      {
        Id: notification_setting,
        Name: NotificationSetting,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            NotificationsEnabled,
            NotificationsDisabled
          ],
          EnumValues: [
            notifications_enabled,
            notifications_disabled
          ]
        },
        IsRequired: false,
        Summary:
The notification setting the team has chosen. The options are:  
 * `notifications_enabled` - team members receive notifications when the team is @mentioned.  
 * `notifications_disabled` - no one receives notifications.  
Default: `notifications_enabled`,
        ParameterName: notificationSetting,
        ArgumentName: notificationSetting,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Pull,
            Push
          ],
          EnumValues: [
            pull,
            push
          ]
        },
        IsRequired: false,
        DefaultValue: TestPermission.Pull,
        Summary:
**Deprecated**. The permission that new repositories will be added to the team with when none is specified.
<br/>Default Value: pull,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: TestPermission.Pull
      },
      {
        Id: parent_team_id,
        Name: ParentTeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The ID of a team to set as the parent team.,
        ParameterName: parentTeamId,
        ArgumentName: parentTeamId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a team,
    RequestType: ,
    ResponseType: team-full,
    MethodName: TeamsCreateAsync,
    NotAsyncMethodName: TeamsCreate,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsCreate
  },
  {
    Id: TeamsGetByName,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a team by name,
    RequestType: ,
    ResponseType: team-full,
    MethodName: TeamsGetByNameAsync,
    NotAsyncMethodName: TeamsGetByName,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsGetByName
  },
  {
    Id: TeamsUpdateInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the team.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The description of the team.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: privacy,
        Name: Privacy,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Secret,
            Closed
          ],
          EnumValues: [
            secret,
            closed
          ]
        },
        IsRequired: false,
        Summary:
The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. When a team is nested, the `privacy` for parent teams cannot be `secret`. The options are:  
**For a non-nested team:**  
 * `secret` - only visible to organization owners and members of this team.  
 * `closed` - visible to all members of this organization.  
**For a parent or child team:**  
 * `closed` - visible to all members of this organization.,
        ParameterName: privacy,
        ArgumentName: privacy,
        ParameterDefaultValue: default
      },
      {
        Id: notification_setting,
        Name: NotificationSetting,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            NotificationsEnabled,
            NotificationsDisabled
          ],
          EnumValues: [
            notifications_enabled,
            notifications_disabled
          ]
        },
        IsRequired: false,
        Summary:
The notification setting the team has chosen. Editing teams without specifying this parameter leaves `notification_setting` intact. The options are: 
 * `notifications_enabled` - team members receive notifications when the team is @mentioned.  
 * `notifications_disabled` - no one receives notifications.,
        ParameterName: notificationSetting,
        ArgumentName: notificationSetting,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Pull,
            Push,
            Admin
          ],
          EnumValues: [
            pull,
            push,
            admin
          ]
        },
        IsRequired: false,
        DefaultValue: TestPermission.Pull,
        Summary:
**Deprecated**. The permission that new repositories will be added to the team with when none is specified.
<br/>Default Value: pull,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: TestPermission.Pull
      },
      {
        Id: parent_team_id,
        Name: ParentTeamId,
        Type: {
          CSharpType: int?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The ID of a team to set as the parent team.,
        ParameterName: parentTeamId,
        ArgumentName: parentTeamId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a team,
    RequestType: ,
    ResponseType: team-full,
    MethodName: TeamsUpdateInOrgAsync,
    NotAsyncMethodName: TeamsUpdateInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsUpdateInOrg
  },
  {
    Id: TeamsDeleteInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a team,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsDeleteInOrgAsync,
    NotAsyncMethodName: TeamsDeleteInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsDeleteInOrg
  },
  {
    Id: TeamsListDiscussionsInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions?direction={direction}&per_page={perPage}&page={page}&pinned={pinned}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: pinned,
        Name: Pinned,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: pinned,
        ArgumentName: pinned,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List discussions,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListDiscussionsInOrgAsync,
    NotAsyncMethodName: TeamsListDiscussionsInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListDiscussionsInOrg
  },
  {
    Id: TeamsCreateDiscussionInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The discussion post's title.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The discussion post's body text.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: private,
        Name: Private,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.
<br/>Default Value: false,
        ParameterName: private,
        ArgumentName: private,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a discussion,
    RequestType: ,
    ResponseType: team-discussion,
    MethodName: TeamsCreateDiscussionInOrgAsync,
    NotAsyncMethodName: TeamsCreateDiscussionInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsCreateDiscussionInOrg
  },
  {
    Id: TeamsGetDiscussionInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a discussion,
    RequestType: ,
    ResponseType: team-discussion,
    MethodName: TeamsGetDiscussionInOrgAsync,
    NotAsyncMethodName: TeamsGetDiscussionInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsGetDiscussionInOrg
  },
  {
    Id: TeamsUpdateDiscussionInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The discussion post's title.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The discussion post's body text.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a discussion,
    RequestType: ,
    ResponseType: team-discussion,
    MethodName: TeamsUpdateDiscussionInOrgAsync,
    NotAsyncMethodName: TeamsUpdateDiscussionInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsUpdateDiscussionInOrg
  },
  {
    Id: TeamsDeleteDiscussionInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a discussion,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsDeleteDiscussionInOrgAsync,
    NotAsyncMethodName: TeamsDeleteDiscussionInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsDeleteDiscussionInOrg
  },
  {
    Id: TeamsListDiscussionCommentsInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/comments?direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List discussion comments,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListDiscussionCommentsInOrgAsync,
    NotAsyncMethodName: TeamsListDiscussionCommentsInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListDiscussionCommentsInOrg
  },
  {
    Id: TeamsCreateDiscussionCommentInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/comments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The discussion comment's body text.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a discussion comment,
    RequestType: ,
    ResponseType: team-discussion-comment,
    MethodName: TeamsCreateDiscussionCommentInOrgAsync,
    NotAsyncMethodName: TeamsCreateDiscussionCommentInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsCreateDiscussionCommentInOrg
  },
  {
    Id: TeamsGetDiscussionCommentInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/comments/{commentNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a discussion comment,
    RequestType: ,
    ResponseType: team-discussion-comment,
    MethodName: TeamsGetDiscussionCommentInOrgAsync,
    NotAsyncMethodName: TeamsGetDiscussionCommentInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsGetDiscussionCommentInOrg
  },
  {
    Id: TeamsUpdateDiscussionCommentInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/comments/{commentNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The discussion comment's body text.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a discussion comment,
    RequestType: ,
    ResponseType: team-discussion-comment,
    MethodName: TeamsUpdateDiscussionCommentInOrgAsync,
    NotAsyncMethodName: TeamsUpdateDiscussionCommentInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsUpdateDiscussionCommentInOrg
  },
  {
    Id: TeamsDeleteDiscussionCommentInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/comments/{commentNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a discussion comment,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsDeleteDiscussionCommentInOrgAsync,
    NotAsyncMethodName: TeamsDeleteDiscussionCommentInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsDeleteDiscussionCommentInOrg
  },
  {
    Id: ReactionsListForTeamDiscussionCommentInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/comments/{commentNumber}/reactions?content={content}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reactions for a team discussion comment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsListForTeamDiscussionCommentInOrgAsync,
    NotAsyncMethodName: ReactionsListForTeamDiscussionCommentInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsListForTeamDiscussionCommentInOrg
  },
  {
    Id: ReactionsCreateForTeamDiscussionCommentInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/comments/{commentNumber}/reactions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: true,
        Summary: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the team discussion comment.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create reaction for a team discussion comment,
    RequestType: ,
    ResponseType: reaction,
    MethodName: ReactionsCreateForTeamDiscussionCommentInOrgAsync,
    NotAsyncMethodName: ReactionsCreateForTeamDiscussionCommentInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsCreateForTeamDiscussionCommentInOrg
  },
  {
    Id: ReactionsDeleteForTeamDiscussionComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/comments/{commentNumber}/reactions/{reactionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      },
      {
        Id: reaction_id,
        Name: ReactionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reactionId,
        ArgumentName: reactionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete team discussion comment reaction,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsDeleteForTeamDiscussionCommentAsync,
    NotAsyncMethodName: ReactionsDeleteForTeamDiscussionComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsDeleteForTeamDiscussionComment
  },
  {
    Id: ReactionsListForTeamDiscussionInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/reactions?content={content}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reactions for a team discussion,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsListForTeamDiscussionInOrgAsync,
    NotAsyncMethodName: ReactionsListForTeamDiscussionInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsListForTeamDiscussionInOrg
  },
  {
    Id: ReactionsCreateForTeamDiscussionInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/reactions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: true,
        Summary: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the team discussion.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create reaction for a team discussion,
    RequestType: ,
    ResponseType: reaction,
    MethodName: ReactionsCreateForTeamDiscussionInOrgAsync,
    NotAsyncMethodName: ReactionsCreateForTeamDiscussionInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsCreateForTeamDiscussionInOrg
  },
  {
    Id: ReactionsDeleteForTeamDiscussion,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/discussions/{discussionNumber}/reactions/{reactionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: reaction_id,
        Name: ReactionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reactionId,
        ArgumentName: reactionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete team discussion reaction,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsDeleteForTeamDiscussionAsync,
    NotAsyncMethodName: ReactionsDeleteForTeamDiscussion,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsDeleteForTeamDiscussion
  },
  {
    Id: TeamsListPendingInvitationsInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/invitations?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List pending team invitations,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListPendingInvitationsInOrgAsync,
    NotAsyncMethodName: TeamsListPendingInvitationsInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListPendingInvitationsInOrg
  },
  {
    Id: TeamsListMembersInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/members?role={role}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: role,
        Name: Role,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Member,
            Maintainer,
            All
          ],
          EnumValues: [
            member,
            maintainer,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Role.All,
        Summary:
<br/>Default Value: all,
        ParameterName: role,
        ArgumentName: role,
        ParameterDefaultValue: Role.All
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List team members,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListMembersInOrgAsync,
    NotAsyncMethodName: TeamsListMembersInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListMembersInOrg
  },
  {
    Id: TeamsGetMembershipForUserInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/memberships/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get team membership for a user,
    RequestType: ,
    ResponseType: team-membership,
    MethodName: TeamsGetMembershipForUserInOrgAsync,
    NotAsyncMethodName: TeamsGetMembershipForUserInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsGetMembershipForUserInOrg
  },
  {
    Id: TeamsAddOrUpdateMembershipForUserInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/memberships/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: role,
        Name: Role,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Member,
            Maintainer
          ],
          EnumValues: [
            member,
            maintainer
          ]
        },
        IsRequired: false,
        DefaultValue: TestRole.Member,
        Summary:
The role that this user should have in the team.
<br/>Default Value: member,
        ParameterName: role,
        ArgumentName: role,
        ParameterDefaultValue: TestRole.Member
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add or update team membership for a user,
    RequestType: ,
    ResponseType: team-membership,
    MethodName: TeamsAddOrUpdateMembershipForUserInOrgAsync,
    NotAsyncMethodName: TeamsAddOrUpdateMembershipForUserInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsAddOrUpdateMembershipForUserInOrg
  },
  {
    Id: TeamsRemoveMembershipForUserInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/memberships/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove team membership for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsRemoveMembershipForUserInOrgAsync,
    NotAsyncMethodName: TeamsRemoveMembershipForUserInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsRemoveMembershipForUserInOrg
  },
  {
    Id: TeamsListProjectsInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/projects?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List team projects,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListProjectsInOrgAsync,
    NotAsyncMethodName: TeamsListProjectsInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListProjectsInOrg
  },
  {
    Id: TeamsCheckPermissionsForProjectInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/projects/{projectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check team permissions for a project,
    RequestType: ,
    ResponseType: team-project,
    MethodName: TeamsCheckPermissionsForProjectInOrgAsync,
    NotAsyncMethodName: TeamsCheckPermissionsForProjectInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsCheckPermissionsForProjectInOrg
  },
  {
    Id: TeamsAddOrUpdateProjectPermissionsInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/projects/{projectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Read,
            Write,
            Admin
          ],
          EnumValues: [
            read,
            write,
            admin
          ]
        },
        IsRequired: false,
        Summary: The permission to grant to the team for this project. Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method).",
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add or update team project permissions,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsAddOrUpdateProjectPermissionsInOrgAsync,
    NotAsyncMethodName: TeamsAddOrUpdateProjectPermissionsInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsAddOrUpdateProjectPermissionsInOrg
  },
  {
    Id: TeamsRemoveProjectInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/projects/{projectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a project from a team,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsRemoveProjectInOrgAsync,
    NotAsyncMethodName: TeamsRemoveProjectInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsRemoveProjectInOrg
  },
  {
    Id: TeamsListReposInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/repos?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List team repositories,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListReposInOrgAsync,
    NotAsyncMethodName: TeamsListReposInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListReposInOrg
  },
  {
    Id: TeamsCheckPermissionsForRepoInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/repos/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check team permissions for a repository,
    RequestType: ,
    ResponseType: team-repository,
    MethodName: TeamsCheckPermissionsForRepoInOrgAsync,
    NotAsyncMethodName: TeamsCheckPermissionsForRepoInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsCheckPermissionsForRepoInOrg
  },
  {
    Id: TeamsAddOrUpdateRepoPermissionsInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/repos/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "push",
        Summary:
The permission to grant the team on this repository. We accept the following permissions to be set: `pull`, `triage`, `push`, `maintain`, `admin` and you can also specify a custom repository role name, if the owning organization has defined any. If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.
<br/>Default Value: push,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: "push"
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add or update team repository permissions,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsAddOrUpdateRepoPermissionsInOrgAsync,
    NotAsyncMethodName: TeamsAddOrUpdateRepoPermissionsInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsAddOrUpdateRepoPermissionsInOrg
  },
  {
    Id: TeamsRemoveRepoInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/repos/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a repository from a team,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsRemoveRepoInOrgAsync,
    NotAsyncMethodName: TeamsRemoveRepoInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsRemoveRepoInOrg
  },
  {
    Id: TeamsListChildInOrg,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/teams/{teamSlug}/teams?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: team_slug,
        Name: TeamSlug,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamSlug,
        ArgumentName: teamSlug,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List child teams,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListChildInOrgAsync,
    NotAsyncMethodName: TeamsListChildInOrg,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListChildInOrg
  },
  {
    Id: OrgsEnableOrDisableSecurityProductOnAllOrgRepos,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/orgs/{org}/{securityProduct}/{enablement}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: security_product,
        Name: SecurityProduct,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            DependencyGraph,
            DependabotAlerts,
            DependabotSecurityUpdates,
            AdvancedSecurity,
            CodeScanningDefaultSetup,
            SecretScanning,
            SecretScanningPushProtection
          ],
          EnumValues: [
            dependency_graph,
            dependabot_alerts,
            dependabot_security_updates,
            advanced_security,
            code_scanning_default_setup,
            secret_scanning,
            secret_scanning_push_protection
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: securityProduct,
        ArgumentName: securityProduct,
        ParameterDefaultValue: default
      },
      {
        Id: enablement,
        Name: Enablement,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            EnableAll,
            DisableAll
          ],
          EnumValues: [
            enable_all,
            disable_all
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: enablement,
        ArgumentName: enablement,
        ParameterDefaultValue: default
      },
      {
        Id: query_suite,
        Name: QuerySuite,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Default,
            Extended
          ],
          EnumValues: [
            default,
            extended
          ]
        },
        IsRequired: false,
        Summary:
CodeQL query suite to be used. If you specify the `query_suite` parameter, the default setup will be configured with this query suite only on all repositories that didn't have default setup already configured. It will not change the query suite on repositories that already have default setup configured.
If you don't specify any `query_suite` in your request, the preferred query suite of the organization will be applied.,
        ParameterName: querySuite,
        ArgumentName: querySuite,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Enable or disable a security feature for an organization,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsEnableOrDisableSecurityProductOnAllOrgReposAsync,
    NotAsyncMethodName: OrgsEnableOrDisableSecurityProductOnAllOrgRepos,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsEnableOrDisableSecurityProductOnAllOrgRepos
  },
  {
    Id: ProjectsGetCard,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/cards/{cardId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: card_id,
        Name: CardId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: cardId,
        ArgumentName: cardId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a project card,
    RequestType: ,
    ResponseType: project-card,
    MethodName: ProjectsGetCardAsync,
    NotAsyncMethodName: ProjectsGetCard,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsGetCard
  },
  {
    Id: ProjectsUpdateCard,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/cards/{cardId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: card_id,
        Name: CardId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: cardId,
        ArgumentName: cardId,
        ParameterDefaultValue: default
      },
      {
        Id: note,
        Name: Note,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The project card's note
<br/>Example: Update all gems,
        ParameterName: note,
        ArgumentName: note,
        ParameterDefaultValue: default
      },
      {
        Id: archived,
        Name: Archived,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Whether or not the card is archived
<br/>Example: false,
        ParameterName: archived,
        ArgumentName: archived,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an existing project card,
    RequestType: ,
    ResponseType: project-card,
    MethodName: ProjectsUpdateCardAsync,
    NotAsyncMethodName: ProjectsUpdateCard,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsUpdateCard
  },
  {
    Id: ProjectsDeleteCard,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/cards/{cardId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: card_id,
        Name: CardId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: cardId,
        ArgumentName: cardId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a project card,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsDeleteCardAsync,
    NotAsyncMethodName: ProjectsDeleteCard,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsDeleteCard
  },
  {
    Id: ProjectsMoveCard,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/cards/{cardId}/moves",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: card_id,
        Name: CardId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: cardId,
        ArgumentName: cardId,
        ParameterDefaultValue: default
      },
      {
        Id: position,
        Name: Position,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The position of the card in a column. Can be one of: `top`, `bottom`, or `after:&lt;card_id&gt;` to place after the specified card.
<br/>Example: bottom,
        ParameterName: position,
        ArgumentName: position,
        ParameterDefaultValue: default
      },
      {
        Id: column_id,
        Name: ColumnId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The unique identifier of the column the card should be moved to
<br/>Example: 42,
        ParameterName: columnId,
        ArgumentName: columnId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Move a project card,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsMoveCardAsync,
    NotAsyncMethodName: ProjectsMoveCard,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsMoveCard
  },
  {
    Id: ProjectsGetColumn,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/{columnId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: column_id,
        Name: ColumnId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: columnId,
        ArgumentName: columnId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a project column,
    RequestType: ,
    ResponseType: project-column,
    MethodName: ProjectsGetColumnAsync,
    NotAsyncMethodName: ProjectsGetColumn,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsGetColumn
  },
  {
    Id: ProjectsUpdateColumn,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/{columnId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: column_id,
        Name: ColumnId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: columnId,
        ArgumentName: columnId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
Name of the project column
<br/>Example: Remaining tasks,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an existing project column,
    RequestType: ,
    ResponseType: project-column,
    MethodName: ProjectsUpdateColumnAsync,
    NotAsyncMethodName: ProjectsUpdateColumn,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsUpdateColumn
  },
  {
    Id: ProjectsDeleteColumn,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/{columnId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: column_id,
        Name: ColumnId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: columnId,
        ArgumentName: columnId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a project column,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsDeleteColumnAsync,
    NotAsyncMethodName: ProjectsDeleteColumn,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsDeleteColumn
  },
  {
    Id: ProjectsListCards,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/{columnId}/cards?archived_state={archivedState}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: column_id,
        Name: ColumnId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: columnId,
        ArgumentName: columnId,
        ParameterDefaultValue: default
      },
      {
        Id: archived_state,
        Name: ArchivedState,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Archived,
            NotArchived
          ],
          EnumValues: [
            all,
            archived,
            not_archived
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: ArchivedState.NotArchived,
        Summary:
<br/>Default Value: not_archived,
        ParameterName: archivedState,
        ArgumentName: archivedState,
        ParameterDefaultValue: ArchivedState.NotArchived
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List project cards,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsListCardsAsync,
    NotAsyncMethodName: ProjectsListCards,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsListCards
  },
  {
    Id: ProjectsCreateCard,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/{columnId}/cards",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: column_id,
        Name: ColumnId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: columnId,
        ArgumentName: columnId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a project card,
    RequestType: ,
    ResponseType: project-card,
    MethodName: ProjectsCreateCardAsync,
    NotAsyncMethodName: ProjectsCreateCard,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsCreateCard
  },
  {
    Id: ProjectsMoveColumn,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/columns/{columnId}/moves",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: column_id,
        Name: ColumnId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: columnId,
        ArgumentName: columnId,
        ParameterDefaultValue: default
      },
      {
        Id: position,
        Name: Position,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The position of the column in a project. Can be one of: `first`, `last`, or `after:&lt;column_id&gt;` to place after the specified column.
<br/>Example: last,
        ParameterName: position,
        ArgumentName: position,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Move a project column,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsMoveColumnAsync,
    NotAsyncMethodName: ProjectsMoveColumn,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsMoveColumn
  },
  {
    Id: ProjectsGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/{projectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a project,
    RequestType: ,
    ResponseType: project,
    MethodName: ProjectsGetAsync,
    NotAsyncMethodName: ProjectsGet,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsGet
  },
  {
    Id: ProjectsUpdate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/{projectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Name of the project
<br/>Example: Week One Sprint,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Body of the project
<br/>Example: This project represents the sprint of the first week in January,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
State of the project; either 'open' or 'closed'
<br/>Example: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: organization_permission,
        Name: OrganizationPermission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Read,
            Write,
            Admin,
            None
          ],
          EnumValues: [
            read,
            write,
            admin,
            none
          ]
        },
        IsRequired: false,
        Summary: The baseline permission that all organization members have on this project,
        ParameterName: organizationPermission,
        ArgumentName: organizationPermission,
        ParameterDefaultValue: default
      },
      {
        Id: private,
        Name: Private,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether or not this project can be seen by everyone.,
        ParameterName: private,
        ArgumentName: private,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a project,
    RequestType: ,
    ResponseType: project,
    MethodName: ProjectsUpdateAsync,
    NotAsyncMethodName: ProjectsUpdate,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsUpdate
  },
  {
    Id: ProjectsDelete,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/{projectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a project,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsDeleteAsync,
    NotAsyncMethodName: ProjectsDelete,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsDelete
  },
  {
    Id: ProjectsListCollaborators,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/{projectId}/collaborators?affiliation={affiliation}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      },
      {
        Id: affiliation,
        Name: Affiliation,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Outside,
            Direct,
            All
          ],
          EnumValues: [
            outside,
            direct,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Affiliation.All,
        Summary:
<br/>Default Value: all,
        ParameterName: affiliation,
        ArgumentName: affiliation,
        ParameterDefaultValue: Affiliation.All
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List project collaborators,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsListCollaboratorsAsync,
    NotAsyncMethodName: ProjectsListCollaborators,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsListCollaborators
  },
  {
    Id: ProjectsAddCollaborator,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/{projectId}/collaborators/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Read,
            Write,
            Admin
          ],
          EnumValues: [
            read,
            write,
            admin
          ]
        },
        IsRequired: false,
        DefaultValue: TestPermission.Write,
        Summary:
The permission to grant the collaborator.
<br/>Default Value: write
<br/>Example: write,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: TestPermission.Write
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add project collaborator,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsAddCollaboratorAsync,
    NotAsyncMethodName: ProjectsAddCollaborator,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsAddCollaborator
  },
  {
    Id: ProjectsRemoveCollaborator,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/{projectId}/collaborators/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove user as a collaborator,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsRemoveCollaboratorAsync,
    NotAsyncMethodName: ProjectsRemoveCollaborator,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsRemoveCollaborator
  },
  {
    Id: ProjectsGetPermissionForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/{projectId}/collaborators/{username}/permission",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get project permission for a user,
    RequestType: ,
    ResponseType: project-collaborator-permission,
    MethodName: ProjectsGetPermissionForUserAsync,
    NotAsyncMethodName: ProjectsGetPermissionForUser,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsGetPermissionForUser
  },
  {
    Id: ProjectsListColumns,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/{projectId}/columns?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List project columns,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsListColumnsAsync,
    NotAsyncMethodName: ProjectsListColumns,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsListColumns
  },
  {
    Id: ProjectsCreateColumn,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/projects/{projectId}/columns",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
Name of the project column
<br/>Example: Remaining tasks,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a project column,
    RequestType: ,
    ResponseType: project-column,
    MethodName: ProjectsCreateColumnAsync,
    NotAsyncMethodName: ProjectsCreateColumn,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsCreateColumn
  },
  {
    Id: RateLimitGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/rate_limit",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get rate limit status for the authenticated user,
    RequestType: ,
    ResponseType: rate-limit-overview,
    MethodName: RateLimitGetAsync,
    NotAsyncMethodName: RateLimitGet,
    FileNameWithoutExtension: G.Api.EndPoints.RateLimitGet
  },
  {
    Id: ReposGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository,
    RequestType: ,
    ResponseType: full-repository,
    MethodName: ReposGetAsync,
    NotAsyncMethodName: ReposGet,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGet
  },
  {
    Id: ReposUpdate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the repository.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short description of the repository.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: homepage,
        Name: Homepage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A URL with more information about the repository.,
        ParameterName: homepage,
        ArgumentName: homepage,
        ParameterDefaultValue: default
      },
      {
        Id: private,
        Name: Private,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to make the repository private or `false` to make it public. Default: `false`.  
**Note**: You will get a `422` error if the organization restricts [changing repository visibility](https://docs.github.com/articles/repository-permission-levels-for-an-organization#changing-the-visibility-of-repositories) to organization owners and a non-owner tries to change the value of private.
<br/>Default Value: false,
        ParameterName: private,
        ArgumentName: private,
        ParameterDefaultValue: false
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Public,
            Private
          ],
          EnumValues: [
            public,
            private
          ]
        },
        IsRequired: false,
        Summary: The visibility of the repository.,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: security_and_analysis,
        Name: SecurityAndAnalysis,
        Type: {
          CSharpType: TestSecurityAndAnalysis?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Specify which security and analysis features to enable or disable for the repository.

To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see "[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization)."

For example, to enable GitHub Advanced Security, use this data in the body of the `PATCH` request:
`{ "security_and_analysis": {"advanced_security": { "status": "enabled" } } }`.

You can check which security and analysis features are currently enabled by using a `GET /repos/{owner}/{repo}` request.,
        ParameterName: securityAndAnalysis,
        ArgumentName: securityAndAnalysis,
        ParameterDefaultValue: default
      },
      {
        Id: has_issues,
        Name: HasIssues,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to enable issues for this repository or `false` to disable them.
<br/>Default Value: true,
        ParameterName: hasIssues,
        ArgumentName: hasIssues,
        ParameterDefaultValue: true
      },
      {
        Id: has_projects,
        Name: HasProjects,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to enable projects for this repository or `false` to disable them. **Note:** If you're creating a repository in an organization that has disabled repository projects, the default is `false`, and if you pass `true`, the API returns an error.
<br/>Default Value: true,
        ParameterName: hasProjects,
        ArgumentName: hasProjects,
        ParameterDefaultValue: true
      },
      {
        Id: has_wiki,
        Name: HasWiki,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to enable the wiki for this repository or `false` to disable it.
<br/>Default Value: true,
        ParameterName: hasWiki,
        ArgumentName: hasWiki,
        ParameterDefaultValue: true
      },
      {
        Id: is_template,
        Name: IsTemplate,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to make this repo available as a template repository or `false` to prevent it.
<br/>Default Value: false,
        ParameterName: isTemplate,
        ArgumentName: isTemplate,
        ParameterDefaultValue: false
      },
      {
        Id: default_branch,
        Name: DefaultBranch,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Updates the default branch for this repository.,
        ParameterName: defaultBranch,
        ArgumentName: defaultBranch,
        ParameterDefaultValue: default
      },
      {
        Id: allow_squash_merge,
        Name: AllowSquashMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
<br/>Default Value: true,
        ParameterName: allowSquashMerge,
        ArgumentName: allowSquashMerge,
        ParameterDefaultValue: true
      },
      {
        Id: allow_merge_commit,
        Name: AllowMergeCommit,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
<br/>Default Value: true,
        ParameterName: allowMergeCommit,
        ArgumentName: allowMergeCommit,
        ParameterDefaultValue: true
      },
      {
        Id: allow_rebase_merge,
        Name: AllowRebaseMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
<br/>Default Value: true,
        ParameterName: allowRebaseMerge,
        ArgumentName: allowRebaseMerge,
        ParameterDefaultValue: true
      },
      {
        Id: allow_auto_merge,
        Name: AllowAutoMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
<br/>Default Value: false,
        ParameterName: allowAutoMerge,
        ArgumentName: allowAutoMerge,
        ParameterDefaultValue: false
      },
      {
        Id: delete_branch_on_merge,
        Name: DeleteBranchOnMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to allow automatically deleting head branches when pull requests are merged, or `false` to prevent automatic deletion.
<br/>Default Value: false,
        ParameterName: deleteBranchOnMerge,
        ArgumentName: deleteBranchOnMerge,
        ParameterDefaultValue: false
      },
      {
        Id: allow_update_branch,
        Name: AllowUpdateBranch,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to always allow a pull request head branch that is behind its base branch to be updated even if it is not required to be up to date before merging, or false otherwise.
<br/>Default Value: false,
        ParameterName: allowUpdateBranch,
        ArgumentName: allowUpdateBranch,
        ParameterDefaultValue: false
      },
      {
        Id: use_squash_pr_title_as_default,
        Name: UseSquashPrTitleAsDefault,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to allow squash-merge commits to use pull request title, or `false` to use commit message. **This property has been deprecated. Please use `squash_merge_commit_title` instead.
<br/>Default Value: false,
        ParameterName: useSquashPrTitleAsDefault,
        ArgumentName: useSquashPrTitleAsDefault,
        ParameterDefaultValue: false
      },
      {
        Id: squash_merge_commit_title,
        Name: SquashMergeCommitTitle,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRTITLE,
            COMMITORPRTITLE
          ],
          EnumValues: [
            PR_TITLE,
            COMMIT_OR_PR_TITLE
          ]
        },
        IsRequired: false,
        Summary:
The default value for a squash merge commit title:

- `PR_TITLE` - default to the pull request's title.
- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).,
        ParameterName: squashMergeCommitTitle,
        ArgumentName: squashMergeCommitTitle,
        ParameterDefaultValue: default
      },
      {
        Id: squash_merge_commit_message,
        Name: SquashMergeCommitMessage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRBODY,
            COMMITMESSAGES,
            BLANK
          ],
          EnumValues: [
            PR_BODY,
            COMMIT_MESSAGES,
            BLANK
          ]
        },
        IsRequired: false,
        Summary:
The default value for a squash merge commit message:

- `PR_BODY` - default to the pull request's body.
- `COMMIT_MESSAGES` - default to the branch's commit messages.
- `BLANK` - default to a blank commit message.,
        ParameterName: squashMergeCommitMessage,
        ArgumentName: squashMergeCommitMessage,
        ParameterDefaultValue: default
      },
      {
        Id: merge_commit_title,
        Name: MergeCommitTitle,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRTITLE,
            MERGEMESSAGE
          ],
          EnumValues: [
            PR_TITLE,
            MERGE_MESSAGE
          ]
        },
        IsRequired: false,
        Summary:
The default value for a merge commit title.

- `PR_TITLE` - default to the pull request's title.
- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).,
        ParameterName: mergeCommitTitle,
        ArgumentName: mergeCommitTitle,
        ParameterDefaultValue: default
      },
      {
        Id: merge_commit_message,
        Name: MergeCommitMessage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRBODY,
            PRTITLE,
            BLANK
          ],
          EnumValues: [
            PR_BODY,
            PR_TITLE,
            BLANK
          ]
        },
        IsRequired: false,
        Summary:
The default value for a merge commit message.

- `PR_TITLE` - default to the pull request's title.
- `PR_BODY` - default to the pull request's body.
- `BLANK` - default to a blank commit message.,
        ParameterName: mergeCommitMessage,
        ArgumentName: mergeCommitMessage,
        ParameterDefaultValue: default
      },
      {
        Id: archived,
        Name: Archived,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to archive this repository. `false` will unarchive a previously archived repository.
<br/>Default Value: false,
        ParameterName: archived,
        ArgumentName: archived,
        ParameterDefaultValue: false
      },
      {
        Id: allow_forking,
        Name: AllowForking,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to allow private forks, or `false` to prevent private forks.
<br/>Default Value: false,
        ParameterName: allowForking,
        ArgumentName: allowForking,
        ParameterDefaultValue: false
      },
      {
        Id: web_commit_signoff_required,
        Name: WebCommitSignoffRequired,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to require contributors to sign off on web-based commits, or `false` to not require contributors to sign off on web-based commits.
<br/>Default Value: false,
        ParameterName: webCommitSignoffRequired,
        ArgumentName: webCommitSignoffRequired,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a repository,
    RequestType: ,
    ResponseType: full-repository,
    MethodName: ReposUpdateAsync,
    NotAsyncMethodName: ReposUpdate,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdate
  },
  {
    Id: ReposDelete,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteAsync,
    NotAsyncMethodName: ReposDelete,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDelete
  },
  {
    Id: ActionsListArtifactsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/artifacts?per_page={perPage}&page={page}&name={name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List artifacts for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListArtifactsForRepoAsync,
    NotAsyncMethodName: ActionsListArtifactsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListArtifactsForRepo
  },
  {
    Id: ActionsGetArtifact,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/artifacts/{artifactId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: artifact_id,
        Name: ArtifactId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: artifactId,
        ArgumentName: artifactId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an artifact,
    RequestType: ,
    ResponseType: artifact,
    MethodName: ActionsGetArtifactAsync,
    NotAsyncMethodName: ActionsGetArtifact,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetArtifact
  },
  {
    Id: ActionsDeleteArtifact,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/artifacts/{artifactId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: artifact_id,
        Name: ArtifactId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: artifactId,
        ArgumentName: artifactId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an artifact,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteArtifactAsync,
    NotAsyncMethodName: ActionsDeleteArtifact,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteArtifact
  },
  {
    Id: ActionsDownloadArtifact,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/artifacts/{artifactId}/{archiveFormat}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: artifact_id,
        Name: ArtifactId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: artifactId,
        ArgumentName: artifactId,
        ParameterDefaultValue: default
      },
      {
        Id: archive_format,
        Name: ArchiveFormat,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: archiveFormat,
        ArgumentName: archiveFormat,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Download an artifact,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDownloadArtifactAsync,
    NotAsyncMethodName: ActionsDownloadArtifact,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDownloadArtifact
  },
  {
    Id: ActionsGetActionsCacheUsage,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/cache/usage",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub Actions cache usage for a repository,
    RequestType: ,
    ResponseType: actions-cache-usage-by-repository,
    MethodName: ActionsGetActionsCacheUsageAsync,
    NotAsyncMethodName: ActionsGetActionsCacheUsage,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetActionsCacheUsage
  },
  {
    Id: ActionsGetActionsCacheList,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/caches?per_page={perPage}&page={page}&ref={ref}&key={key}&sort={sort}&direction={direction}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: key,
        Name: Key,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: key,
        ArgumentName: key,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            CreatedAt,
            LastAccessedAt,
            SizeInBytes
          ],
          EnumValues: [
            created_at,
            last_accessed_at,
            size_in_bytes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.LastAccessedAt,
        Summary:
<br/>Default Value: last_accessed_at,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.LastAccessedAt
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List GitHub Actions caches for a repository,
    RequestType: ,
    ResponseType: actions-cache-list,
    MethodName: ActionsGetActionsCacheListAsync,
    NotAsyncMethodName: ActionsGetActionsCacheList,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetActionsCacheList
  },
  {
    Id: ActionsDeleteActionsCacheByKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/caches?key={key}&ref={ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: key,
        Name: Key,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: key,
        ArgumentName: key,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete GitHub Actions caches for a repository (using a cache key),
    RequestType: ,
    ResponseType: actions-cache-list,
    MethodName: ActionsDeleteActionsCacheByKeyAsync,
    NotAsyncMethodName: ActionsDeleteActionsCacheByKey,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteActionsCacheByKey
  },
  {
    Id: ActionsDeleteActionsCacheById,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/caches/{cacheId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: cache_id,
        Name: CacheId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: cacheId,
        ArgumentName: cacheId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a GitHub Actions cache for a repository (using a cache ID),
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteActionsCacheByIdAsync,
    NotAsyncMethodName: ActionsDeleteActionsCacheById,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteActionsCacheById
  },
  {
    Id: ActionsGetJobForWorkflowRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/jobs/{jobId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: job_id,
        Name: JobId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: jobId,
        ArgumentName: jobId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a job for a workflow run,
    RequestType: ,
    ResponseType: job,
    MethodName: ActionsGetJobForWorkflowRunAsync,
    NotAsyncMethodName: ActionsGetJobForWorkflowRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetJobForWorkflowRun
  },
  {
    Id: ActionsDownloadJobLogsForWorkflowRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/jobs/{jobId}/logs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: job_id,
        Name: JobId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: jobId,
        ArgumentName: jobId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Download job logs for a workflow run,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDownloadJobLogsForWorkflowRunAsync,
    NotAsyncMethodName: ActionsDownloadJobLogsForWorkflowRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDownloadJobLogsForWorkflowRun
  },
  {
    Id: ActionsReRunJobForWorkflowRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/jobs/{jobId}/rerun",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: job_id,
        Name: JobId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: jobId,
        ArgumentName: jobId,
        ParameterDefaultValue: default
      },
      {
        Id: enable_debug_logging,
        Name: EnableDebugLogging,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to enable debug logging for the re-run.
<br/>Default Value: false,
        ParameterName: enableDebugLogging,
        ArgumentName: enableDebugLogging,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Re-run a job from a workflow run,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsReRunJobForWorkflowRunAsync,
    NotAsyncMethodName: ActionsReRunJobForWorkflowRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsReRunJobForWorkflowRun
  },
  {
    Id: ActionsGetCustomOidcSubClaimForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/oidc/customization/sub",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the customization template for an OIDC subject claim for a repository,
    RequestType: ,
    ResponseType: oidc-custom-sub-repo,
    MethodName: ActionsGetCustomOidcSubClaimForRepoAsync,
    NotAsyncMethodName: ActionsGetCustomOidcSubClaimForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetCustomOidcSubClaimForRepo
  },
  {
    Id: ActionsSetCustomOidcSubClaimForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/oidc/customization/sub",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: use_default,
        Name: UseDefault,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Whether to use the default template or not. If `true`, the `include_claim_keys` field is ignored.,
        ParameterName: useDefault,
        ArgumentName: useDefault,
        ParameterDefaultValue: default
      },
      {
        Id: include_claim_keys,
        Name: IncludeClaimKeys,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Array of unique strings. Each claim key can only contain alphanumeric characters and underscores.,
        ParameterName: includeClaimKeys,
        ArgumentName: includeClaimKeys,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set the customization template for an OIDC subject claim for a repository,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsSetCustomOidcSubClaimForRepoAsync,
    NotAsyncMethodName: ActionsSetCustomOidcSubClaimForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetCustomOidcSubClaimForRepo
  },
  {
    Id: ActionsListRepoOrganizationSecrets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/organization-secrets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository organization secrets,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListRepoOrganizationSecretsAsync,
    NotAsyncMethodName: ActionsListRepoOrganizationSecrets,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListRepoOrganizationSecrets
  },
  {
    Id: ActionsListRepoOrganizationVariables,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/organization-variables?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 10,
        Summary:
<br/>Default Value: 10,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 10
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository organization variables,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListRepoOrganizationVariablesAsync,
    NotAsyncMethodName: ActionsListRepoOrganizationVariables,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListRepoOrganizationVariables
  },
  {
    Id: ActionsGetGithubActionsPermissionsRepository,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/permissions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub Actions permissions for a repository,
    RequestType: ,
    ResponseType: actions-repository-permissions,
    MethodName: ActionsGetGithubActionsPermissionsRepositoryAsync,
    NotAsyncMethodName: ActionsGetGithubActionsPermissionsRepository,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetGithubActionsPermissionsRepository
  },
  {
    Id: ActionsSetGithubActionsPermissionsRepository,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/permissions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: enabled,
        Name: Enabled,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Whether GitHub Actions is enabled on the repository.,
        ParameterName: enabled,
        ArgumentName: enabled,
        ParameterDefaultValue: default
      },
      {
        Id: allowed_actions,
        Name: AllowedActions,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            LocalOnly,
            Selected
          ],
          EnumValues: [
            all,
            local_only,
            selected
          ]
        },
        IsRequired: false,
        Summary: The permissions policy that controls the actions and reusable workflows that are allowed to run.,
        ParameterName: allowedActions,
        ArgumentName: allowedActions,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set GitHub Actions permissions for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsSetGithubActionsPermissionsRepositoryAsync,
    NotAsyncMethodName: ActionsSetGithubActionsPermissionsRepository,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetGithubActionsPermissionsRepository
  },
  {
    Id: ActionsGetWorkflowAccessToRepository,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/permissions/access",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the level of access for workflows outside of the repository,
    RequestType: ,
    ResponseType: actions-workflow-access-to-repository,
    MethodName: ActionsGetWorkflowAccessToRepositoryAsync,
    NotAsyncMethodName: ActionsGetWorkflowAccessToRepository,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetWorkflowAccessToRepository
  },
  {
    Id: ActionsSetWorkflowAccessToRepository,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/permissions/access",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: access_level,
        Name: AccessLevel,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            None,
            User,
            Organization
          ],
          EnumValues: [
            none,
            user,
            organization
          ]
        },
        IsRequired: true,
        Summary:
Defines the level of access that workflows outside of the repository have to actions and reusable workflows within the
repository.

`none` means the access is only possible from workflows in this repository. `user` level access allows sharing across user owned private repositories only. `organization` level access allows sharing across the organization.,
        ParameterName: accessLevel,
        ArgumentName: accessLevel,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set the level of access for workflows outside of the repository,
    RequestType: ActionsWorkflowAccessToRepository,
    ResponseType: ,
    MethodName: ActionsSetWorkflowAccessToRepositoryAsync,
    NotAsyncMethodName: ActionsSetWorkflowAccessToRepository,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetWorkflowAccessToRepository
  },
  {
    Id: ActionsGetAllowedActionsRepository,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/permissions/selected-actions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get allowed actions and reusable workflows for a repository,
    RequestType: ,
    ResponseType: selected-actions,
    MethodName: ActionsGetAllowedActionsRepositoryAsync,
    NotAsyncMethodName: ActionsGetAllowedActionsRepository,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetAllowedActionsRepository
  },
  {
    Id: ActionsSetAllowedActionsRepository,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/permissions/selected-actions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: github_owned_allowed,
        Name: GithubOwnedAllowed,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether GitHub-owned actions are allowed. For example, this includes the actions in the `actions` organization.,
        ParameterName: githubOwnedAllowed,
        ArgumentName: githubOwnedAllowed,
        ParameterDefaultValue: default
      },
      {
        Id: verified_allowed,
        Name: VerifiedAllowed,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether actions from GitHub Marketplace verified creators are allowed. Set to `true` to allow all actions by GitHub Marketplace verified creators.,
        ParameterName: verifiedAllowed,
        ArgumentName: verifiedAllowed,
        ParameterDefaultValue: default
      },
      {
        Id: patterns_allowed,
        Name: PatternsAllowed,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Specifies a list of string-matching patterns to allow specific action(s) and reusable workflow(s). Wildcards, tags, and SHAs are allowed. For example, `monalisa/octocat@*`, `monalisa/octocat@v2`, `monalisa/*`.

**Note**: The `patterns_allowed` setting only applies to public repositories.,
        ParameterName: patternsAllowed,
        ArgumentName: patternsAllowed,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set allowed actions and reusable workflows for a repository,
    RequestType: SelectedActions,
    ResponseType: ,
    MethodName: ActionsSetAllowedActionsRepositoryAsync,
    NotAsyncMethodName: ActionsSetAllowedActionsRepository,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetAllowedActionsRepository
  },
  {
    Id: ActionsGetGithubActionsDefaultWorkflowPermissionsRepository,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/permissions/workflow",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get default workflow permissions for a repository,
    RequestType: ,
    ResponseType: actions-get-default-workflow-permissions,
    MethodName: ActionsGetGithubActionsDefaultWorkflowPermissionsRepositoryAsync,
    NotAsyncMethodName: ActionsGetGithubActionsDefaultWorkflowPermissionsRepository,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetGithubActionsDefaultWorkflowPermissionsRepository
  },
  {
    Id: ActionsSetGithubActionsDefaultWorkflowPermissionsRepository,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/permissions/workflow",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: default_workflow_permissions,
        Name: DefaultWorkflowPermissions,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Read,
            Write
          ],
          EnumValues: [
            read,
            write
          ]
        },
        IsRequired: false,
        Summary: The default workflow permissions granted to the GITHUB_TOKEN when running workflows.,
        ParameterName: defaultWorkflowPermissions,
        ArgumentName: defaultWorkflowPermissions,
        ParameterDefaultValue: default
      },
      {
        Id: can_approve_pull_request_reviews,
        Name: CanApprovePullRequestReviews,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether GitHub Actions can approve pull requests. Enabling this can be a security risk.,
        ParameterName: canApprovePullRequestReviews,
        ArgumentName: canApprovePullRequestReviews,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set default workflow permissions for a repository,
    RequestType: ActionsSetDefaultWorkflowPermissions,
    ResponseType: ,
    MethodName: ActionsSetGithubActionsDefaultWorkflowPermissionsRepositoryAsync,
    NotAsyncMethodName: ActionsSetGithubActionsDefaultWorkflowPermissionsRepository,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetGithubActionsDefaultWorkflowPermissionsRepository
  },
  {
    Id: ActionsListSelfHostedRunnersForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners?name={name}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List self-hosted runners for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListSelfHostedRunnersForRepoAsync,
    NotAsyncMethodName: ActionsListSelfHostedRunnersForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListSelfHostedRunnersForRepo
  },
  {
    Id: ActionsListRunnerApplicationsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/downloads",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List runner applications for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListRunnerApplicationsForRepoAsync,
    NotAsyncMethodName: ActionsListRunnerApplicationsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListRunnerApplicationsForRepo
  },
  {
    Id: ActionsGenerateRunnerJitconfigForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/generate-jitconfig",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the new runner.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: runner_group_id,
        Name: RunnerGroupId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The ID of the runner group to register the runner to.,
        ParameterName: runnerGroupId,
        ArgumentName: runnerGroupId,
        ParameterDefaultValue: default
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The names of the custom labels to add to the runner. **Minimum items**: 1. **Maximum items**: 100.,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      },
      {
        Id: work_folder,
        Name: WorkFolder,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "_work",
        Summary:
The working directory to be used for job execution, relative to the runner install directory.
<br/>Default Value: _work,
        ParameterName: workFolder,
        ArgumentName: workFolder,
        ParameterDefaultValue: "_work"
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create configuration for a just-in-time runner for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsGenerateRunnerJitconfigForRepoAsync,
    NotAsyncMethodName: ActionsGenerateRunnerJitconfigForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGenerateRunnerJitconfigForRepo
  },
  {
    Id: ActionsCreateRegistrationTokenForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/registration-token",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a registration token for a repository,
    RequestType: ,
    ResponseType: authentication-token,
    MethodName: ActionsCreateRegistrationTokenForRepoAsync,
    NotAsyncMethodName: ActionsCreateRegistrationTokenForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateRegistrationTokenForRepo
  },
  {
    Id: ActionsCreateRemoveTokenForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/remove-token",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a remove token for a repository,
    RequestType: ,
    ResponseType: authentication-token,
    MethodName: ActionsCreateRemoveTokenForRepoAsync,
    NotAsyncMethodName: ActionsCreateRemoveTokenForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateRemoveTokenForRepo
  },
  {
    Id: ActionsGetSelfHostedRunnerForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/{runnerId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a self-hosted runner for a repository,
    RequestType: ,
    ResponseType: runner,
    MethodName: ActionsGetSelfHostedRunnerForRepoAsync,
    NotAsyncMethodName: ActionsGetSelfHostedRunnerForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetSelfHostedRunnerForRepo
  },
  {
    Id: ActionsDeleteSelfHostedRunnerFromRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/{runnerId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a self-hosted runner from a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteSelfHostedRunnerFromRepoAsync,
    NotAsyncMethodName: ActionsDeleteSelfHostedRunnerFromRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteSelfHostedRunnerFromRepo
  },
  {
    Id: ActionsListLabelsForSelfHostedRunnerForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/{runnerId}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List labels for a self-hosted runner for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListLabelsForSelfHostedRunnerForRepoAsync,
    NotAsyncMethodName: ActionsListLabelsForSelfHostedRunnerForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListLabelsForSelfHostedRunnerForRepo
  },
  {
    Id: ActionsAddCustomLabelsToSelfHostedRunnerForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/{runnerId}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The names of the custom labels to add to the runner.,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add custom labels to a self-hosted runner for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsAddCustomLabelsToSelfHostedRunnerForRepoAsync,
    NotAsyncMethodName: ActionsAddCustomLabelsToSelfHostedRunnerForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsAddCustomLabelsToSelfHostedRunnerForRepo
  },
  {
    Id: ActionsSetCustomLabelsForSelfHostedRunnerForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/{runnerId}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The names of the custom labels to set for the runner. You can pass an empty array to remove all custom labels.,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set custom labels for a self-hosted runner for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsSetCustomLabelsForSelfHostedRunnerForRepoAsync,
    NotAsyncMethodName: ActionsSetCustomLabelsForSelfHostedRunnerForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsSetCustomLabelsForSelfHostedRunnerForRepo
  },
  {
    Id: ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/{runnerId}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove all custom labels from a self-hosted runner for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForRepoAsync,
    NotAsyncMethodName: ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsRemoveAllCustomLabelsFromSelfHostedRunnerForRepo
  },
  {
    Id: ActionsRemoveCustomLabelFromSelfHostedRunnerForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runners/{runnerId}/labels/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: runner_id,
        Name: RunnerId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runnerId,
        ArgumentName: runnerId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a custom label from a self-hosted runner for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsRemoveCustomLabelFromSelfHostedRunnerForRepoAsync,
    NotAsyncMethodName: ActionsRemoveCustomLabelFromSelfHostedRunnerForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsRemoveCustomLabelFromSelfHostedRunnerForRepo
  },
  {
    Id: ActionsListWorkflowRunsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs?actor={actor}&branch={branch}&event={@event}&status={status}&per_page={perPage}&page={page}&created={created}&exclude_pull_requests={excludePullRequests}&check_suite_id={checkSuiteId}&head_sha={headSha}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: actor,
        Name: Actor,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: actor,
        ArgumentName: actor,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      },
      {
        Id: event,
        Name: Event,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: @event,
        ArgumentName: @event,
        ParameterDefaultValue: default
      },
      {
        Id: status,
        Name: Status,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Completed,
            ActionRequired,
            Cancelled,
            Failure,
            Neutral,
            Skipped,
            Stale,
            Success,
            TimedOut,
            InProgress,
            Queued,
            Requested,
            Waiting,
            Pending
          ],
          EnumValues: [
            completed,
            action_required,
            cancelled,
            failure,
            neutral,
            skipped,
            stale,
            success,
            timed_out,
            in_progress,
            queued,
            requested,
            waiting,
            pending
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: status,
        ArgumentName: status,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: created,
        Name: Created,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: created,
        ArgumentName: created,
        ParameterDefaultValue: default
      },
      {
        Id: exclude_pull_requests,
        Name: ExcludePullRequests,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: false,
        Summary:
<br/>Default Value: false,
        ParameterName: excludePullRequests,
        ArgumentName: excludePullRequests,
        ParameterDefaultValue: false
      },
      {
        Id: check_suite_id,
        Name: CheckSuiteId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: checkSuiteId,
        ArgumentName: checkSuiteId,
        ParameterDefaultValue: default
      },
      {
        Id: head_sha,
        Name: HeadSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: headSha,
        ArgumentName: headSha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List workflow runs for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListWorkflowRunsForRepoAsync,
    NotAsyncMethodName: ActionsListWorkflowRunsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListWorkflowRunsForRepo
  },
  {
    Id: ActionsGetWorkflowRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}?exclude_pull_requests={excludePullRequests}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      },
      {
        Id: exclude_pull_requests,
        Name: ExcludePullRequests,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: false,
        Summary:
<br/>Default Value: false,
        ParameterName: excludePullRequests,
        ArgumentName: excludePullRequests,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a workflow run,
    RequestType: ,
    ResponseType: workflow-run,
    MethodName: ActionsGetWorkflowRunAsync,
    NotAsyncMethodName: ActionsGetWorkflowRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetWorkflowRun
  },
  {
    Id: ActionsDeleteWorkflowRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a workflow run,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteWorkflowRunAsync,
    NotAsyncMethodName: ActionsDeleteWorkflowRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteWorkflowRun
  },
  {
    Id: ActionsGetReviewsForRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/approvals",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the review history for a workflow run,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsGetReviewsForRunAsync,
    NotAsyncMethodName: ActionsGetReviewsForRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetReviewsForRun
  },
  {
    Id: ActionsApproveWorkflowRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/approve",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Approve a workflow run for a fork pull request,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsApproveWorkflowRunAsync,
    NotAsyncMethodName: ActionsApproveWorkflowRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsApproveWorkflowRun
  },
  {
    Id: ActionsListWorkflowRunArtifacts,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/artifacts?per_page={perPage}&page={page}&name={name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List workflow run artifacts,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListWorkflowRunArtifactsAsync,
    NotAsyncMethodName: ActionsListWorkflowRunArtifacts,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListWorkflowRunArtifacts
  },
  {
    Id: ActionsGetWorkflowRunAttempt,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/attempts/{attemptNumber}?exclude_pull_requests={excludePullRequests}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      },
      {
        Id: attempt_number,
        Name: AttemptNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: attemptNumber,
        ArgumentName: attemptNumber,
        ParameterDefaultValue: default
      },
      {
        Id: exclude_pull_requests,
        Name: ExcludePullRequests,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: false,
        Summary:
<br/>Default Value: false,
        ParameterName: excludePullRequests,
        ArgumentName: excludePullRequests,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a workflow run attempt,
    RequestType: ,
    ResponseType: workflow-run,
    MethodName: ActionsGetWorkflowRunAttemptAsync,
    NotAsyncMethodName: ActionsGetWorkflowRunAttempt,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetWorkflowRunAttempt
  },
  {
    Id: ActionsListJobsForWorkflowRunAttempt,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/attempts/{attemptNumber}/jobs?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      },
      {
        Id: attempt_number,
        Name: AttemptNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: attemptNumber,
        ArgumentName: attemptNumber,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List jobs for a workflow run attempt,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListJobsForWorkflowRunAttemptAsync,
    NotAsyncMethodName: ActionsListJobsForWorkflowRunAttempt,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListJobsForWorkflowRunAttempt
  },
  {
    Id: ActionsDownloadWorkflowRunAttemptLogs,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/attempts/{attemptNumber}/logs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      },
      {
        Id: attempt_number,
        Name: AttemptNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: attemptNumber,
        ArgumentName: attemptNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Download workflow run attempt logs,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDownloadWorkflowRunAttemptLogsAsync,
    NotAsyncMethodName: ActionsDownloadWorkflowRunAttemptLogs,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDownloadWorkflowRunAttemptLogs
  },
  {
    Id: ActionsCancelWorkflowRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/cancel",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Cancel a workflow run,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsCancelWorkflowRunAsync,
    NotAsyncMethodName: ActionsCancelWorkflowRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCancelWorkflowRun
  },
  {
    Id: ActionsReviewCustomGatesForRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/deployment_protection_rule",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Review custom deployment protection rules for a workflow run,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsReviewCustomGatesForRunAsync,
    NotAsyncMethodName: ActionsReviewCustomGatesForRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsReviewCustomGatesForRun
  },
  {
    Id: ActionsForceCancelWorkflowRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/force-cancel",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Force cancel a workflow run,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsForceCancelWorkflowRunAsync,
    NotAsyncMethodName: ActionsForceCancelWorkflowRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsForceCancelWorkflowRun
  },
  {
    Id: ActionsListJobsForWorkflowRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/jobs?filter={filter}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      },
      {
        Id: filter,
        Name: Filter,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Latest,
            All
          ],
          EnumValues: [
            latest,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Filter.Latest,
        Summary:
<br/>Default Value: latest,
        ParameterName: filter,
        ArgumentName: filter,
        ParameterDefaultValue: Filter.Latest
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List jobs for a workflow run,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListJobsForWorkflowRunAsync,
    NotAsyncMethodName: ActionsListJobsForWorkflowRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListJobsForWorkflowRun
  },
  {
    Id: ActionsDownloadWorkflowRunLogs,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/logs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Download workflow run logs,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDownloadWorkflowRunLogsAsync,
    NotAsyncMethodName: ActionsDownloadWorkflowRunLogs,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDownloadWorkflowRunLogs
  },
  {
    Id: ActionsDeleteWorkflowRunLogs,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/logs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete workflow run logs,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteWorkflowRunLogsAsync,
    NotAsyncMethodName: ActionsDeleteWorkflowRunLogs,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteWorkflowRunLogs
  },
  {
    Id: ActionsGetPendingDeploymentsForRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/pending_deployments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get pending deployments for a workflow run,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsGetPendingDeploymentsForRunAsync,
    NotAsyncMethodName: ActionsGetPendingDeploymentsForRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetPendingDeploymentsForRun
  },
  {
    Id: ActionsReviewPendingDeploymentsForRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/pending_deployments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      },
      {
        Id: environment_ids,
        Name: EnvironmentIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The list of environment ids to approve or reject
<br/>Example: [161171787, 161171795],
        ParameterName: environmentIds,
        ArgumentName: environmentIds,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Approved,
            Rejected
          ],
          EnumValues: [
            approved,
            rejected
          ]
        },
        IsRequired: true,
        Summary:
Whether to approve or reject deployment to the specified environments.
<br/>Example: approved,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: comment,
        Name: Comment,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
A comment to accompany the deployment review
<br/>Example: Ship it!,
        ParameterName: comment,
        ArgumentName: comment,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Review pending deployments for a workflow run,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsReviewPendingDeploymentsForRunAsync,
    NotAsyncMethodName: ActionsReviewPendingDeploymentsForRun,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsReviewPendingDeploymentsForRun
  },
  {
    Id: ActionsReRunWorkflow,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/rerun",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      },
      {
        Id: enable_debug_logging,
        Name: EnableDebugLogging,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to enable debug logging for the re-run.
<br/>Default Value: false,
        ParameterName: enableDebugLogging,
        ArgumentName: enableDebugLogging,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Re-run a workflow,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsReRunWorkflowAsync,
    NotAsyncMethodName: ActionsReRunWorkflow,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsReRunWorkflow
  },
  {
    Id: ActionsReRunWorkflowFailedJobs,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/rerun-failed-jobs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      },
      {
        Id: enable_debug_logging,
        Name: EnableDebugLogging,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to enable debug logging for the re-run.
<br/>Default Value: false,
        ParameterName: enableDebugLogging,
        ArgumentName: enableDebugLogging,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Re-run failed jobs from a workflow run,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsReRunWorkflowFailedJobsAsync,
    NotAsyncMethodName: ActionsReRunWorkflowFailedJobs,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsReRunWorkflowFailedJobs
  },
  {
    Id: ActionsGetWorkflowRunUsage,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/runs/{runId}/timing",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: run_id,
        Name: RunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: runId,
        ArgumentName: runId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get workflow run usage,
    RequestType: ,
    ResponseType: workflow-run-usage,
    MethodName: ActionsGetWorkflowRunUsageAsync,
    NotAsyncMethodName: ActionsGetWorkflowRunUsage,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetWorkflowRunUsage
  },
  {
    Id: ActionsListRepoSecrets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/secrets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository secrets,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListRepoSecretsAsync,
    NotAsyncMethodName: ActionsListRepoSecrets,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListRepoSecrets
  },
  {
    Id: ActionsGetRepoPublicKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/secrets/public-key",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository public key,
    RequestType: ,
    ResponseType: actions-public-key,
    MethodName: ActionsGetRepoPublicKeyAsync,
    NotAsyncMethodName: ActionsGetRepoPublicKey,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetRepoPublicKey
  },
  {
    Id: ActionsGetRepoSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository secret,
    RequestType: ,
    ResponseType: actions-secret,
    MethodName: ActionsGetRepoSecretAsync,
    NotAsyncMethodName: ActionsGetRepoSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetRepoSecret
  },
  {
    Id: ActionsCreateOrUpdateRepoSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: encrypted_value,
        Name: EncryptedValue,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/rest/actions/secrets#get-a-repository-public-key) endpoint.,
        ParameterName: encryptedValue,
        ArgumentName: encryptedValue,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: ID of the key you used to encrypt the secret.,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update a repository secret,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsCreateOrUpdateRepoSecretAsync,
    NotAsyncMethodName: ActionsCreateOrUpdateRepoSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateOrUpdateRepoSecret
  },
  {
    Id: ActionsDeleteRepoSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a repository secret,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteRepoSecretAsync,
    NotAsyncMethodName: ActionsDeleteRepoSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteRepoSecret
  },
  {
    Id: ActionsListRepoVariables,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/variables?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 10,
        Summary:
<br/>Default Value: 10,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 10
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository variables,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListRepoVariablesAsync,
    NotAsyncMethodName: ActionsListRepoVariables,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListRepoVariables
  },
  {
    Id: ActionsCreateRepoVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/variables",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the variable.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: value,
        Name: Value,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The value of the variable.,
        ParameterName: value,
        ArgumentName: value,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a repository variable,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsCreateRepoVariableAsync,
    NotAsyncMethodName: ActionsCreateRepoVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateRepoVariable
  },
  {
    Id: ActionsGetRepoVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/variables/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository variable,
    RequestType: ,
    ResponseType: actions-variable,
    MethodName: ActionsGetRepoVariableAsync,
    NotAsyncMethodName: ActionsGetRepoVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetRepoVariable
  },
  {
    Id: ActionsUpdateRepoVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/variables/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the variable.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: value,
        Name: Value,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The value of the variable.,
        ParameterName: value,
        ArgumentName: value,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a repository variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsUpdateRepoVariableAsync,
    NotAsyncMethodName: ActionsUpdateRepoVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsUpdateRepoVariable
  },
  {
    Id: ActionsDeleteRepoVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/variables/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a repository variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteRepoVariableAsync,
    NotAsyncMethodName: ActionsDeleteRepoVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteRepoVariable
  },
  {
    Id: ActionsListRepoWorkflows,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/workflows?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository workflows,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListRepoWorkflowsAsync,
    NotAsyncMethodName: ActionsListRepoWorkflows,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListRepoWorkflows
  },
  {
    Id: ActionsGetWorkflow,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/workflows/{workflowId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: workflow_id,
        Name: WorkflowId,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: workflowId,
        ArgumentName: workflowId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a workflow,
    RequestType: ,
    ResponseType: workflow,
    MethodName: ActionsGetWorkflowAsync,
    NotAsyncMethodName: ActionsGetWorkflow,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetWorkflow
  },
  {
    Id: ActionsDisableWorkflow,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/workflows/{workflowId}/disable",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: workflow_id,
        Name: WorkflowId,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: workflowId,
        ArgumentName: workflowId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Disable a workflow,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDisableWorkflowAsync,
    NotAsyncMethodName: ActionsDisableWorkflow,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDisableWorkflow
  },
  {
    Id: ActionsCreateWorkflowDispatch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/workflows/{workflowId}/dispatches",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: workflow_id,
        Name: WorkflowId,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: workflowId,
        ArgumentName: workflowId,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The git reference for the workflow. The reference can be a branch or tag name.,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: inputs,
        Name: Inputs,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: Input keys and values configured in the workflow file. The maximum number of properties is 10. Any default properties configured in the workflow file will be used when `inputs` are omitted.,
        ParameterName: inputs,
        ArgumentName: inputs,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a workflow dispatch event,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsCreateWorkflowDispatchAsync,
    NotAsyncMethodName: ActionsCreateWorkflowDispatch,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateWorkflowDispatch
  },
  {
    Id: ActionsEnableWorkflow,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/workflows/{workflowId}/enable",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: workflow_id,
        Name: WorkflowId,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: workflowId,
        ArgumentName: workflowId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Enable a workflow,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsEnableWorkflowAsync,
    NotAsyncMethodName: ActionsEnableWorkflow,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsEnableWorkflow
  },
  {
    Id: ActionsListWorkflowRuns,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/workflows/{workflowId}/runs?actor={actor}&branch={branch}&event={@event}&status={status}&per_page={perPage}&page={page}&created={created}&exclude_pull_requests={excludePullRequests}&check_suite_id={checkSuiteId}&head_sha={headSha}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: workflow_id,
        Name: WorkflowId,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: workflowId,
        ArgumentName: workflowId,
        ParameterDefaultValue: default
      },
      {
        Id: actor,
        Name: Actor,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: actor,
        ArgumentName: actor,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      },
      {
        Id: event,
        Name: Event,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: @event,
        ArgumentName: @event,
        ParameterDefaultValue: default
      },
      {
        Id: status,
        Name: Status,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Completed,
            ActionRequired,
            Cancelled,
            Failure,
            Neutral,
            Skipped,
            Stale,
            Success,
            TimedOut,
            InProgress,
            Queued,
            Requested,
            Waiting,
            Pending
          ],
          EnumValues: [
            completed,
            action_required,
            cancelled,
            failure,
            neutral,
            skipped,
            stale,
            success,
            timed_out,
            in_progress,
            queued,
            requested,
            waiting,
            pending
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: status,
        ArgumentName: status,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: created,
        Name: Created,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: created,
        ArgumentName: created,
        ParameterDefaultValue: default
      },
      {
        Id: exclude_pull_requests,
        Name: ExcludePullRequests,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: false,
        Summary:
<br/>Default Value: false,
        ParameterName: excludePullRequests,
        ArgumentName: excludePullRequests,
        ParameterDefaultValue: false
      },
      {
        Id: check_suite_id,
        Name: CheckSuiteId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: checkSuiteId,
        ArgumentName: checkSuiteId,
        ParameterDefaultValue: default
      },
      {
        Id: head_sha,
        Name: HeadSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: headSha,
        ArgumentName: headSha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List workflow runs for a workflow,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListWorkflowRunsAsync,
    NotAsyncMethodName: ActionsListWorkflowRuns,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListWorkflowRuns
  },
  {
    Id: ActionsGetWorkflowUsage,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/actions/workflows/{workflowId}/timing",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: workflow_id,
        Name: WorkflowId,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: workflowId,
        ArgumentName: workflowId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get workflow usage,
    RequestType: ,
    ResponseType: workflow-usage,
    MethodName: ActionsGetWorkflowUsageAsync,
    NotAsyncMethodName: ActionsGetWorkflowUsage,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetWorkflowUsage
  },
  {
    Id: ReposListActivities,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/activity?direction={direction}&per_page={perPage}&before={before}&after={after}&ref={ref}&actor={actor}&time_period={timePeriod}&activity_type={activityType}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: actor,
        Name: Actor,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: actor,
        ArgumentName: actor,
        ParameterDefaultValue: default
      },
      {
        Id: time_period,
        Name: TimePeriod,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Day,
            Week,
            Month,
            Quarter,
            Year
          ],
          EnumValues: [
            day,
            week,
            month,
            quarter,
            year
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: timePeriod,
        ArgumentName: timePeriod,
        ParameterDefaultValue: default
      },
      {
        Id: activity_type,
        Name: ActivityType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Push,
            ForcePush,
            BranchCreation,
            BranchDeletion,
            PrMerge,
            MergeQueueMerge
          ],
          EnumValues: [
            push,
            force_push,
            branch_creation,
            branch_deletion,
            pr_merge,
            merge_queue_merge
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: activityType,
        ArgumentName: activityType,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository activities,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListActivitiesAsync,
    NotAsyncMethodName: ReposListActivities,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListActivities
  },
  {
    Id: IssuesListAssignees,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/assignees?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List assignees,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListAssigneesAsync,
    NotAsyncMethodName: IssuesListAssignees,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListAssignees
  },
  {
    Id: IssuesCheckUserCanBeAssigned,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/assignees/{assignee}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: assignee,
        Name: Assignee,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: assignee,
        ArgumentName: assignee,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a user can be assigned,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesCheckUserCanBeAssignedAsync,
    NotAsyncMethodName: IssuesCheckUserCanBeAssigned,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesCheckUserCanBeAssigned
  },
  {
    Id: ReposListAutolinks,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/autolinks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all autolinks of a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListAutolinksAsync,
    NotAsyncMethodName: ReposListAutolinks,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListAutolinks
  },
  {
    Id: ReposCreateAutolink,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/autolinks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: key_prefix,
        Name: KeyPrefix,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: This prefix appended by certain characters will generate a link any time it is found in an issue, pull request, or commit.,
        ParameterName: keyPrefix,
        ArgumentName: keyPrefix,
        ParameterDefaultValue: default
      },
      {
        Id: url_template,
        Name: UrlTemplate,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The URL must contain `&lt;num&gt;` for the reference number. `&lt;num&gt;` matches different characters depending on the value of `is_alphanumeric`.,
        ParameterName: urlTemplate,
        ArgumentName: urlTemplate,
        ParameterDefaultValue: default
      },
      {
        Id: is_alphanumeric,
        Name: IsAlphanumeric,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether this autolink reference matches alphanumeric characters. If true, the `&lt;num&gt;` parameter of the `url_template` matches alphanumeric characters `A-Z` (case insensitive), `0-9`, and `-`. If false, this autolink reference only matches numeric characters.
<br/>Default Value: true,
        ParameterName: isAlphanumeric,
        ArgumentName: isAlphanumeric,
        ParameterDefaultValue: true
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an autolink reference for a repository,
    RequestType: ,
    ResponseType: autolink,
    MethodName: ReposCreateAutolinkAsync,
    NotAsyncMethodName: ReposCreateAutolink,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateAutolink
  },
  {
    Id: ReposGetAutolink,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/autolinks/{autolinkId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: autolink_id,
        Name: AutolinkId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: autolinkId,
        ArgumentName: autolinkId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an autolink reference of a repository,
    RequestType: ,
    ResponseType: autolink,
    MethodName: ReposGetAutolinkAsync,
    NotAsyncMethodName: ReposGetAutolink,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetAutolink
  },
  {
    Id: ReposDeleteAutolink,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/autolinks/{autolinkId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: autolink_id,
        Name: AutolinkId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: autolinkId,
        ArgumentName: autolinkId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an autolink reference from a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteAutolinkAsync,
    NotAsyncMethodName: ReposDeleteAutolink,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteAutolink
  },
  {
    Id: ReposCheckAutomatedSecurityFixes,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/automated-security-fixes",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if automated security fixes are enabled for a repository,
    RequestType: ,
    ResponseType: check-automated-security-fixes,
    MethodName: ReposCheckAutomatedSecurityFixesAsync,
    NotAsyncMethodName: ReposCheckAutomatedSecurityFixes,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCheckAutomatedSecurityFixes
  },
  {
    Id: ReposEnableAutomatedSecurityFixes,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/automated-security-fixes",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Enable automated security fixes,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposEnableAutomatedSecurityFixesAsync,
    NotAsyncMethodName: ReposEnableAutomatedSecurityFixes,
    FileNameWithoutExtension: G.Api.EndPoints.ReposEnableAutomatedSecurityFixes
  },
  {
    Id: ReposDisableAutomatedSecurityFixes,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/automated-security-fixes",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Disable automated security fixes,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDisableAutomatedSecurityFixesAsync,
    NotAsyncMethodName: ReposDisableAutomatedSecurityFixes,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDisableAutomatedSecurityFixes
  },
  {
    Id: ReposListBranches,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches?protected={protected}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: protected,
        Name: Protected,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: protected,
        ArgumentName: protected,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List branches,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListBranchesAsync,
    NotAsyncMethodName: ReposListBranches,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListBranches
  },
  {
    Id: ReposGetBranch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a branch,
    RequestType: ,
    ResponseType: branch-with-protection,
    MethodName: ReposGetBranchAsync,
    NotAsyncMethodName: ReposGetBranch,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetBranch
  },
  {
    Id: ReposGetBranchProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get branch protection,
    RequestType: ,
    ResponseType: branch-protection,
    MethodName: ReposGetBranchProtectionAsync,
    NotAsyncMethodName: ReposGetBranchProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetBranchProtection
  },
  {
    Id: ReposUpdateBranchProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      },
      {
        Id: required_status_checks,
        Name: RequiredStatusChecks,
        Type: {
          CSharpType: TestRequiredStatusChecks?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Require status checks to pass before merging. Set to `null` to disable.,
        ParameterName: requiredStatusChecks,
        ArgumentName: requiredStatusChecks,
        ParameterDefaultValue: default
      },
      {
        Id: enforce_admins,
        Name: EnforceAdmins,
        Type: {
          CSharpType: bool?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Enforce all configured restrictions for administrators. Set to `true` to enforce required status checks for repository administrators. Set to `null` to disable.,
        ParameterName: enforceAdmins,
        ArgumentName: enforceAdmins,
        ParameterDefaultValue: default
      },
      {
        Id: required_pull_request_reviews,
        Name: RequiredPullRequestReviews,
        Type: {
          CSharpType: TestRequiredPullRequestReviews?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Require at least one approving review on a pull request, before merging. Set to `null` to disable.,
        ParameterName: requiredPullRequestReviews,
        ArgumentName: requiredPullRequestReviews,
        ParameterDefaultValue: default
      },
      {
        Id: restrictions,
        Name: Restrictions,
        Type: {
          CSharpType: TestRestrictions?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Restrict who can push to the protected branch. User, app, and team `restrictions` are only available for organization-owned repositories. Set to `null` to disable.,
        ParameterName: restrictions,
        ArgumentName: restrictions,
        ParameterDefaultValue: default
      },
      {
        Id: required_linear_history,
        Name: RequiredLinearHistory,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch. Set to `true` to enforce a linear commit history. Set to `false` to disable a linear commit Git history. Your repository must allow squash merging or rebase merging before you can enable a linear commit history. Default: `false`. For more information, see "[Requiring a linear commit history](https://docs.github.com/github/administering-a-repository/requiring-a-linear-commit-history)" in the GitHub Help documentation.,
        ParameterName: requiredLinearHistory,
        ArgumentName: requiredLinearHistory,
        ParameterDefaultValue: default
      },
      {
        Id: allow_force_pushes,
        Name: AllowForcePushes,
        Type: {
          CSharpType: bool?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes. Default: `false`. For more information, see "[Enabling force pushes to a protected branch](https://docs.github.com/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)" in the GitHub Help documentation.",
        ParameterName: allowForcePushes,
        ArgumentName: allowForcePushes,
        ParameterDefaultValue: default
      },
      {
        Id: allow_deletions,
        Name: AllowDeletions,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch. Default: `false`. For more information, see "[Enabling force pushes to a protected branch](https://docs.github.com/github/administering-a-repository/enabling-force-pushes-to-a-protected-branch)" in the GitHub Help documentation.,
        ParameterName: allowDeletions,
        ArgumentName: allowDeletions,
        ParameterDefaultValue: default
      },
      {
        Id: block_creations,
        Name: BlockCreations,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: If set to `true`, the `restrictions` branch protection settings which limits who can push will also block pushes which create new branches, unless the push is initiated by a user, team, or app which has the ability to push. Set to `true` to restrict new branch creation. Default: `false`.,
        ParameterName: blockCreations,
        ArgumentName: blockCreations,
        ParameterDefaultValue: default
      },
      {
        Id: required_conversation_resolution,
        Name: RequiredConversationResolution,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable. Default: `false`.,
        ParameterName: requiredConversationResolution,
        ArgumentName: requiredConversationResolution,
        ParameterDefaultValue: default
      },
      {
        Id: lock_branch,
        Name: LockBranch,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to set the branch as read-only. If this is true, users will not be able to push to the branch. Default: `false`.
<br/>Default Value: false,
        ParameterName: lockBranch,
        ArgumentName: lockBranch,
        ParameterDefaultValue: false
      },
      {
        Id: allow_fork_syncing,
        Name: AllowForkSyncing,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing. Default: `false`.
<br/>Default Value: false,
        ParameterName: allowForkSyncing,
        ArgumentName: allowForkSyncing,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Update branch protection,
    RequestType: ,
    ResponseType: protected-branch,
    MethodName: ReposUpdateBranchProtectionAsync,
    NotAsyncMethodName: ReposUpdateBranchProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateBranchProtection
  },
  {
    Id: ReposDeleteBranchProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete branch protection,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteBranchProtectionAsync,
    NotAsyncMethodName: ReposDeleteBranchProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteBranchProtection
  },
  {
    Id: ReposGetAdminBranchProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get admin branch protection,
    RequestType: ,
    ResponseType: protected-branch-admin-enforced,
    MethodName: ReposGetAdminBranchProtectionAsync,
    NotAsyncMethodName: ReposGetAdminBranchProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetAdminBranchProtection
  },
  {
    Id: ReposSetAdminBranchProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Set admin branch protection,
    RequestType: ,
    ResponseType: protected-branch-admin-enforced,
    MethodName: ReposSetAdminBranchProtectionAsync,
    NotAsyncMethodName: ReposSetAdminBranchProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposSetAdminBranchProtection
  },
  {
    Id: ReposDeleteAdminBranchProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete admin branch protection,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteAdminBranchProtectionAsync,
    NotAsyncMethodName: ReposDeleteAdminBranchProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteAdminBranchProtection
  },
  {
    Id: ReposGetPullRequestReviewProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get pull request review protection,
    RequestType: ,
    ResponseType: protected-branch-pull-request-review,
    MethodName: ReposGetPullRequestReviewProtectionAsync,
    NotAsyncMethodName: ReposGetPullRequestReviewProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetPullRequestReviewProtection
  },
  {
    Id: ReposUpdatePullRequestReviewProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      },
      {
        Id: dismissal_restrictions,
        Name: DismissalRestrictions,
        Type: {
          CSharpType: TestDismissalRestrictions?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specify which users, teams, and apps can dismiss pull request reviews. Pass an empty `dismissal_restrictions` object to disable. User and team `dismissal_restrictions` are only available for organization-owned repositories. Omit this parameter for personal repositories.,
        ParameterName: dismissalRestrictions,
        ArgumentName: dismissalRestrictions,
        ParameterDefaultValue: default
      },
      {
        Id: dismiss_stale_reviews,
        Name: DismissStaleReviews,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.,
        ParameterName: dismissStaleReviews,
        ArgumentName: dismissStaleReviews,
        ParameterDefaultValue: default
      },
      {
        Id: require_code_owner_reviews,
        Name: RequireCodeOwnerReviews,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) have reviewed.,
        ParameterName: requireCodeOwnerReviews,
        ArgumentName: requireCodeOwnerReviews,
        ParameterDefaultValue: default
      },
      {
        Id: required_approving_review_count,
        Name: RequiredApprovingReviewCount,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require reviewers.,
        ParameterName: requiredApprovingReviewCount,
        ArgumentName: requiredApprovingReviewCount,
        ParameterDefaultValue: default
      },
      {
        Id: require_last_push_approval,
        Name: RequireLastPushApproval,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether the most recent push must be approved by someone other than the person who pushed it. Default: `false`
<br/>Default Value: false,
        ParameterName: requireLastPushApproval,
        ArgumentName: requireLastPushApproval,
        ParameterDefaultValue: false
      },
      {
        Id: bypass_pull_request_allowances,
        Name: BypassPullRequestAllowances,
        Type: {
          CSharpType: TestBypassPullRequestAllowances?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Allow specific users, teams, or apps to bypass pull request requirements.,
        ParameterName: bypassPullRequestAllowances,
        ArgumentName: bypassPullRequestAllowances,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update pull request review protection,
    RequestType: ,
    ResponseType: protected-branch-pull-request-review,
    MethodName: ReposUpdatePullRequestReviewProtectionAsync,
    NotAsyncMethodName: ReposUpdatePullRequestReviewProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdatePullRequestReviewProtection
  },
  {
    Id: ReposDeletePullRequestReviewProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete pull request review protection,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeletePullRequestReviewProtectionAsync,
    NotAsyncMethodName: ReposDeletePullRequestReviewProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeletePullRequestReviewProtection
  },
  {
    Id: ReposGetCommitSignatureProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get commit signature protection,
    RequestType: ,
    ResponseType: protected-branch-admin-enforced,
    MethodName: ReposGetCommitSignatureProtectionAsync,
    NotAsyncMethodName: ReposGetCommitSignatureProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCommitSignatureProtection
  },
  {
    Id: ReposCreateCommitSignatureProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create commit signature protection,
    RequestType: ,
    ResponseType: protected-branch-admin-enforced,
    MethodName: ReposCreateCommitSignatureProtectionAsync,
    NotAsyncMethodName: ReposCreateCommitSignatureProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateCommitSignatureProtection
  },
  {
    Id: ReposDeleteCommitSignatureProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete commit signature protection,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteCommitSignatureProtectionAsync,
    NotAsyncMethodName: ReposDeleteCommitSignatureProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteCommitSignatureProtection
  },
  {
    Id: ReposGetStatusChecksProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get status checks protection,
    RequestType: ,
    ResponseType: status-check-policy,
    MethodName: ReposGetStatusChecksProtectionAsync,
    NotAsyncMethodName: ReposGetStatusChecksProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetStatusChecksProtection
  },
  {
    Id: ReposUpdateStatusCheckProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      },
      {
        Id: strict,
        Name: Strict,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Require branches to be up to date before merging.,
        ParameterName: strict,
        ArgumentName: strict,
        ParameterDefaultValue: default
      },
      {
        Id: contexts,
        Name: Contexts,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
**Deprecated**: The list of status checks to require in order to merge into this branch. If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge. Use `checks` instead of `contexts` for more fine-grained control.
,
        ParameterName: contexts,
        ArgumentName: contexts,
        ParameterDefaultValue: default
      },
      {
        Id: checks,
        Name: Checks,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<TestChecks?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The list of status checks to require in order to merge into this branch.,
        ParameterName: checks,
        ArgumentName: checks,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update status check protection,
    RequestType: ,
    ResponseType: status-check-policy,
    MethodName: ReposUpdateStatusCheckProtectionAsync,
    NotAsyncMethodName: ReposUpdateStatusCheckProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateStatusCheckProtection
  },
  {
    Id: ReposRemoveStatusCheckProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove status check protection,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposRemoveStatusCheckProtectionAsync,
    NotAsyncMethodName: ReposRemoveStatusCheckProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposRemoveStatusCheckProtection
  },
  {
    Id: ReposGetAllStatusCheckContexts,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all status check contexts,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetAllStatusCheckContextsAsync,
    NotAsyncMethodName: ReposGetAllStatusCheckContexts,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetAllStatusCheckContexts
  },
  {
    Id: ReposAddStatusCheckContexts,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add status check contexts,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposAddStatusCheckContextsAsync,
    NotAsyncMethodName: ReposAddStatusCheckContexts,
    FileNameWithoutExtension: G.Api.EndPoints.ReposAddStatusCheckContexts
  },
  {
    Id: ReposSetStatusCheckContexts,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set status check contexts,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposSetStatusCheckContextsAsync,
    NotAsyncMethodName: ReposSetStatusCheckContexts,
    FileNameWithoutExtension: G.Api.EndPoints.ReposSetStatusCheckContexts
  },
  {
    Id: ReposRemoveStatusCheckContexts,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove status check contexts,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposRemoveStatusCheckContextsAsync,
    NotAsyncMethodName: ReposRemoveStatusCheckContexts,
    FileNameWithoutExtension: G.Api.EndPoints.ReposRemoveStatusCheckContexts
  },
  {
    Id: ReposGetAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get access restrictions,
    RequestType: ,
    ResponseType: branch-restriction-policy,
    MethodName: ReposGetAccessRestrictionsAsync,
    NotAsyncMethodName: ReposGetAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetAccessRestrictions
  },
  {
    Id: ReposDeleteAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteAccessRestrictionsAsync,
    NotAsyncMethodName: ReposDeleteAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteAccessRestrictions
  },
  {
    Id: ReposGetAppsWithAccessToProtectedBranch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get apps with access to the protected branch,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetAppsWithAccessToProtectedBranchAsync,
    NotAsyncMethodName: ReposGetAppsWithAccessToProtectedBranch,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetAppsWithAccessToProtectedBranch
  },
  {
    Id: ReposAddAppAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add app access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposAddAppAccessRestrictionsAsync,
    NotAsyncMethodName: ReposAddAppAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposAddAppAccessRestrictions
  },
  {
    Id: ReposSetAppAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set app access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposSetAppAccessRestrictionsAsync,
    NotAsyncMethodName: ReposSetAppAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposSetAppAccessRestrictions
  },
  {
    Id: ReposRemoveAppAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove app access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposRemoveAppAccessRestrictionsAsync,
    NotAsyncMethodName: ReposRemoveAppAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposRemoveAppAccessRestrictions
  },
  {
    Id: ReposGetTeamsWithAccessToProtectedBranch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get teams with access to the protected branch,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetTeamsWithAccessToProtectedBranchAsync,
    NotAsyncMethodName: ReposGetTeamsWithAccessToProtectedBranch,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetTeamsWithAccessToProtectedBranch
  },
  {
    Id: ReposAddTeamAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add team access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposAddTeamAccessRestrictionsAsync,
    NotAsyncMethodName: ReposAddTeamAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposAddTeamAccessRestrictions
  },
  {
    Id: ReposSetTeamAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set team access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposSetTeamAccessRestrictionsAsync,
    NotAsyncMethodName: ReposSetTeamAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposSetTeamAccessRestrictions
  },
  {
    Id: ReposRemoveTeamAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove team access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposRemoveTeamAccessRestrictionsAsync,
    NotAsyncMethodName: ReposRemoveTeamAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposRemoveTeamAccessRestrictions
  },
  {
    Id: ReposGetUsersWithAccessToProtectedBranch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get users with access to the protected branch,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetUsersWithAccessToProtectedBranchAsync,
    NotAsyncMethodName: ReposGetUsersWithAccessToProtectedBranch,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetUsersWithAccessToProtectedBranch
  },
  {
    Id: ReposAddUserAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add user access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposAddUserAccessRestrictionsAsync,
    NotAsyncMethodName: ReposAddUserAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposAddUserAccessRestrictions
  },
  {
    Id: ReposSetUserAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set user access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposSetUserAccessRestrictionsAsync,
    NotAsyncMethodName: ReposSetUserAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposSetUserAccessRestrictions
  },
  {
    Id: ReposRemoveUserAccessRestrictions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove user access restrictions,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposRemoveUserAccessRestrictionsAsync,
    NotAsyncMethodName: ReposRemoveUserAccessRestrictions,
    FileNameWithoutExtension: G.Api.EndPoints.ReposRemoveUserAccessRestrictions
  },
  {
    Id: ReposRenameBranch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/branches/{branch}/rename",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      },
      {
        Id: new_name,
        Name: NewName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The new name of the branch.,
        ParameterName: newName,
        ArgumentName: newName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Rename a branch,
    RequestType: ,
    ResponseType: branch-with-protection,
    MethodName: ReposRenameBranchAsync,
    NotAsyncMethodName: ReposRenameBranch,
    FileNameWithoutExtension: G.Api.EndPoints.ReposRenameBranch
  },
  {
    Id: ChecksCreate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-runs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the check. For example, "code-coverage".,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: head_sha,
        Name: HeadSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The SHA of the commit.,
        ParameterName: headSha,
        ArgumentName: headSha,
        ParameterDefaultValue: default
      },
      {
        Id: details_url,
        Name: DetailsUrl,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The URL of the integrator's site that has the full details of the check. If the integrator does not provide this, then the homepage of the GitHub app is used.,
        ParameterName: detailsUrl,
        ArgumentName: detailsUrl,
        ParameterDefaultValue: default
      },
      {
        Id: external_id,
        Name: ExternalId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A reference for the run on the integrator's system.,
        ParameterName: externalId,
        ArgumentName: externalId,
        ParameterDefaultValue: default
      },
      {
        Id: status,
        Name: Status,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Queued,
            InProgress,
            Completed,
            Waiting,
            Requested,
            Pending
          ],
          EnumValues: [
            queued,
            in_progress,
            completed,
            waiting,
            requested,
            pending
          ]
        },
        IsRequired: false,
        DefaultValue: TestStatus.Queued,
        Summary:
The current status of the check run. Only GitHub Actions can set a status of `waiting`, `pending`, or `requested`.
<br/>Default Value: queued,
        ParameterName: status,
        ArgumentName: status,
        ParameterDefaultValue: TestStatus.Queued
      },
      {
        Id: started_at,
        Name: StartedAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The time that the check run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.,
        ParameterName: startedAt,
        ArgumentName: startedAt,
        ParameterDefaultValue: default
      },
      {
        Id: conclusion,
        Name: Conclusion,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            ActionRequired,
            Cancelled,
            Failure,
            Neutral,
            Success,
            Skipped,
            Stale,
            TimedOut
          ],
          EnumValues: [
            action_required,
            cancelled,
            failure,
            neutral,
            success,
            skipped,
            stale,
            timed_out
          ]
        },
        IsRequired: false,
        Summary:
**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. 
**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.,
        ParameterName: conclusion,
        ArgumentName: conclusion,
        ParameterDefaultValue: default
      },
      {
        Id: completed_at,
        Name: CompletedAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.,
        ParameterName: completedAt,
        ArgumentName: completedAt,
        ParameterDefaultValue: default
      },
      {
        Id: output,
        Name: Output,
        Type: {
          CSharpType: TestOutput?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run.,
        ParameterName: output,
        ArgumentName: output,
        ParameterDefaultValue: default
      },
      {
        Id: actions,
        Name: Actions,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<TestActions?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Displays a button on GitHub that can be clicked to alert your app to do additional tasks. For example, a code linting app can display a button that automatically fixes detected errors. The button created in this object is displayed after the check run completes. When a user clicks the button, GitHub sends the [`check_run.requested_action` webhook](https://docs.github.com/webhooks/event-payloads/#check_run) to your app. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. To learn more about check runs and requested actions, see "[Check runs and requested actions](https://docs.github.com/rest/guides/using-the-rest-api-to-interact-with-checks#check-runs-and-requested-actions).",
        ParameterName: actions,
        ArgumentName: actions,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a check run,
    RequestType: ,
    ResponseType: check-run,
    MethodName: ChecksCreateAsync,
    NotAsyncMethodName: ChecksCreate,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksCreate
  },
  {
    Id: ChecksGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-runs/{checkRunId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: check_run_id,
        Name: CheckRunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: checkRunId,
        ArgumentName: checkRunId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a check run,
    RequestType: ,
    ResponseType: check-run,
    MethodName: ChecksGetAsync,
    NotAsyncMethodName: ChecksGet,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksGet
  },
  {
    Id: ChecksUpdate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-runs/{checkRunId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: check_run_id,
        Name: CheckRunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: checkRunId,
        ArgumentName: checkRunId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the check. For example, "code-coverage".,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: details_url,
        Name: DetailsUrl,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The URL of the integrator's site that has the full details of the check.,
        ParameterName: detailsUrl,
        ArgumentName: detailsUrl,
        ParameterDefaultValue: default
      },
      {
        Id: external_id,
        Name: ExternalId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A reference for the run on the integrator's system.,
        ParameterName: externalId,
        ArgumentName: externalId,
        ParameterDefaultValue: default
      },
      {
        Id: started_at,
        Name: StartedAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.,
        ParameterName: startedAt,
        ArgumentName: startedAt,
        ParameterDefaultValue: default
      },
      {
        Id: status,
        Name: Status,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Queued,
            InProgress,
            Completed,
            Waiting,
            Requested,
            Pending
          ],
          EnumValues: [
            queued,
            in_progress,
            completed,
            waiting,
            requested,
            pending
          ]
        },
        IsRequired: false,
        Summary: The current status of the check run. Only GitHub Actions can set a status of `waiting`, `pending`, or `requested`.,
        ParameterName: status,
        ArgumentName: status,
        ParameterDefaultValue: default
      },
      {
        Id: conclusion,
        Name: Conclusion,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            ActionRequired,
            Cancelled,
            Failure,
            Neutral,
            Success,
            Skipped,
            Stale,
            TimedOut
          ],
          EnumValues: [
            action_required,
            cancelled,
            failure,
            neutral,
            success,
            skipped,
            stale,
            timed_out
          ]
        },
        IsRequired: false,
        Summary:
**Required if you provide `completed_at` or a `status` of `completed`**. The final conclusion of the check. 
**Note:** Providing `conclusion` will automatically set the `status` parameter to `completed`. You cannot change a check run conclusion to `stale`, only GitHub can set this.,
        ParameterName: conclusion,
        ArgumentName: conclusion,
        ParameterDefaultValue: default
      },
      {
        Id: completed_at,
        Name: CompletedAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The time the check completed. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.,
        ParameterName: completedAt,
        ArgumentName: completedAt,
        ParameterDefaultValue: default
      },
      {
        Id: output,
        Name: Output,
        Type: {
          CSharpType: TestOutput?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run.,
        ParameterName: output,
        ArgumentName: output,
        ParameterDefaultValue: default
      },
      {
        Id: actions,
        Name: Actions,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<TestActions?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Possible further actions the integrator can perform, which a user may trigger. Each action includes a `label`, `identifier` and `description`. A maximum of three actions are accepted. To learn more about check runs and requested actions, see "[Check runs and requested actions](https://docs.github.com/rest/guides/using-the-rest-api-to-interact-with-checks#check-runs-and-requested-actions).",
        ParameterName: actions,
        ArgumentName: actions,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a check run,
    RequestType: ,
    ResponseType: check-run,
    MethodName: ChecksUpdateAsync,
    NotAsyncMethodName: ChecksUpdate,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksUpdate
  },
  {
    Id: ChecksListAnnotations,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-runs/{checkRunId}/annotations?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: check_run_id,
        Name: CheckRunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: checkRunId,
        ArgumentName: checkRunId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List check run annotations,
    RequestType: ,
    ResponseType: ,
    MethodName: ChecksListAnnotationsAsync,
    NotAsyncMethodName: ChecksListAnnotations,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksListAnnotations
  },
  {
    Id: ChecksRerequestRun,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-runs/{checkRunId}/rerequest",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: check_run_id,
        Name: CheckRunId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: checkRunId,
        ArgumentName: checkRunId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Rerequest a check run,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ChecksRerequestRunAsync,
    NotAsyncMethodName: ChecksRerequestRun,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksRerequestRun
  },
  {
    Id: ChecksCreateSuite,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-suites",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: head_sha,
        Name: HeadSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The sha of the head commit.,
        ParameterName: headSha,
        ArgumentName: headSha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a check suite,
    RequestType: ,
    ResponseType: check-suite,
    MethodName: ChecksCreateSuiteAsync,
    NotAsyncMethodName: ChecksCreateSuite,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksCreateSuite
  },
  {
    Id: ChecksSetSuitesPreferences,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-suites/preferences",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: auto_trigger_checks,
        Name: AutoTriggerChecks,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<TestAutoTriggerChecks?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Enables or disables automatic creation of CheckSuite events upon pushes to the repository. Enabled by default.,
        ParameterName: autoTriggerChecks,
        ArgumentName: autoTriggerChecks,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update repository preferences for check suites,
    RequestType: ,
    ResponseType: check-suite-preference,
    MethodName: ChecksSetSuitesPreferencesAsync,
    NotAsyncMethodName: ChecksSetSuitesPreferences,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksSetSuitesPreferences
  },
  {
    Id: ChecksGetSuite,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-suites/{checkSuiteId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: check_suite_id,
        Name: CheckSuiteId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: checkSuiteId,
        ArgumentName: checkSuiteId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a check suite,
    RequestType: ,
    ResponseType: check-suite,
    MethodName: ChecksGetSuiteAsync,
    NotAsyncMethodName: ChecksGetSuite,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksGetSuite
  },
  {
    Id: ChecksListForSuite,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-suites/{checkSuiteId}/check-runs?check_name={checkName}&status={status}&filter={filter}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: check_suite_id,
        Name: CheckSuiteId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: checkSuiteId,
        ArgumentName: checkSuiteId,
        ParameterDefaultValue: default
      },
      {
        Id: check_name,
        Name: CheckName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: checkName,
        ArgumentName: checkName,
        ParameterDefaultValue: default
      },
      {
        Id: status,
        Name: Status,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Queued,
            InProgress,
            Completed
          ],
          EnumValues: [
            queued,
            in_progress,
            completed
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: status,
        ArgumentName: status,
        ParameterDefaultValue: default
      },
      {
        Id: filter,
        Name: Filter,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Latest,
            All
          ],
          EnumValues: [
            latest,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Filter.Latest,
        Summary:
<br/>Default Value: latest,
        ParameterName: filter,
        ArgumentName: filter,
        ParameterDefaultValue: Filter.Latest
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List check runs in a check suite,
    RequestType: ,
    ResponseType: ,
    MethodName: ChecksListForSuiteAsync,
    NotAsyncMethodName: ChecksListForSuite,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksListForSuite
  },
  {
    Id: ChecksRerequestSuite,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/check-suites/{checkSuiteId}/rerequest",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: check_suite_id,
        Name: CheckSuiteId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: checkSuiteId,
        ArgumentName: checkSuiteId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Rerequest a check suite,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ChecksRerequestSuiteAsync,
    NotAsyncMethodName: ChecksRerequestSuite,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksRerequestSuite
  },
  {
    Id: CodeScanningListAlertsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/alerts?tool_name={toolName}&tool_guid={toolGuid}&page={page}&per_page={perPage}&ref={ref}&direction={direction}&sort={sort}&state={state}&severity={severity}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tool_name,
        Name: ToolName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: The name of the tool used to generate the code scanning analysis.,
        ParameterName: toolName,
        ArgumentName: toolName,
        ParameterDefaultValue: default
      },
      {
        Id: tool_guid,
        Name: ToolGuid,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.,
        ParameterName: toolGuid,
        ArgumentName: toolGuid,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
The Git reference, formatted as `refs/pull/&lt;number&gt;/merge`, `refs/pull/&lt;number&gt;/head`,
`refs/heads/&lt;branch name&gt;` or simply `&lt;branch name&gt;`.,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            Dismissed,
            Fixed
          ],
          EnumValues: [
            open,
            closed,
            dismissed,
            fixed
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: State of a code scanning alert.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: severity,
        Name: Severity,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Critical,
            High,
            Medium,
            Low,
            Warning,
            Note,
            Error
          ],
          EnumValues: [
            critical,
            high,
            medium,
            low,
            warning,
            note,
            error
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: Severity of a code scanning alert.,
        ParameterName: severity,
        ArgumentName: severity,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List code scanning alerts for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: CodeScanningListAlertsForRepoAsync,
    NotAsyncMethodName: CodeScanningListAlertsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningListAlertsForRepo
  },
  {
    Id: CodeScanningGetAlert,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/alerts/{alertNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: alert_number,
        Name: AlertNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: The security alert number.,
        ParameterName: alertNumber,
        ArgumentName: alertNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a code scanning alert,
    RequestType: ,
    ResponseType: code-scanning-alert,
    MethodName: CodeScanningGetAlertAsync,
    NotAsyncMethodName: CodeScanningGetAlert,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningGetAlert
  },
  {
    Id: CodeScanningUpdateAlert,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/alerts/{alertNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: alert_number,
        Name: AlertNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: The security alert number.,
        ParameterName: alertNumber,
        ArgumentName: alertNumber,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Dismissed
          ],
          EnumValues: [
            open,
            dismissed
          ]
        },
        IsRequired: true,
        Summary: Sets the state of the code scanning alert. You must provide `dismissed_reason` when you set the state to `dismissed`.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: dismissed_reason,
        Name: DismissedReason,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            ,
            FalsePositive,
            Won'tFix,
            UsedInTests
          ],
          EnumValues: [
            ,
            false positive,
            won't fix,
            used in tests
          ]
        },
        IsRequired: false,
        Summary: **Required when the state is dismissed.** The reason for dismissing or closing the alert.,
        ParameterName: dismissedReason,
        ArgumentName: dismissedReason,
        ParameterDefaultValue: default
      },
      {
        Id: dismissed_comment,
        Name: DismissedComment,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The dismissal comment associated with the dismissal of the alert.,
        ParameterName: dismissedComment,
        ArgumentName: dismissedComment,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a code scanning alert,
    RequestType: ,
    ResponseType: code-scanning-alert,
    MethodName: CodeScanningUpdateAlertAsync,
    NotAsyncMethodName: CodeScanningUpdateAlert,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningUpdateAlert
  },
  {
    Id: CodeScanningListAlertInstances,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/alerts/{alertNumber}/instances?page={page}&per_page={perPage}&ref={ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: alert_number,
        Name: AlertNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: The security alert number.,
        ParameterName: alertNumber,
        ArgumentName: alertNumber,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
The Git reference, formatted as `refs/pull/&lt;number&gt;/merge`, `refs/pull/&lt;number&gt;/head`,
`refs/heads/&lt;branch name&gt;` or simply `&lt;branch name&gt;`.,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List instances of a code scanning alert,
    RequestType: ,
    ResponseType: ,
    MethodName: CodeScanningListAlertInstancesAsync,
    NotAsyncMethodName: CodeScanningListAlertInstances,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningListAlertInstances
  },
  {
    Id: CodeScanningListRecentAnalyses,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/analyses?tool_name={toolName}&tool_guid={toolGuid}&page={page}&per_page={perPage}&ref={ref}&sarif_id={sarifId}&direction={direction}&sort={sort}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tool_name,
        Name: ToolName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: The name of the tool used to generate the code scanning analysis.,
        ParameterName: toolName,
        ArgumentName: toolName,
        ParameterDefaultValue: default
      },
      {
        Id: tool_guid,
        Name: ToolGuid,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: The GUID of the tool used to generate the code scanning analysis, if provided in the uploaded SARIF data.,
        ParameterName: toolGuid,
        ArgumentName: toolGuid,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
The Git reference, formatted as `refs/pull/&lt;number&gt;/merge`, `refs/pull/&lt;number&gt;/head`,
`refs/heads/&lt;branch name&gt;` or simply `&lt;branch name&gt;`.,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: sarif_id,
        Name: SarifId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
An identifier for the upload.
<br/>Example: 6c81cd8e-b078-4ac3-a3be-1dad7dbd0b53,
        ParameterName: sarifId,
        ArgumentName: sarifId,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created
          ],
          EnumValues: [
            created
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List code scanning analyses for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: CodeScanningListRecentAnalysesAsync,
    NotAsyncMethodName: CodeScanningListRecentAnalyses,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningListRecentAnalyses
  },
  {
    Id: CodeScanningGetAnalysis,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/analyses/{analysisId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: analysis_id,
        Name: AnalysisId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: analysisId,
        ArgumentName: analysisId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a code scanning analysis for a repository,
    RequestType: ,
    ResponseType: code-scanning-analysis,
    MethodName: CodeScanningGetAnalysisAsync,
    NotAsyncMethodName: CodeScanningGetAnalysis,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningGetAnalysis
  },
  {
    Id: CodeScanningDeleteAnalysis,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/analyses/{analysisId}?confirm_delete={confirmDelete}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: analysis_id,
        Name: AnalysisId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: analysisId,
        ArgumentName: analysisId,
        ParameterDefaultValue: default
      },
      {
        Id: confirm_delete,
        Name: ConfirmDelete,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: confirmDelete,
        ArgumentName: confirmDelete,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a code scanning analysis from a repository,
    RequestType: ,
    ResponseType: code-scanning-analysis-deletion,
    MethodName: CodeScanningDeleteAnalysisAsync,
    NotAsyncMethodName: CodeScanningDeleteAnalysis,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningDeleteAnalysis
  },
  {
    Id: CodeScanningListCodeqlDatabases,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/codeql/databases",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List CodeQL databases for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: CodeScanningListCodeqlDatabasesAsync,
    NotAsyncMethodName: CodeScanningListCodeqlDatabases,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningListCodeqlDatabases
  },
  {
    Id: CodeScanningGetCodeqlDatabase,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: language,
        Name: Language,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: language,
        ArgumentName: language,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a CodeQL database for a repository,
    RequestType: ,
    ResponseType: code-scanning-codeql-database,
    MethodName: CodeScanningGetCodeqlDatabaseAsync,
    NotAsyncMethodName: CodeScanningGetCodeqlDatabase,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningGetCodeqlDatabase
  },
  {
    Id: CodeScanningCreateVariantAnalysis,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: language,
        Name: Language,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Cpp,
            Csharp,
            Go,
            Java,
            Javascript,
            Python,
            Ruby,
            Swift
          ],
          EnumValues: [
            cpp,
            csharp,
            go,
            java,
            javascript,
            python,
            ruby,
            swift
          ]
        },
        IsRequired: true,
        Summary: The language targeted by the CodeQL query,
        ParameterName: language,
        ArgumentName: language,
        ParameterDefaultValue: default
      },
      {
        Id: query_pack,
        Name: QueryPack,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A Base64-encoded tarball containing a CodeQL query and all its dependencies,
        ParameterName: queryPack,
        ArgumentName: queryPack,
        ParameterDefaultValue: default
      },
      {
        Id: repositories,
        Name: Repositories,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: List of repository names (in the form `owner/repo-name`) to run the query against. Precisely one property from `repositories`, `repository_lists` and `repository_owners` is required.,
        ParameterName: repositories,
        ArgumentName: repositories,
        ParameterDefaultValue: default
      },
      {
        Id: repository_lists,
        Name: RepositoryLists,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: List of repository lists to run the query against. Precisely one property from `repositories`, `repository_lists` and `repository_owners` is required.,
        ParameterName: repositoryLists,
        ArgumentName: repositoryLists,
        ParameterDefaultValue: default
      },
      {
        Id: repository_owners,
        Name: RepositoryOwners,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: List of organization or user names whose repositories the query should be run against. Precisely one property from `repositories`, `repository_lists` and `repository_owners` is required.,
        ParameterName: repositoryOwners,
        ArgumentName: repositoryOwners,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a CodeQL variant analysis,
    RequestType: ,
    ResponseType: code-scanning-variant-analysis,
    MethodName: CodeScanningCreateVariantAnalysisAsync,
    NotAsyncMethodName: CodeScanningCreateVariantAnalysis,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningCreateVariantAnalysis
  },
  {
    Id: CodeScanningGetVariantAnalysis,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeqlVariantAnalysisId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: codeql_variant_analysis_id,
        Name: CodeqlVariantAnalysisId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codeqlVariantAnalysisId,
        ArgumentName: codeqlVariantAnalysisId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the summary of a CodeQL variant analysis,
    RequestType: ,
    ResponseType: code-scanning-variant-analysis,
    MethodName: CodeScanningGetVariantAnalysisAsync,
    NotAsyncMethodName: CodeScanningGetVariantAnalysis,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningGetVariantAnalysis
  },
  {
    Id: CodeScanningGetVariantAnalysisRepoTask,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeqlVariantAnalysisId}/repos/{repoOwner}/{repoName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: codeql_variant_analysis_id,
        Name: CodeqlVariantAnalysisId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codeqlVariantAnalysisId,
        ArgumentName: codeqlVariantAnalysisId,
        ParameterDefaultValue: default
      },
      {
        Id: repo_owner,
        Name: RepoOwner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repoOwner,
        ArgumentName: repoOwner,
        ParameterDefaultValue: default
      },
      {
        Id: repo_name,
        Name: RepoName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repoName,
        ArgumentName: repoName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the analysis status of a repository in a CodeQL variant analysis,
    RequestType: ,
    ResponseType: code-scanning-variant-analysis-repo-task,
    MethodName: CodeScanningGetVariantAnalysisRepoTaskAsync,
    NotAsyncMethodName: CodeScanningGetVariantAnalysisRepoTask,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningGetVariantAnalysisRepoTask
  },
  {
    Id: CodeScanningGetDefaultSetup,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/default-setup",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a code scanning default setup configuration,
    RequestType: ,
    ResponseType: code-scanning-default-setup,
    MethodName: CodeScanningGetDefaultSetupAsync,
    NotAsyncMethodName: CodeScanningGetDefaultSetup,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningGetDefaultSetup
  },
  {
    Id: CodeScanningUpdateDefaultSetup,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/default-setup",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Configured,
            NotConfigured
          ],
          EnumValues: [
            configured,
            not-configured
          ]
        },
        IsRequired: false,
        Summary: The desired state of code scanning default setup.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: query_suite,
        Name: QuerySuite,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Default,
            Extended
          ],
          EnumValues: [
            default,
            extended
          ]
        },
        IsRequired: false,
        Summary: CodeQL query suite to be used.,
        ParameterName: querySuite,
        ArgumentName: querySuite,
        ParameterDefaultValue: default
      },
      {
        Id: languages,
        Name: Languages,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: CodeQL languages to be analyzed.,
        ParameterName: languages,
        ArgumentName: languages,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a code scanning default setup configuration,
    RequestType: CodeScanningDefaultSetupUpdate,
    ResponseType: empty-object,
    MethodName: CodeScanningUpdateDefaultSetupAsync,
    NotAsyncMethodName: CodeScanningUpdateDefaultSetup,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningUpdateDefaultSetup
  },
  {
    Id: CodeScanningUploadSarif,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/sarifs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: commit_sha,
        Name: CommitSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The SHA of the commit to which the analysis you are uploading relates.,
        ParameterName: commitSha,
        ArgumentName: commitSha,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The full Git reference, formatted as `refs/heads/&lt;branch name&gt;`,
`refs/tags/&lt;tag&gt;`, `refs/pull/&lt;number&gt;/merge`, or `refs/pull/&lt;number&gt;/head`.
<br/>Example: refs/heads/main,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: sarif,
        Name: Sarif,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A Base64 string representing the SARIF file to upload. You must first compress your SARIF file using [`gzip`](http://www.gnu.org/software/gzip/manual/gzip.html) and then translate the contents of the file into a Base64 encoding string. For more information, see "[SARIF support for code scanning](https://docs.github.com/code-security/secure-coding/sarif-support-for-code-scanning).",
        ParameterName: sarif,
        ArgumentName: sarif,
        ParameterDefaultValue: default
      },
      {
        Id: checkout_uri,
        Name: CheckoutUri,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The base directory used in the analysis, as it appears in the SARIF file.
This property is used to convert file paths from absolute to relative, so that alerts can be mapped to their correct location in the repository.
<br/>Example: file:///github/workspace/,
        ParameterName: checkoutUri,
        ArgumentName: checkoutUri,
        ParameterDefaultValue: default
      },
      {
        Id: started_at,
        Name: StartedAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The time that the analysis run began. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.,
        ParameterName: startedAt,
        ArgumentName: startedAt,
        ParameterDefaultValue: default
      },
      {
        Id: tool_name,
        Name: ToolName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the tool used to generate the code scanning analysis. If this parameter is not used, the tool name defaults to "API". If the uploaded SARIF contains a tool GUID, this will be available for filtering using the `tool_guid` parameter of operations such as `GET /repos/{owner}/{repo}/code-scanning/alerts`.,
        ParameterName: toolName,
        ArgumentName: toolName,
        ParameterDefaultValue: default
      },
      {
        Id: validate,
        Name: Validate,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Whether the SARIF file will be validated according to the code scanning specifications.
This parameter is intended to help integrators ensure that the uploaded SARIF files are correctly rendered by code scanning.,
        ParameterName: validate,
        ArgumentName: validate,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Upload an analysis as SARIF data,
    RequestType: ,
    ResponseType: code-scanning-sarifs-receipt,
    MethodName: CodeScanningUploadSarifAsync,
    NotAsyncMethodName: CodeScanningUploadSarif,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningUploadSarif
  },
  {
    Id: CodeScanningGetSarif,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/code-scanning/sarifs/{sarifId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: sarif_id,
        Name: SarifId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: sarifId,
        ArgumentName: sarifId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get information about a SARIF upload,
    RequestType: ,
    ResponseType: code-scanning-sarifs-status,
    MethodName: CodeScanningGetSarifAsync,
    NotAsyncMethodName: CodeScanningGetSarif,
    FileNameWithoutExtension: G.Api.EndPoints.CodeScanningGetSarif
  },
  {
    Id: ReposCodeownersErrors,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codeowners/errors?ref={ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List CODEOWNERS errors,
    RequestType: ,
    ResponseType: codeowners-errors,
    MethodName: ReposCodeownersErrorsAsync,
    NotAsyncMethodName: ReposCodeownersErrors,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCodeownersErrors
  },
  {
    Id: CodespacesListInRepositoryForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List codespaces in a repository for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesListInRepositoryForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesListInRepositoryForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesListInRepositoryForAuthenticatedUser
  },
  {
    Id: CodespacesCreateWithRepoForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Git ref (typically a branch name) for this codespace,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: location,
        Name: Location,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The requested location for a new codespace. Best efforts are made to respect this upon creation. Assigned by IP if not provided.,
        ParameterName: location,
        ArgumentName: location,
        ParameterDefaultValue: default
      },
      {
        Id: geo,
        Name: Geo,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            EuropeWest,
            SoutheastAsia,
            UsEast,
            UsWest
          ],
          EnumValues: [
            EuropeWest,
            SoutheastAsia,
            UsEast,
            UsWest
          ]
        },
        IsRequired: false,
        Summary: The geographic area for this codespace. If not specified, the value is assigned by IP. This property replaces `location`, which is being deprecated.,
        ParameterName: geo,
        ArgumentName: geo,
        ParameterDefaultValue: default
      },
      {
        Id: client_ip,
        Name: ClientIp,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: IP for location auto-detection when proxying a request,
        ParameterName: clientIp,
        ArgumentName: clientIp,
        ParameterDefaultValue: default
      },
      {
        Id: machine,
        Name: Machine,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Machine type to use for this codespace,
        ParameterName: machine,
        ArgumentName: machine,
        ParameterDefaultValue: default
      },
      {
        Id: devcontainer_path,
        Name: DevcontainerPath,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Path to devcontainer.json config to use for this codespace,
        ParameterName: devcontainerPath,
        ArgumentName: devcontainerPath,
        ParameterDefaultValue: default
      },
      {
        Id: multi_repo_permissions_opt_out,
        Name: MultiRepoPermissionsOptOut,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether to authorize requested permissions from devcontainer.json,
        ParameterName: multiRepoPermissionsOptOut,
        ArgumentName: multiRepoPermissionsOptOut,
        ParameterDefaultValue: default
      },
      {
        Id: working_directory,
        Name: WorkingDirectory,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Working directory for this codespace,
        ParameterName: workingDirectory,
        ArgumentName: workingDirectory,
        ParameterDefaultValue: default
      },
      {
        Id: idle_timeout_minutes,
        Name: IdleTimeoutMinutes,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Time in minutes before codespace stops from inactivity,
        ParameterName: idleTimeoutMinutes,
        ArgumentName: idleTimeoutMinutes,
        ParameterDefaultValue: default
      },
      {
        Id: display_name,
        Name: DisplayName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Display name for this codespace,
        ParameterName: displayName,
        ArgumentName: displayName,
        ParameterDefaultValue: default
      },
      {
        Id: retention_period_minutes,
        Name: RetentionPeriodMinutes,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).,
        ParameterName: retentionPeriodMinutes,
        ArgumentName: retentionPeriodMinutes,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a codespace in a repository,
    RequestType: ,
    ResponseType: codespace,
    MethodName: CodespacesCreateWithRepoForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesCreateWithRepoForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesCreateWithRepoForAuthenticatedUser
  },
  {
    Id: CodespacesListDevcontainersInRepositoryForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces/devcontainers?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List devcontainer configurations in a repository for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesListDevcontainersInRepositoryForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesListDevcontainersInRepositoryForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesListDevcontainersInRepositoryForAuthenticatedUser
  },
  {
    Id: CodespacesRepoMachinesForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces/machines?location={location}&client_ip={clientIp}&ref={ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: location,
        Name: Location,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: WestUs2,
        ParameterName: location,
        ArgumentName: location,
        ParameterDefaultValue: default
      },
      {
        Id: client_ip,
        Name: ClientIp,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: clientIp,
        ArgumentName: clientIp,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: main,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List available machine types for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesRepoMachinesForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesRepoMachinesForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesRepoMachinesForAuthenticatedUser
  },
  {
    Id: CodespacesPreFlightWithRepoForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces/new?ref={ref}&client_ip={clientIp}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: main,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: client_ip,
        Name: ClientIp,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: 1.2.3.4,
        ParameterName: clientIp,
        ArgumentName: clientIp,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get default attributes for a codespace,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesPreFlightWithRepoForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesPreFlightWithRepoForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesPreFlightWithRepoForAuthenticatedUser
  },
  {
    Id: CodespacesCheckPermissionsForDevcontainer,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces/permissions_check?ref={ref}&devcontainer_path={devcontainerPath}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: master,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: devcontainer_path,
        Name: DevcontainerPath,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
<br/>Example: .devcontainer/example/devcontainer.json,
        ParameterName: devcontainerPath,
        ArgumentName: devcontainerPath,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if permissions defined by a devcontainer have been accepted by the authenticated user,
    RequestType: ,
    ResponseType: codespaces-permissions-check-for-devcontainer,
    MethodName: CodespacesCheckPermissionsForDevcontainerAsync,
    NotAsyncMethodName: CodespacesCheckPermissionsForDevcontainer,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesCheckPermissionsForDevcontainer
  },
  {
    Id: CodespacesListRepoSecrets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces/secrets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository secrets,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesListRepoSecretsAsync,
    NotAsyncMethodName: CodespacesListRepoSecrets,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesListRepoSecrets
  },
  {
    Id: CodespacesGetRepoPublicKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces/secrets/public-key",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository public key,
    RequestType: ,
    ResponseType: codespaces-public-key,
    MethodName: CodespacesGetRepoPublicKeyAsync,
    NotAsyncMethodName: CodespacesGetRepoPublicKey,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesGetRepoPublicKey
  },
  {
    Id: CodespacesGetRepoSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository secret,
    RequestType: ,
    ResponseType: repo-codespaces-secret,
    MethodName: CodespacesGetRepoSecretAsync,
    NotAsyncMethodName: CodespacesGetRepoSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesGetRepoSecret
  },
  {
    Id: CodespacesCreateOrUpdateRepoSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: encrypted_value,
        Name: EncryptedValue,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/rest/codespaces/repository-secrets#get-a-repository-public-key) endpoint.,
        ParameterName: encryptedValue,
        ArgumentName: encryptedValue,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: ID of the key you used to encrypt the secret.,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update a repository secret,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: CodespacesCreateOrUpdateRepoSecretAsync,
    NotAsyncMethodName: CodespacesCreateOrUpdateRepoSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesCreateOrUpdateRepoSecret
  },
  {
    Id: CodespacesDeleteRepoSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/codespaces/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a repository secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesDeleteRepoSecretAsync,
    NotAsyncMethodName: CodespacesDeleteRepoSecret,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesDeleteRepoSecret
  },
  {
    Id: ReposListCollaborators,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/collaborators?affiliation={affiliation}&permission={permission}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: affiliation,
        Name: Affiliation,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Outside,
            Direct,
            All
          ],
          EnumValues: [
            outside,
            direct,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Affiliation.All,
        Summary:
<br/>Default Value: all,
        ParameterName: affiliation,
        ArgumentName: affiliation,
        ParameterDefaultValue: Affiliation.All
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Pull,
            Triage,
            Push,
            Maintain,
            Admin
          ],
          EnumValues: [
            pull,
            triage,
            push,
            maintain,
            admin
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository collaborators,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListCollaboratorsAsync,
    NotAsyncMethodName: ReposListCollaborators,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListCollaborators
  },
  {
    Id: ReposCheckCollaborator,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/collaborators/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a user is a repository collaborator,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposCheckCollaboratorAsync,
    NotAsyncMethodName: ReposCheckCollaborator,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCheckCollaborator
  },
  {
    Id: ReposAddCollaborator,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/collaborators/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "push",
        Summary:
The permission to grant the collaborator. **Only valid on organization-owned repositories.** We accept the following permissions to be set: `pull`, `triage`, `push`, `maintain`, `admin` and you can also specify a custom repository role name, if the owning organization has defined any.
<br/>Default Value: push,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: "push"
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add a repository collaborator,
    RequestType: ,
    ResponseType: repository-invitation,
    MethodName: ReposAddCollaboratorAsync,
    NotAsyncMethodName: ReposAddCollaborator,
    FileNameWithoutExtension: G.Api.EndPoints.ReposAddCollaborator
  },
  {
    Id: ReposRemoveCollaborator,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/collaborators/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a repository collaborator,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposRemoveCollaboratorAsync,
    NotAsyncMethodName: ReposRemoveCollaborator,
    FileNameWithoutExtension: G.Api.EndPoints.ReposRemoveCollaborator
  },
  {
    Id: ReposGetCollaboratorPermissionLevel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/collaborators/{username}/permission",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get repository permissions for a user,
    RequestType: ,
    ResponseType: repository-collaborator-permission,
    MethodName: ReposGetCollaboratorPermissionLevelAsync,
    NotAsyncMethodName: ReposGetCollaboratorPermissionLevel,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCollaboratorPermissionLevel
  },
  {
    Id: ReposListCommitCommentsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/comments?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List commit comments for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListCommitCommentsForRepoAsync,
    NotAsyncMethodName: ReposListCommitCommentsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListCommitCommentsForRepo
  },
  {
    Id: ReposGetCommitComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a commit comment,
    RequestType: ,
    ResponseType: commit-comment,
    MethodName: ReposGetCommitCommentAsync,
    NotAsyncMethodName: ReposGetCommitComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCommitComment
  },
  {
    Id: ReposUpdateCommitComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The contents of the comment,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a commit comment,
    RequestType: ,
    ResponseType: commit-comment,
    MethodName: ReposUpdateCommitCommentAsync,
    NotAsyncMethodName: ReposUpdateCommitComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateCommitComment
  },
  {
    Id: ReposDeleteCommitComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a commit comment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteCommitCommentAsync,
    NotAsyncMethodName: ReposDeleteCommitComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteCommitComment
  },
  {
    Id: ReactionsListForCommitComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/comments/{commentId}/reactions?content={content}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reactions for a commit comment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsListForCommitCommentAsync,
    NotAsyncMethodName: ReactionsListForCommitComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsListForCommitComment
  },
  {
    Id: ReactionsCreateForCommitComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/comments/{commentId}/reactions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: true,
        Summary: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the commit comment.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create reaction for a commit comment,
    RequestType: ,
    ResponseType: reaction,
    MethodName: ReactionsCreateForCommitCommentAsync,
    NotAsyncMethodName: ReactionsCreateForCommitComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsCreateForCommitComment
  },
  {
    Id: ReactionsDeleteForCommitComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/comments/{commentId}/reactions/{reactionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: reaction_id,
        Name: ReactionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reactionId,
        ArgumentName: reactionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a commit comment reaction,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsDeleteForCommitCommentAsync,
    NotAsyncMethodName: ReactionsDeleteForCommitComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsDeleteForCommitComment
  },
  {
    Id: ReposListCommits,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits?sha={sha}&path={path}&author={author}&committer={committer}&since={since}&until={until}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: default
      },
      {
        Id: path,
        Name: Path,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: path,
        ArgumentName: path,
        ParameterDefaultValue: default
      },
      {
        Id: author,
        Name: Author,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: author,
        ArgumentName: author,
        ParameterDefaultValue: default
      },
      {
        Id: committer,
        Name: Committer,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: committer,
        ArgumentName: committer,
        ParameterDefaultValue: default
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: until,
        Name: Until,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: until,
        ArgumentName: until,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List commits,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListCommitsAsync,
    NotAsyncMethodName: ReposListCommits,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListCommits
  },
  {
    Id: ReposListBranchesForHeadCommit,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits/{commitSha}/branches-where-head",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: commit_sha,
        Name: CommitSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commitSha,
        ArgumentName: commitSha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List branches for HEAD commit,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListBranchesForHeadCommitAsync,
    NotAsyncMethodName: ReposListBranchesForHeadCommit,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListBranchesForHeadCommit
  },
  {
    Id: ReposListCommentsForCommit,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits/{commitSha}/comments?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: commit_sha,
        Name: CommitSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commitSha,
        ArgumentName: commitSha,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List commit comments,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListCommentsForCommitAsync,
    NotAsyncMethodName: ReposListCommentsForCommit,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListCommentsForCommit
  },
  {
    Id: ReposCreateCommitComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits/{commitSha}/comments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: commit_sha,
        Name: CommitSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commitSha,
        ArgumentName: commitSha,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The contents of the comment.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: path,
        Name: Path,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Relative path of the file to comment on.,
        ParameterName: path,
        ArgumentName: path,
        ParameterDefaultValue: default
      },
      {
        Id: position,
        Name: Position,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Line index in the diff to comment on.,
        ParameterName: position,
        ArgumentName: position,
        ParameterDefaultValue: default
      },
      {
        Id: line,
        Name: Line,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: **Deprecated**. Use **position** parameter instead. Line number in the file to comment on.,
        ParameterName: line,
        ArgumentName: line,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a commit comment,
    RequestType: ,
    ResponseType: commit-comment,
    MethodName: ReposCreateCommitCommentAsync,
    NotAsyncMethodName: ReposCreateCommitComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateCommitComment
  },
  {
    Id: ReposListPullRequestsAssociatedWithCommit,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits/{commitSha}/pulls?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: commit_sha,
        Name: CommitSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commitSha,
        ArgumentName: commitSha,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List pull requests associated with a commit,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListPullRequestsAssociatedWithCommitAsync,
    NotAsyncMethodName: ReposListPullRequestsAssociatedWithCommit,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListPullRequestsAssociatedWithCommit
  },
  {
    Id: ReposGetCommit,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits/{ref}?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a commit,
    RequestType: ,
    ResponseType: commit,
    MethodName: ReposGetCommitAsync,
    NotAsyncMethodName: ReposGetCommit,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCommit
  },
  {
    Id: ChecksListForRef,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits/{ref}/check-runs?check_name={checkName}&status={status}&filter={filter}&per_page={perPage}&page={page}&app_id={appId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: check_name,
        Name: CheckName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: checkName,
        ArgumentName: checkName,
        ParameterDefaultValue: default
      },
      {
        Id: status,
        Name: Status,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Queued,
            InProgress,
            Completed
          ],
          EnumValues: [
            queued,
            in_progress,
            completed
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: status,
        ArgumentName: status,
        ParameterDefaultValue: default
      },
      {
        Id: filter,
        Name: Filter,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Latest,
            All
          ],
          EnumValues: [
            latest,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Filter.Latest,
        Summary:
<br/>Default Value: latest,
        ParameterName: filter,
        ArgumentName: filter,
        ParameterDefaultValue: Filter.Latest
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: app_id,
        Name: AppId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: appId,
        ArgumentName: appId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List check runs for a Git reference,
    RequestType: ,
    ResponseType: ,
    MethodName: ChecksListForRefAsync,
    NotAsyncMethodName: ChecksListForRef,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksListForRef
  },
  {
    Id: ChecksListSuitesForRef,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits/{ref}/check-suites?app_id={appId}&check_name={checkName}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: app_id,
        Name: AppId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: appId,
        ArgumentName: appId,
        ParameterDefaultValue: default
      },
      {
        Id: check_name,
        Name: CheckName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: checkName,
        ArgumentName: checkName,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List check suites for a Git reference,
    RequestType: ,
    ResponseType: ,
    MethodName: ChecksListSuitesForRefAsync,
    NotAsyncMethodName: ChecksListSuitesForRef,
    FileNameWithoutExtension: G.Api.EndPoints.ChecksListSuitesForRef
  },
  {
    Id: ReposGetCombinedStatusForRef,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits/{ref}/status?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the combined status for a specific reference,
    RequestType: ,
    ResponseType: combined-commit-status,
    MethodName: ReposGetCombinedStatusForRefAsync,
    NotAsyncMethodName: ReposGetCombinedStatusForRef,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCombinedStatusForRef
  },
  {
    Id: ReposListCommitStatusesForRef,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/commits/{ref}/statuses?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List commit statuses for a reference,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListCommitStatusesForRefAsync,
    NotAsyncMethodName: ReposListCommitStatusesForRef,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListCommitStatusesForRef
  },
  {
    Id: ReposGetCommunityProfileMetrics,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/community/profile",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get community profile metrics,
    RequestType: ,
    ResponseType: community-profile,
    MethodName: ReposGetCommunityProfileMetricsAsync,
    NotAsyncMethodName: ReposGetCommunityProfileMetrics,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCommunityProfileMetrics
  },
  {
    Id: ReposCompareCommits,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/compare/{basehead}?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: basehead,
        Name: Basehead,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: basehead,
        ArgumentName: basehead,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Compare two commits,
    RequestType: ,
    ResponseType: commit-comparison,
    MethodName: ReposCompareCommitsAsync,
    NotAsyncMethodName: ReposCompareCommits,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCompareCommits
  },
  {
    Id: ReposGetContent,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/contents/{path}?ref={ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: path,
        Name: Path,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: path,
        ArgumentName: path,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get repository content,
    RequestType: ,
    ResponseType: content-tree,
    MethodName: ReposGetContentAsync,
    NotAsyncMethodName: ReposGetContent,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetContent
  },
  {
    Id: ReposCreateOrUpdateFileContents,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/contents/{path}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: path,
        Name: Path,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: path,
        ArgumentName: path,
        ParameterDefaultValue: default
      },
      {
        Id: message,
        Name: Message,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The commit message.,
        ParameterName: message,
        ArgumentName: message,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The new file content, using Base64 encoding.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: **Required if you are updating a file**. The blob SHA of the file being replaced.,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The branch name. Default: the repository’s default branch.,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      },
      {
        Id: committer,
        Name: Committer,
        Type: {
          CSharpType: TestCommitter?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The person that committed the file. Default: the authenticated user.,
        ParameterName: committer,
        ArgumentName: committer,
        ParameterDefaultValue: default
      },
      {
        Id: author,
        Name: Author,
        Type: {
          CSharpType: TestAuthor?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.,
        ParameterName: author,
        ArgumentName: author,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update file contents,
    RequestType: ,
    ResponseType: file-commit,
    MethodName: ReposCreateOrUpdateFileContentsAsync,
    NotAsyncMethodName: ReposCreateOrUpdateFileContents,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateOrUpdateFileContents
  },
  {
    Id: ReposDeleteFile,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/contents/{path}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: path,
        Name: Path,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: path,
        ArgumentName: path,
        ParameterDefaultValue: default
      },
      {
        Id: message,
        Name: Message,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The commit message.,
        ParameterName: message,
        ArgumentName: message,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The blob SHA of the file being deleted.,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The branch name. Default: the repository’s default branch,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      },
      {
        Id: committer,
        Name: Committer,
        Type: {
          CSharpType: TestCommitter?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: object containing information about the committer.,
        ParameterName: committer,
        ArgumentName: committer,
        ParameterDefaultValue: default
      },
      {
        Id: author,
        Name: Author,
        Type: {
          CSharpType: TestAuthor?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: object containing information about the author.,
        ParameterName: author,
        ArgumentName: author,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a file,
    RequestType: ,
    ResponseType: file-commit,
    MethodName: ReposDeleteFileAsync,
    NotAsyncMethodName: ReposDeleteFile,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteFile
  },
  {
    Id: ReposListContributors,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/contributors?anon={anon}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: anon,
        Name: Anon,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: anon,
        ArgumentName: anon,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository contributors,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListContributorsAsync,
    NotAsyncMethodName: ReposListContributors,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListContributors
  },
  {
    Id: DependabotListAlertsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependabot/alerts?state={state}&severity={severity}&ecosystem={ecosystem}&package={package}&manifest={manifest}&scope={scope}&sort={sort}&direction={direction}&page={page}&per_page={perPage}&before={before}&after={after}&first={first}&last={last}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: severity,
        Name: Severity,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: severity,
        ArgumentName: severity,
        ParameterDefaultValue: default
      },
      {
        Id: ecosystem,
        Name: Ecosystem,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ecosystem,
        ArgumentName: ecosystem,
        ParameterDefaultValue: default
      },
      {
        Id: package,
        Name: Package,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: package,
        ArgumentName: package,
        ParameterDefaultValue: default
      },
      {
        Id: manifest,
        Name: Manifest,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: manifest,
        ArgumentName: manifest,
        ParameterDefaultValue: default
      },
      {
        Id: scope,
        Name: Scope,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Development,
            Runtime
          ],
          EnumValues: [
            development,
            runtime
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: scope,
        ArgumentName: scope,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: first,
        Name: First,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: first,
        ArgumentName: first,
        ParameterDefaultValue: 30
      },
      {
        Id: last,
        Name: Last,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: last,
        ArgumentName: last,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List Dependabot alerts for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotListAlertsForRepoAsync,
    NotAsyncMethodName: DependabotListAlertsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotListAlertsForRepo
  },
  {
    Id: DependabotGetAlert,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependabot/alerts/{alertNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: alert_number,
        Name: AlertNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: The security alert number.,
        ParameterName: alertNumber,
        ArgumentName: alertNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a Dependabot alert,
    RequestType: ,
    ResponseType: dependabot-alert,
    MethodName: DependabotGetAlertAsync,
    NotAsyncMethodName: DependabotGetAlert,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotGetAlert
  },
  {
    Id: DependabotUpdateAlert,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependabot/alerts/{alertNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: alert_number,
        Name: AlertNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: The security alert number.,
        ParameterName: alertNumber,
        ArgumentName: alertNumber,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Dismissed,
            Open
          ],
          EnumValues: [
            dismissed,
            open
          ]
        },
        IsRequired: true,
        Summary:
The state of the Dependabot alert.
A `dismissed_reason` must be provided when setting the state to `dismissed`.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: dismissed_reason,
        Name: DismissedReason,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            FixStarted,
            Inaccurate,
            NoBandwidth,
            NotUsed,
            TolerableRisk
          ],
          EnumValues: [
            fix_started,
            inaccurate,
            no_bandwidth,
            not_used,
            tolerable_risk
          ]
        },
        IsRequired: false,
        Summary: **Required when `state` is `dismissed`.** A reason for dismissing the alert.,
        ParameterName: dismissedReason,
        ArgumentName: dismissedReason,
        ParameterDefaultValue: default
      },
      {
        Id: dismissed_comment,
        Name: DismissedComment,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An optional comment associated with dismissing the alert.,
        ParameterName: dismissedComment,
        ArgumentName: dismissedComment,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a Dependabot alert,
    RequestType: ,
    ResponseType: dependabot-alert,
    MethodName: DependabotUpdateAlertAsync,
    NotAsyncMethodName: DependabotUpdateAlert,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotUpdateAlert
  },
  {
    Id: DependabotListRepoSecrets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependabot/secrets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository secrets,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotListRepoSecretsAsync,
    NotAsyncMethodName: DependabotListRepoSecrets,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotListRepoSecrets
  },
  {
    Id: DependabotGetRepoPublicKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependabot/secrets/public-key",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository public key,
    RequestType: ,
    ResponseType: dependabot-public-key,
    MethodName: DependabotGetRepoPublicKeyAsync,
    NotAsyncMethodName: DependabotGetRepoPublicKey,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotGetRepoPublicKey
  },
  {
    Id: DependabotGetRepoSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependabot/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository secret,
    RequestType: ,
    ResponseType: dependabot-secret,
    MethodName: DependabotGetRepoSecretAsync,
    NotAsyncMethodName: DependabotGetRepoSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotGetRepoSecret
  },
  {
    Id: DependabotCreateOrUpdateRepoSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependabot/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: encrypted_value,
        Name: EncryptedValue,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get a repository public key](https://docs.github.com/rest/dependabot/secrets#get-a-repository-public-key) endpoint.,
        ParameterName: encryptedValue,
        ArgumentName: encryptedValue,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: ID of the key you used to encrypt the secret.,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update a repository secret,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: DependabotCreateOrUpdateRepoSecretAsync,
    NotAsyncMethodName: DependabotCreateOrUpdateRepoSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotCreateOrUpdateRepoSecret
  },
  {
    Id: DependabotDeleteRepoSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependabot/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a repository secret,
    RequestType: ,
    ResponseType: ,
    MethodName: DependabotDeleteRepoSecretAsync,
    NotAsyncMethodName: DependabotDeleteRepoSecret,
    FileNameWithoutExtension: G.Api.EndPoints.DependabotDeleteRepoSecret
  },
  {
    Id: DependencyGraphDiffRange,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependency-graph/compare/{basehead}?name={name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: basehead,
        Name: Basehead,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: basehead,
        ArgumentName: basehead,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a diff of the dependencies between commits,
    RequestType: ,
    ResponseType: dependency-graph-diff,
    MethodName: DependencyGraphDiffRangeAsync,
    NotAsyncMethodName: DependencyGraphDiffRange,
    FileNameWithoutExtension: G.Api.EndPoints.DependencyGraphDiffRange
  },
  {
    Id: DependencyGraphExportSbom,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependency-graph/sbom",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Export a software bill of materials (SBOM) for a repository.,
    RequestType: ,
    ResponseType: dependency-graph-spdx-sbom,
    MethodName: DependencyGraphExportSbomAsync,
    NotAsyncMethodName: DependencyGraphExportSbom,
    FileNameWithoutExtension: G.Api.EndPoints.DependencyGraphExportSbom
  },
  {
    Id: DependencyGraphCreateRepositorySnapshot,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dependency-graph/snapshots",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: version,
        Name: Version,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The version of the repository snapshot submission.,
        ParameterName: version,
        ArgumentName: version,
        ParameterDefaultValue: default
      },
      {
        Id: job,
        Name: Job,
        Type: {
          CSharpType: SnapshotJob,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: ,
        ParameterName: job,
        ArgumentName: job,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The commit SHA associated with this dependency snapshot. Maximum length: 40 characters.
<br/>Example: ddc951f4b1293222421f2c8df679786153acf689,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The repository branch that triggered this snapshot.
<br/>Example: refs/heads/main,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: detector,
        Name: Detector,
        Type: {
          CSharpType: SnapshotDetector,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A description of the detector used.,
        ParameterName: detector,
        ArgumentName: detector,
        ParameterDefaultValue: default
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: {
          CSharpType: Metadata?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: User-defined metadata to store domain-specific information limited to 8 keys with scalar values.,
        ParameterName: metadata,
        ArgumentName: metadata,
        ParameterDefaultValue: default
      },
      {
        Id: manifests,
        Name: Manifests,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: A collection of package manifests, which are a collection of related dependencies declared in a file or representing a logical group of dependencies.,
        ParameterName: manifests,
        ArgumentName: manifests,
        ParameterDefaultValue: default
      },
      {
        Id: scanned,
        Name: Scanned,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The time at which the snapshot was scanned.
<br/>Example: ,
        ParameterName: scanned,
        ArgumentName: scanned,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a snapshot of dependencies for a repository,
    RequestType: Snapshot,
    ResponseType: ,
    MethodName: DependencyGraphCreateRepositorySnapshotAsync,
    NotAsyncMethodName: DependencyGraphCreateRepositorySnapshot,
    FileNameWithoutExtension: G.Api.EndPoints.DependencyGraphCreateRepositorySnapshot
  },
  {
    Id: ReposListDeployments,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/deployments?sha={sha}&ref={ref}&task={task}&environment={environment}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: "none",
        Summary:
<br/>Default Value: none,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: "none"
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: "none",
        Summary:
<br/>Default Value: none,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: "none"
      },
      {
        Id: task,
        Name: Task,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: "none",
        Summary:
<br/>Default Value: none,
        ParameterName: task,
        ArgumentName: task,
        ParameterDefaultValue: "none"
      },
      {
        Id: environment,
        Name: Environment,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: "none",
        Summary:
<br/>Default Value: none,
        ParameterName: environment,
        ArgumentName: environment,
        ParameterDefaultValue: "none"
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List deployments,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListDeploymentsAsync,
    NotAsyncMethodName: ReposListDeployments,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListDeployments
  },
  {
    Id: ReposCreateDeployment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/deployments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The ref to deploy. This can be a branch, tag, or SHA.,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: task,
        Name: Task,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "deploy",
        Summary:
Specifies a task to execute (e.g., `deploy` or `deploy:migrations`).
<br/>Default Value: deploy,
        ParameterName: task,
        ArgumentName: task,
        ParameterDefaultValue: "deploy"
      },
      {
        Id: auto_merge,
        Name: AutoMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Attempts to automatically merge the default branch into the requested ref, if it's behind the default branch.
<br/>Default Value: true,
        ParameterName: autoMerge,
        ArgumentName: autoMerge,
        ParameterDefaultValue: true
      },
      {
        Id: required_contexts,
        Name: RequiredContexts,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The [status](https://docs.github.com/rest/commits/statuses) contexts to verify against commit status checks. If you omit this parameter, GitHub verifies all unique contexts before creating a deployment. To bypass checking entirely, pass an empty array. Defaults to all unique contexts.,
        ParameterName: requiredContexts,
        ArgumentName: requiredContexts,
        ParameterDefaultValue: default
      },
      {
        Id: payload,
        Name: Payload,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: ,
        ParameterName: payload,
        ArgumentName: payload,
        ParameterDefaultValue: default
      },
      {
        Id: environment,
        Name: Environment,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "production",
        Summary:
Name for the target deployment environment (e.g., `production`, `staging`, `qa`).
<br/>Default Value: production,
        ParameterName: environment,
        ArgumentName: environment,
        ParameterDefaultValue: "production"
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "",
        Summary:
Short description of the deployment.
<br/>Default Value: ,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: ""
      },
      {
        Id: transient_environment,
        Name: TransientEnvironment,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: `false`
<br/>Default Value: false,
        ParameterName: transientEnvironment,
        ArgumentName: transientEnvironment,
        ParameterDefaultValue: false
      },
      {
        Id: production_environment,
        Name: ProductionEnvironment,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specifies if the given environment is one that end-users directly interact with. Default: `true` when `environment` is `production` and `false` otherwise.,
        ParameterName: productionEnvironment,
        ArgumentName: productionEnvironment,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a deployment,
    RequestType: ,
    ResponseType: deployment,
    MethodName: ReposCreateDeploymentAsync,
    NotAsyncMethodName: ReposCreateDeployment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateDeployment
  },
  {
    Id: ReposGetDeployment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/deployments/{deploymentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: deployment_id,
        Name: DeploymentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deploymentId,
        ArgumentName: deploymentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a deployment,
    RequestType: ,
    ResponseType: deployment,
    MethodName: ReposGetDeploymentAsync,
    NotAsyncMethodName: ReposGetDeployment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetDeployment
  },
  {
    Id: ReposDeleteDeployment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/deployments/{deploymentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: deployment_id,
        Name: DeploymentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deploymentId,
        ArgumentName: deploymentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a deployment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteDeploymentAsync,
    NotAsyncMethodName: ReposDeleteDeployment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteDeployment
  },
  {
    Id: ReposListDeploymentStatuses,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/deployments/{deploymentId}/statuses?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: deployment_id,
        Name: DeploymentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deploymentId,
        ArgumentName: deploymentId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List deployment statuses,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListDeploymentStatusesAsync,
    NotAsyncMethodName: ReposListDeploymentStatuses,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListDeploymentStatuses
  },
  {
    Id: ReposCreateDeploymentStatus,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/deployments/{deploymentId}/statuses",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: deployment_id,
        Name: DeploymentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deploymentId,
        ArgumentName: deploymentId,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Error,
            Failure,
            Inactive,
            InProgress,
            Queued,
            Pending,
            Success
          ],
          EnumValues: [
            error,
            failure,
            inactive,
            in_progress,
            queued,
            pending,
            success
          ]
        },
        IsRequired: true,
        Summary: The state of the status. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: target_url,
        Name: TargetUrl,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "",
        Summary:
The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.
<br/>Default Value: ,
        ParameterName: targetUrl,
        ArgumentName: targetUrl,
        ParameterDefaultValue: ""
      },
      {
        Id: log_url,
        Name: LogUrl,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "",
        Summary:
The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `""`
<br/>Default Value: ,
        ParameterName: logUrl,
        ArgumentName: logUrl,
        ParameterDefaultValue: ""
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "",
        Summary:
A short description of the status. The maximum description length is 140 characters.
<br/>Default Value: ,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: ""
      },
      {
        Id: environment,
        Name: Environment,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. If not defined, the environment of the previous status on the deployment will be used, if it exists. Otherwise, the environment of the deployment will be used.,
        ParameterName: environment,
        ArgumentName: environment,
        ParameterDefaultValue: default
      },
      {
        Id: environment_url,
        Name: EnvironmentUrl,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "",
        Summary:
Sets the URL for accessing your environment. Default: `""`
<br/>Default Value: ,
        ParameterName: environmentUrl,
        ArgumentName: environmentUrl,
        ParameterDefaultValue: ""
      },
      {
        Id: auto_inactive,
        Name: AutoInactive,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`,
        ParameterName: autoInactive,
        ArgumentName: autoInactive,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a deployment status,
    RequestType: ,
    ResponseType: deployment-status,
    MethodName: ReposCreateDeploymentStatusAsync,
    NotAsyncMethodName: ReposCreateDeploymentStatus,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateDeploymentStatus
  },
  {
    Id: ReposGetDeploymentStatus,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/deployments/{deploymentId}/statuses/{statusId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: deployment_id,
        Name: DeploymentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deploymentId,
        ArgumentName: deploymentId,
        ParameterDefaultValue: default
      },
      {
        Id: status_id,
        Name: StatusId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: statusId,
        ArgumentName: statusId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a deployment status,
    RequestType: ,
    ResponseType: deployment-status,
    MethodName: ReposGetDeploymentStatusAsync,
    NotAsyncMethodName: ReposGetDeploymentStatus,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetDeploymentStatus
  },
  {
    Id: ReposCreateDispatchEvent,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/dispatches",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: event_type,
        Name: EventType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A custom webhook event name. Must be 100 characters or fewer.,
        ParameterName: eventType,
        ArgumentName: eventType,
        ParameterDefaultValue: default
      },
      {
        Id: client_payload,
        Name: ClientPayload,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: JSON payload with extra information about the webhook event that your action or workflow may use. The maximum number of top-level properties is 10.,
        ParameterName: clientPayload,
        ArgumentName: clientPayload,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a repository dispatch event,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposCreateDispatchEventAsync,
    NotAsyncMethodName: ReposCreateDispatchEvent,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateDispatchEvent
  },
  {
    Id: ReposGetAllEnvironments,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List environments,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetAllEnvironmentsAsync,
    NotAsyncMethodName: ReposGetAllEnvironments,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetAllEnvironments
  },
  {
    Id: ReposGetEnvironment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an environment,
    RequestType: ,
    ResponseType: environment,
    MethodName: ReposGetEnvironmentAsync,
    NotAsyncMethodName: ReposGetEnvironment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetEnvironment
  },
  {
    Id: ReposCreateOrUpdateEnvironment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: wait_timer,
        Name: WaitTimer,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).
<br/>Example: 30,
        ParameterName: waitTimer,
        ArgumentName: waitTimer,
        ParameterDefaultValue: default
      },
      {
        Id: prevent_self_review,
        Name: PreventSelfReview,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Whether or not a user who created the job is prevented from approving their own job.
<br/>Example: false,
        ParameterName: preventSelfReview,
        ArgumentName: preventSelfReview,
        ParameterDefaultValue: default
      },
      {
        Id: reviewers,
        Name: Reviewers,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<TestReviewers?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The people or teams that may review jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.,
        ParameterName: reviewers,
        ArgumentName: reviewers,
        ParameterDefaultValue: default
      },
      {
        Id: deployment_branch_policy,
        Name: DeploymentBranchPolicy,
        Type: {
          CSharpType: DeploymentBranchPolicySettings?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            protected_branches,
            custom_branch_policies
          ],
          EnumValues: null
        },
        IsRequired: false,
        Summary: The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.,
        ParameterName: deploymentBranchPolicy,
        ArgumentName: deploymentBranchPolicy,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update an environment,
    RequestType: ,
    ResponseType: environment,
    MethodName: ReposCreateOrUpdateEnvironmentAsync,
    NotAsyncMethodName: ReposCreateOrUpdateEnvironment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateOrUpdateEnvironment
  },
  {
    Id: ReposDeleteAnEnvironment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an environment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteAnEnvironmentAsync,
    NotAsyncMethodName: ReposDeleteAnEnvironment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteAnEnvironment
  },
  {
    Id: ReposListDeploymentBranchPolicies,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment-branch-policies?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List deployment branch policies,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListDeploymentBranchPoliciesAsync,
    NotAsyncMethodName: ReposListDeploymentBranchPolicies,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListDeploymentBranchPolicies
  },
  {
    Id: ReposCreateDeploymentBranchPolicy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment-branch-policies",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The name pattern that branches or tags must match in order to deploy to the environment.

Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`.
For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).
<br/>Example: release/*,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: type,
        Name: Type,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Branch,
            Tag
          ],
          EnumValues: [
            branch,
            tag
          ]
        },
        IsRequired: false,
        Summary:
Whether this rule targets a branch or tag
<br/>Example: branch,
        ParameterName: type,
        ArgumentName: type,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a deployment branch policy,
    RequestType: DeploymentBranchPolicyNamePatternWithType,
    ResponseType: deployment-branch-policy,
    MethodName: ReposCreateDeploymentBranchPolicyAsync,
    NotAsyncMethodName: ReposCreateDeploymentBranchPolicy,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateDeploymentBranchPolicy
  },
  {
    Id: ReposGetDeploymentBranchPolicy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment-branch-policies/{branchPolicyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: branch_policy_id,
        Name: BranchPolicyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branchPolicyId,
        ArgumentName: branchPolicyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a deployment branch policy,
    RequestType: ,
    ResponseType: deployment-branch-policy,
    MethodName: ReposGetDeploymentBranchPolicyAsync,
    NotAsyncMethodName: ReposGetDeploymentBranchPolicy,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetDeploymentBranchPolicy
  },
  {
    Id: ReposUpdateDeploymentBranchPolicy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment-branch-policies/{branchPolicyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: branch_policy_id,
        Name: BranchPolicyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branchPolicyId,
        ArgumentName: branchPolicyId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The name pattern that branches must match in order to deploy to the environment.

Wildcard characters will not match `/`. For example, to match branches that begin with `release/` and contain an additional single slash, use `release/*/*`.
For more information about pattern matching syntax, see the [Ruby File.fnmatch documentation](https://ruby-doc.org/core-2.5.1/File.html#method-c-fnmatch).
<br/>Example: release/*,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Update a deployment branch policy,
    RequestType: DeploymentBranchPolicyNamePattern,
    ResponseType: deployment-branch-policy,
    MethodName: ReposUpdateDeploymentBranchPolicyAsync,
    NotAsyncMethodName: ReposUpdateDeploymentBranchPolicy,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateDeploymentBranchPolicy
  },
  {
    Id: ReposDeleteDeploymentBranchPolicy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment-branch-policies/{branchPolicyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: branch_policy_id,
        Name: BranchPolicyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branchPolicyId,
        ArgumentName: branchPolicyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a deployment branch policy,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteDeploymentBranchPolicyAsync,
    NotAsyncMethodName: ReposDeleteDeploymentBranchPolicy,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteDeploymentBranchPolicy
  },
  {
    Id: ReposGetAllDeploymentProtectionRules,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment_protection_rules",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all deployment protection rules for an environment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetAllDeploymentProtectionRulesAsync,
    NotAsyncMethodName: ReposGetAllDeploymentProtectionRules,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetAllDeploymentProtectionRules
  },
  {
    Id: ReposCreateDeploymentProtectionRule,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment_protection_rules",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: integration_id,
        Name: IntegrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The ID of the custom app that will be enabled on the environment.,
        ParameterName: integrationId,
        ArgumentName: integrationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a custom deployment protection rule on an environment,
    RequestType: ,
    ResponseType: deployment-protection-rule,
    MethodName: ReposCreateDeploymentProtectionRuleAsync,
    NotAsyncMethodName: ReposCreateDeploymentProtectionRule,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateDeploymentProtectionRule
  },
  {
    Id: ReposListCustomDeploymentRuleIntegrations,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment_protection_rules/apps?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List custom deployment rule integrations available for an environment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListCustomDeploymentRuleIntegrationsAsync,
    NotAsyncMethodName: ReposListCustomDeploymentRuleIntegrations,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListCustomDeploymentRuleIntegrations
  },
  {
    Id: ReposGetCustomDeploymentProtectionRule,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment_protection_rules/{protectionRuleId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: protection_rule_id,
        Name: ProtectionRuleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: protectionRuleId,
        ArgumentName: protectionRuleId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a custom deployment protection rule,
    RequestType: ,
    ResponseType: deployment-protection-rule,
    MethodName: ReposGetCustomDeploymentProtectionRuleAsync,
    NotAsyncMethodName: ReposGetCustomDeploymentProtectionRule,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCustomDeploymentProtectionRule
  },
  {
    Id: ReposDisableDeploymentProtectionRule,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/deployment_protection_rules/{protectionRuleId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: protection_rule_id,
        Name: ProtectionRuleId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: protectionRuleId,
        ArgumentName: protectionRuleId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Disable a custom protection rule for an environment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDisableDeploymentProtectionRuleAsync,
    NotAsyncMethodName: ReposDisableDeploymentProtectionRule,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDisableDeploymentProtectionRule
  },
  {
    Id: ActionsListEnvironmentSecrets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/secrets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List environment secrets,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListEnvironmentSecretsAsync,
    NotAsyncMethodName: ActionsListEnvironmentSecrets,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListEnvironmentSecrets
  },
  {
    Id: ActionsGetEnvironmentPublicKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/secrets/public-key",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an environment public key,
    RequestType: ,
    ResponseType: actions-public-key,
    MethodName: ActionsGetEnvironmentPublicKeyAsync,
    NotAsyncMethodName: ActionsGetEnvironmentPublicKey,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetEnvironmentPublicKey
  },
  {
    Id: ActionsGetEnvironmentSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an environment secret,
    RequestType: ,
    ResponseType: actions-secret,
    MethodName: ActionsGetEnvironmentSecretAsync,
    NotAsyncMethodName: ActionsGetEnvironmentSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetEnvironmentSecret
  },
  {
    Id: ActionsCreateOrUpdateEnvironmentSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: encrypted_value,
        Name: EncryptedValue,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an environment public key](https://docs.github.com/rest/actions/secrets#get-an-environment-public-key) endpoint.,
        ParameterName: encryptedValue,
        ArgumentName: encryptedValue,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: ID of the key you used to encrypt the secret.,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update an environment secret,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsCreateOrUpdateEnvironmentSecretAsync,
    NotAsyncMethodName: ActionsCreateOrUpdateEnvironmentSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateOrUpdateEnvironmentSecret
  },
  {
    Id: ActionsDeleteEnvironmentSecret,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an environment secret,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteEnvironmentSecretAsync,
    NotAsyncMethodName: ActionsDeleteEnvironmentSecret,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteEnvironmentSecret
  },
  {
    Id: ActionsListEnvironmentVariables,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/variables?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 10,
        Summary:
<br/>Default Value: 10,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 10
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List environment variables,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsListEnvironmentVariablesAsync,
    NotAsyncMethodName: ActionsListEnvironmentVariables,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsListEnvironmentVariables
  },
  {
    Id: ActionsCreateEnvironmentVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/variables",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the variable.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: value,
        Name: Value,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The value of the variable.,
        ParameterName: value,
        ArgumentName: value,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an environment variable,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: ActionsCreateEnvironmentVariableAsync,
    NotAsyncMethodName: ActionsCreateEnvironmentVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsCreateEnvironmentVariable
  },
  {
    Id: ActionsGetEnvironmentVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/variables/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an environment variable,
    RequestType: ,
    ResponseType: actions-variable,
    MethodName: ActionsGetEnvironmentVariableAsync,
    NotAsyncMethodName: ActionsGetEnvironmentVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsGetEnvironmentVariable
  },
  {
    Id: ActionsUpdateEnvironmentVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/variables/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the variable.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: value,
        Name: Value,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The value of the variable.,
        ParameterName: value,
        ArgumentName: value,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an environment variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsUpdateEnvironmentVariableAsync,
    NotAsyncMethodName: ActionsUpdateEnvironmentVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsUpdateEnvironmentVariable
  },
  {
    Id: ActionsDeleteEnvironmentVariable,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/environments/{environmentName}/variables/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: environment_name,
        Name: EnvironmentName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: environmentName,
        ArgumentName: environmentName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an environment variable,
    RequestType: ,
    ResponseType: ,
    MethodName: ActionsDeleteEnvironmentVariableAsync,
    NotAsyncMethodName: ActionsDeleteEnvironmentVariable,
    FileNameWithoutExtension: G.Api.EndPoints.ActionsDeleteEnvironmentVariable
  },
  {
    Id: ActivityListRepoEvents,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/events?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository events,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListRepoEventsAsync,
    NotAsyncMethodName: ActivityListRepoEvents,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListRepoEvents
  },
  {
    Id: ReposListForks,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/forks?sort={sort}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Newest,
            Oldest,
            Stargazers,
            Watchers
          ],
          EnumValues: [
            newest,
            oldest,
            stargazers,
            watchers
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Newest,
        Summary:
<br/>Default Value: newest,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Newest
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List forks,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListForksAsync,
    NotAsyncMethodName: ReposListForks,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListForks
  },
  {
    Id: ReposCreateFork,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/forks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: organization,
        Name: Organization,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Optional parameter to specify the organization name if forking into an organization.,
        ParameterName: organization,
        ArgumentName: organization,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: When forking from an existing repository, a new name for the fork.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: default_branch_only,
        Name: DefaultBranchOnly,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: When forking from an existing repository, fork with only the default branch.,
        ParameterName: defaultBranchOnly,
        ArgumentName: defaultBranchOnly,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a fork,
    RequestType: ,
    ResponseType: full-repository,
    MethodName: ReposCreateForkAsync,
    NotAsyncMethodName: ReposCreateFork,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateFork
  },
  {
    Id: GitCreateBlob,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/blobs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The new blob's content.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: encoding,
        Name: Encoding,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "utf-8",
        Summary:
The encoding used for `content`. Currently, `"utf-8"` and `"base64"` are supported.
<br/>Default Value: utf-8,
        ParameterName: encoding,
        ArgumentName: encoding,
        ParameterDefaultValue: "utf-8"
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a blob,
    RequestType: ,
    ResponseType: short-blob,
    MethodName: GitCreateBlobAsync,
    NotAsyncMethodName: GitCreateBlob,
    FileNameWithoutExtension: G.Api.EndPoints.GitCreateBlob
  },
  {
    Id: GitGetBlob,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/blobs/{fileSha}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: file_sha,
        Name: FileSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: fileSha,
        ArgumentName: fileSha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a blob,
    RequestType: ,
    ResponseType: blob,
    MethodName: GitGetBlobAsync,
    NotAsyncMethodName: GitGetBlob,
    FileNameWithoutExtension: G.Api.EndPoints.GitGetBlob
  },
  {
    Id: GitCreateCommit,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/commits",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: message,
        Name: Message,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The commit message,
        ParameterName: message,
        ArgumentName: message,
        ParameterDefaultValue: default
      },
      {
        Id: tree,
        Name: Tree,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The SHA of the tree object this commit points to,
        ParameterName: tree,
        ArgumentName: tree,
        ParameterDefaultValue: default
      },
      {
        Id: parents,
        Name: Parents,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided; for a merge commit, an array of more than one should be provided.,
        ParameterName: parents,
        ArgumentName: parents,
        ParameterDefaultValue: default
      },
      {
        Id: author,
        Name: Author,
        Type: {
          CSharpType: TestAuthor?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Information about the author of the commit. By default, the `author` will be the authenticated user and the current date. See the `author` and `committer` object below for details.,
        ParameterName: author,
        ArgumentName: author,
        ParameterDefaultValue: default
      },
      {
        Id: committer,
        Name: Committer,
        Type: {
          CSharpType: TestCommitter?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Information about the person who is making the commit. By default, `committer` will use the information set in `author`. See the `author` and `committer` object below for details.,
        ParameterName: committer,
        ArgumentName: committer,
        ParameterDefaultValue: default
      },
      {
        Id: signature,
        Name: Signature,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The [PGP signature](https://en.wikipedia.org/wiki/Pretty_Good_Privacy) of the commit. GitHub adds the signature to the `gpgsig` header of the created commit. For a commit signature to be verifiable by Git or GitHub, it must be an ASCII-armored detached PGP signature over the string commit as it would be written to the object database. To pass a `signature` parameter, you need to first manually create a valid PGP signature, which can be complicated. You may find it easier to [use the command line](https://git-scm.com/book/id/v2/Git-Tools-Signing-Your-Work) to create signed commits.,
        ParameterName: signature,
        ArgumentName: signature,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a commit,
    RequestType: ,
    ResponseType: git-commit,
    MethodName: GitCreateCommitAsync,
    NotAsyncMethodName: GitCreateCommit,
    FileNameWithoutExtension: G.Api.EndPoints.GitCreateCommit
  },
  {
    Id: GitGetCommit,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/commits/{commitSha}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: commit_sha,
        Name: CommitSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commitSha,
        ArgumentName: commitSha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a commit object,
    RequestType: ,
    ResponseType: git-commit,
    MethodName: GitGetCommitAsync,
    NotAsyncMethodName: GitGetCommit,
    FileNameWithoutExtension: G.Api.EndPoints.GitGetCommit
  },
  {
    Id: GitListMatchingRefs,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/matching-refs/{ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List matching references,
    RequestType: ,
    ResponseType: ,
    MethodName: GitListMatchingRefsAsync,
    NotAsyncMethodName: GitListMatchingRefs,
    FileNameWithoutExtension: G.Api.EndPoints.GitListMatchingRefs
  },
  {
    Id: GitGetRef,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/ref/{ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a reference,
    RequestType: ,
    ResponseType: git-ref,
    MethodName: GitGetRefAsync,
    NotAsyncMethodName: GitGetRef,
    FileNameWithoutExtension: G.Api.EndPoints.GitGetRef
  },
  {
    Id: GitCreateRef,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/refs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The SHA1 value for this reference.,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a reference,
    RequestType: ,
    ResponseType: git-ref,
    MethodName: GitCreateRefAsync,
    NotAsyncMethodName: GitCreateRef,
    FileNameWithoutExtension: G.Api.EndPoints.GitCreateRef
  },
  {
    Id: GitUpdateRef,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/refs/{ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The SHA1 value to set this reference to,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: default
      },
      {
        Id: force,
        Name: Force,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Indicates whether to force the update or to make sure the update is a fast-forward update. Leaving this out or setting it to `false` will make sure you're not overwriting work.
<br/>Default Value: false,
        ParameterName: force,
        ArgumentName: force,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a reference,
    RequestType: ,
    ResponseType: git-ref,
    MethodName: GitUpdateRefAsync,
    NotAsyncMethodName: GitUpdateRef,
    FileNameWithoutExtension: G.Api.EndPoints.GitUpdateRef
  },
  {
    Id: GitDeleteRef,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/refs/{ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a reference,
    RequestType: ,
    ResponseType: ,
    MethodName: GitDeleteRefAsync,
    NotAsyncMethodName: GitDeleteRef,
    FileNameWithoutExtension: G.Api.EndPoints.GitDeleteRef
  },
  {
    Id: GitCreateTag,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/tags",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tag,
        Name: Tag,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The tag's name. This is typically a version (e.g., "v0.0.1").,
        ParameterName: tag,
        ArgumentName: tag,
        ParameterDefaultValue: default
      },
      {
        Id: message,
        Name: Message,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The tag message.,
        ParameterName: message,
        ArgumentName: message,
        ParameterDefaultValue: default
      },
      {
        Id: object,
        Name: Object,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The SHA of the git object this is tagging.,
        ParameterName: object,
        ArgumentName: object,
        ParameterDefaultValue: default
      },
      {
        Id: type,
        Name: Type,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Commit,
            Tree,
            Blob
          ],
          EnumValues: [
            commit,
            tree,
            blob
          ]
        },
        IsRequired: true,
        Summary: The type of the object we're tagging. Normally this is a `commit` but it can also be a `tree` or a `blob`.,
        ParameterName: type,
        ArgumentName: type,
        ParameterDefaultValue: default
      },
      {
        Id: tagger,
        Name: Tagger,
        Type: {
          CSharpType: TestTagger?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An object with information about the individual creating the tag.,
        ParameterName: tagger,
        ArgumentName: tagger,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a tag object,
    RequestType: ,
    ResponseType: git-tag,
    MethodName: GitCreateTagAsync,
    NotAsyncMethodName: GitCreateTag,
    FileNameWithoutExtension: G.Api.EndPoints.GitCreateTag
  },
  {
    Id: GitGetTag,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/tags/{tagSha}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tag_sha,
        Name: TagSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: tagSha,
        ArgumentName: tagSha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a tag,
    RequestType: ,
    ResponseType: git-tag,
    MethodName: GitGetTagAsync,
    NotAsyncMethodName: GitGetTag,
    FileNameWithoutExtension: G.Api.EndPoints.GitGetTag
  },
  {
    Id: GitCreateTree,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/trees",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tree,
        Name: Tree,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<TestTree>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: Objects (of `path`, `mode`, `type`, and `sha`) specifying a tree structure.,
        ParameterName: tree,
        ArgumentName: tree,
        ParameterDefaultValue: default
      },
      {
        Id: base_tree,
        Name: BaseTree,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The SHA1 of an existing Git tree object which will be used as the base for the new tree. If provided, a new Git tree object will be created from entries in the Git tree object pointed to by `base_tree` and entries defined in the `tree` parameter. Entries defined in the `tree` parameter will overwrite items from `base_tree` with the same `path`. If you're creating new changes on a branch, then normally you'd set `base_tree` to the SHA1 of the Git tree object of the current latest commit on the branch you're working on.
If not provided, GitHub will create a new Git tree object from only the entries defined in the `tree` parameter. If you create a new commit pointing to such a tree, then all files which were a part of the parent commit's tree and were not defined in the `tree` parameter will be listed as deleted by the new commit.
,
        ParameterName: baseTree,
        ArgumentName: baseTree,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a tree,
    RequestType: ,
    ResponseType: git-tree,
    MethodName: GitCreateTreeAsync,
    NotAsyncMethodName: GitCreateTree,
    FileNameWithoutExtension: G.Api.EndPoints.GitCreateTree
  },
  {
    Id: GitGetTree,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/git/trees/{treeSha}?recursive={recursive}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tree_sha,
        Name: TreeSha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: treeSha,
        ArgumentName: treeSha,
        ParameterDefaultValue: default
      },
      {
        Id: recursive,
        Name: Recursive,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: recursive,
        ArgumentName: recursive,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a tree,
    RequestType: ,
    ResponseType: git-tree,
    MethodName: GitGetTreeAsync,
    NotAsyncMethodName: GitGetTree,
    FileNameWithoutExtension: G.Api.EndPoints.GitGetTree
  },
  {
    Id: ReposListWebhooks,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository webhooks,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListWebhooksAsync,
    NotAsyncMethodName: ReposListWebhooks,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListWebhooks
  },
  {
    Id: ReposCreateWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Use `web` to create a webhook. Default: `web`. This parameter only accepts the value `web`.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: config,
        Name: Config,
        Type: {
          CSharpType: TestConfig?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Key/value pairs to provide settings for this webhook.,
        ParameterName: config,
        ArgumentName: config,
        ParameterDefaultValue: default
      },
      {
        Id: events,
        Name: Events,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary:
Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for.
<br/>Default Value: [push],
        ParameterName: events,
        ArgumentName: events,
        ParameterDefaultValue: default
      },
      {
        Id: active,
        Name: Active,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
<br/>Default Value: true,
        ParameterName: active,
        ArgumentName: active,
        ParameterDefaultValue: true
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a repository webhook,
    RequestType: ,
    ResponseType: hook,
    MethodName: ReposCreateWebhookAsync,
    NotAsyncMethodName: ReposCreateWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateWebhook
  },
  {
    Id: ReposGetWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository webhook,
    RequestType: ,
    ResponseType: hook,
    MethodName: ReposGetWebhookAsync,
    NotAsyncMethodName: ReposGetWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetWebhook
  },
  {
    Id: ReposUpdateWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: config,
        Name: Config,
        Type: {
          CSharpType: WebhookConfig?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            url,
            content_type,
            secret,
            insecure_ssl
          ],
          EnumValues: null
        },
        IsRequired: false,
        Summary: Configuration object of the webhook,
        ParameterName: config,
        ArgumentName: config,
        ParameterDefaultValue: default
      },
      {
        Id: events,
        Name: Events,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary:
Determines what [events](https://docs.github.com/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events.
<br/>Default Value: [push],
        ParameterName: events,
        ArgumentName: events,
        ParameterDefaultValue: default
      },
      {
        Id: add_events,
        Name: AddEvents,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Determines a list of events to be added to the list of events that the Hook triggers for.,
        ParameterName: addEvents,
        ArgumentName: addEvents,
        ParameterDefaultValue: default
      },
      {
        Id: remove_events,
        Name: RemoveEvents,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Determines a list of events to be removed from the list of events that the Hook triggers for.,
        ParameterName: removeEvents,
        ArgumentName: removeEvents,
        ParameterDefaultValue: default
      },
      {
        Id: active,
        Name: Active,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
<br/>Default Value: true,
        ParameterName: active,
        ArgumentName: active,
        ParameterDefaultValue: true
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a repository webhook,
    RequestType: ,
    ResponseType: hook,
    MethodName: ReposUpdateWebhookAsync,
    NotAsyncMethodName: ReposUpdateWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateWebhook
  },
  {
    Id: ReposDeleteWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a repository webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteWebhookAsync,
    NotAsyncMethodName: ReposDeleteWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteWebhook
  },
  {
    Id: ReposGetWebhookConfigForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}/config",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a webhook configuration for a repository,
    RequestType: ,
    ResponseType: webhook-config,
    MethodName: ReposGetWebhookConfigForRepoAsync,
    NotAsyncMethodName: ReposGetWebhookConfigForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetWebhookConfigForRepo
  },
  {
    Id: ReposUpdateWebhookConfigForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}/config",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: url,
        Name: Url,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The URL to which the payloads will be delivered.
<br/>Example: https://example.com/webhook,
        ParameterName: url,
        ArgumentName: url,
        ParameterDefaultValue: default
      },
      {
        Id: content_type,
        Name: ContentType,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
<br/>Example: "json",
        ParameterName: contentType,
        ArgumentName: contentType,
        ParameterDefaultValue: default
      },
      {
        Id: secret,
        Name: Secret,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/webhooks/event-payloads/#delivery-headers).
<br/>Example: "********",
        ParameterName: secret,
        ArgumentName: secret,
        ParameterDefaultValue: default
      },
      {
        Id: insecure_ssl,
        Name: InsecureSsl,
        Type: {
          CSharpType: WebhookConfigInsecureSsl?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: ,
        ParameterName: insecureSsl,
        ArgumentName: insecureSsl,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a webhook configuration for a repository,
    RequestType: ,
    ResponseType: webhook-config,
    MethodName: ReposUpdateWebhookConfigForRepoAsync,
    NotAsyncMethodName: ReposUpdateWebhookConfigForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateWebhookConfigForRepo
  },
  {
    Id: ReposListWebhookDeliveries,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}/deliveries?per_page={perPage}&cursor={cursor}&redelivery={redelivery}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: cursor,
        Name: Cursor,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: cursor,
        ArgumentName: cursor,
        ParameterDefaultValue: default
      },
      {
        Id: redelivery,
        Name: Redelivery,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: redelivery,
        ArgumentName: redelivery,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List deliveries for a repository webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListWebhookDeliveriesAsync,
    NotAsyncMethodName: ReposListWebhookDeliveries,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListWebhookDeliveries
  },
  {
    Id: ReposGetWebhookDelivery,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}/deliveries/{deliveryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: delivery_id,
        Name: DeliveryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deliveryId,
        ArgumentName: deliveryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a delivery for a repository webhook,
    RequestType: ,
    ResponseType: hook-delivery,
    MethodName: ReposGetWebhookDeliveryAsync,
    NotAsyncMethodName: ReposGetWebhookDelivery,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetWebhookDelivery
  },
  {
    Id: ReposRedeliverWebhookDelivery,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}/deliveries/{deliveryId}/attempts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      },
      {
        Id: delivery_id,
        Name: DeliveryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: deliveryId,
        ArgumentName: deliveryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Redeliver a delivery for a repository webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposRedeliverWebhookDeliveryAsync,
    NotAsyncMethodName: ReposRedeliverWebhookDelivery,
    FileNameWithoutExtension: G.Api.EndPoints.ReposRedeliverWebhookDelivery
  },
  {
    Id: ReposPingWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}/pings",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Ping a repository webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposPingWebhookAsync,
    NotAsyncMethodName: ReposPingWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.ReposPingWebhook
  },
  {
    Id: ReposTestPushWebhook,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/hooks/{hookId}/tests",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: hook_id,
        Name: HookId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: hookId,
        ArgumentName: hookId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Test the push repository webhook,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposTestPushWebhookAsync,
    NotAsyncMethodName: ReposTestPushWebhook,
    FileNameWithoutExtension: G.Api.EndPoints.ReposTestPushWebhook
  },
  {
    Id: MigrationsGetImportStatus,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/import",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an import status,
    RequestType: ,
    ResponseType: import,
    MethodName: MigrationsGetImportStatusAsync,
    NotAsyncMethodName: MigrationsGetImportStatus,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsGetImportStatus
  },
  {
    Id: MigrationsStartImport,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/import",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: vcs_url,
        Name: VcsUrl,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The URL of the originating repository.,
        ParameterName: vcsUrl,
        ArgumentName: vcsUrl,
        ParameterDefaultValue: default
      },
      {
        Id: vcs,
        Name: Vcs,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Subversion,
            Git,
            Mercurial,
            Tfvc
          ],
          EnumValues: [
            subversion,
            git,
            mercurial,
            tfvc
          ]
        },
        IsRequired: false,
        Summary: The originating VCS type. Without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.,
        ParameterName: vcs,
        ArgumentName: vcs,
        ParameterDefaultValue: default
      },
      {
        Id: vcs_username,
        Name: VcsUsername,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: If authentication is required, the username to provide to `vcs_url`.,
        ParameterName: vcsUsername,
        ArgumentName: vcsUsername,
        ParameterDefaultValue: default
      },
      {
        Id: vcs_password,
        Name: VcsPassword,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: If authentication is required, the password to provide to `vcs_url`.,
        ParameterName: vcsPassword,
        ArgumentName: vcsPassword,
        ParameterDefaultValue: default
      },
      {
        Id: tfvc_project,
        Name: TfvcProject,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: For a tfvc import, the name of the project that is being imported.,
        ParameterName: tfvcProject,
        ArgumentName: tfvcProject,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Start an import,
    RequestType: ,
    ResponseType: import,
    MethodName: MigrationsStartImportAsync,
    NotAsyncMethodName: MigrationsStartImport,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsStartImport
  },
  {
    Id: MigrationsUpdateImport,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/import",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: vcs_username,
        Name: VcsUsername,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The username to provide to the originating repository.,
        ParameterName: vcsUsername,
        ArgumentName: vcsUsername,
        ParameterDefaultValue: default
      },
      {
        Id: vcs_password,
        Name: VcsPassword,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The password to provide to the originating repository.,
        ParameterName: vcsPassword,
        ArgumentName: vcsPassword,
        ParameterDefaultValue: default
      },
      {
        Id: vcs,
        Name: Vcs,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Subversion,
            Tfvc,
            Git,
            Mercurial
          ],
          EnumValues: [
            subversion,
            tfvc,
            git,
            mercurial
          ]
        },
        IsRequired: false,
        Summary:
The type of version control system you are migrating from.
<br/>Example: "git",
        ParameterName: vcs,
        ArgumentName: vcs,
        ParameterDefaultValue: default
      },
      {
        Id: tfvc_project,
        Name: TfvcProject,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
For a tfvc import, the name of the project that is being imported.
<br/>Example: "project1",
        ParameterName: tfvcProject,
        ArgumentName: tfvcProject,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an import,
    RequestType: ,
    ResponseType: import,
    MethodName: MigrationsUpdateImportAsync,
    NotAsyncMethodName: MigrationsUpdateImport,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsUpdateImport
  },
  {
    Id: MigrationsCancelImport,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/import",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Cancel an import,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsCancelImportAsync,
    NotAsyncMethodName: MigrationsCancelImport,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsCancelImport
  },
  {
    Id: MigrationsGetCommitAuthors,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/import/authors?since={since}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get commit authors,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsGetCommitAuthorsAsync,
    NotAsyncMethodName: MigrationsGetCommitAuthors,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsGetCommitAuthors
  },
  {
    Id: MigrationsMapCommitAuthor,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/import/authors/{authorId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: author_id,
        Name: AuthorId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: authorId,
        ArgumentName: authorId,
        ParameterDefaultValue: default
      },
      {
        Id: email,
        Name: Email,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The new Git author email.,
        ParameterName: email,
        ArgumentName: email,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The new Git author name.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Map a commit author,
    RequestType: ,
    ResponseType: porter-author,
    MethodName: MigrationsMapCommitAuthorAsync,
    NotAsyncMethodName: MigrationsMapCommitAuthor,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsMapCommitAuthor
  },
  {
    Id: MigrationsGetLargeFiles,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/import/large_files",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get large files,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsGetLargeFilesAsync,
    NotAsyncMethodName: MigrationsGetLargeFiles,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsGetLargeFiles
  },
  {
    Id: MigrationsSetLfsPreference,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/import/lfs",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: use_lfs,
        Name: UseLfs,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            OptIn,
            OptOut
          ],
          EnumValues: [
            opt_in,
            opt_out
          ]
        },
        IsRequired: true,
        Summary: Whether to store large files during the import. `opt_in` means large files will be stored using Git LFS. `opt_out` means large files will be removed during the import.,
        ParameterName: useLfs,
        ArgumentName: useLfs,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update Git LFS preference,
    RequestType: ,
    ResponseType: import,
    MethodName: MigrationsSetLfsPreferenceAsync,
    NotAsyncMethodName: MigrationsSetLfsPreference,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsSetLfsPreference
  },
  {
    Id: AppsGetRepoInstallation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/installation",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository installation for the authenticated app,
    RequestType: ,
    ResponseType: installation,
    MethodName: AppsGetRepoInstallationAsync,
    NotAsyncMethodName: AppsGetRepoInstallation,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetRepoInstallation
  },
  {
    Id: InteractionsGetRestrictionsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/interaction-limits",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get interaction restrictions for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: InteractionsGetRestrictionsForRepoAsync,
    NotAsyncMethodName: InteractionsGetRestrictionsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.InteractionsGetRestrictionsForRepo
  },
  {
    Id: InteractionsSetRestrictionsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/interaction-limits",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: limit,
        Name: Limit,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            ExistingUsers,
            ContributorsOnly,
            CollaboratorsOnly
          ],
          EnumValues: [
            existing_users,
            contributors_only,
            collaborators_only
          ]
        },
        IsRequired: true,
        Summary:
The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect.
<br/>Example: collaborators_only,
        ParameterName: limit,
        ArgumentName: limit,
        ParameterDefaultValue: default
      },
      {
        Id: expiry,
        Name: Expiry,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            OneDay,
            ThreeDays,
            OneWeek,
            OneMonth,
            SixMonths
          ],
          EnumValues: [
            one_day,
            three_days,
            one_week,
            one_month,
            six_months
          ]
        },
        IsRequired: false,
        Summary:
The duration of the interaction restriction. Default: `one_day`.
<br/>Example: one_month,
        ParameterName: expiry,
        ArgumentName: expiry,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set interaction restrictions for a repository,
    RequestType: InteractionLimit,
    ResponseType: interaction-limit-response,
    MethodName: InteractionsSetRestrictionsForRepoAsync,
    NotAsyncMethodName: InteractionsSetRestrictionsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.InteractionsSetRestrictionsForRepo
  },
  {
    Id: InteractionsRemoveRestrictionsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/interaction-limits",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove interaction restrictions for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: InteractionsRemoveRestrictionsForRepoAsync,
    NotAsyncMethodName: InteractionsRemoveRestrictionsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.InteractionsRemoveRestrictionsForRepo
  },
  {
    Id: ReposListInvitations,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/invitations?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository invitations,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListInvitationsAsync,
    NotAsyncMethodName: ReposListInvitations,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListInvitations
  },
  {
    Id: ReposUpdateInvitation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/invitations/{invitationId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: invitation_id,
        Name: InvitationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: invitationId,
        ArgumentName: invitationId,
        ParameterDefaultValue: default
      },
      {
        Id: permissions,
        Name: Permissions,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Read,
            Write,
            Maintain,
            Triage,
            Admin
          ],
          EnumValues: [
            read,
            write,
            maintain,
            triage,
            admin
          ]
        },
        IsRequired: false,
        Summary: The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.,
        ParameterName: permissions,
        ArgumentName: permissions,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a repository invitation,
    RequestType: ,
    ResponseType: repository-invitation,
    MethodName: ReposUpdateInvitationAsync,
    NotAsyncMethodName: ReposUpdateInvitation,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateInvitation
  },
  {
    Id: ReposDeleteInvitation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/invitations/{invitationId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: invitation_id,
        Name: InvitationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: invitationId,
        ArgumentName: invitationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a repository invitation,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteInvitationAsync,
    NotAsyncMethodName: ReposDeleteInvitation,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteInvitation
  },
  {
    Id: IssuesListForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues?milestone={milestone}&state={state}&assignee={assignee}&creator={creator}&mentioned={mentioned}&labels={labels}&sort={sort}&direction={direction}&since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: milestone,
        Name: Milestone,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: milestone,
        ArgumentName: milestone,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            All
          ],
          EnumValues: [
            open,
            closed,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Open,
        Summary:
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Open
      },
      {
        Id: assignee,
        Name: Assignee,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: assignee,
        ArgumentName: assignee,
        ParameterDefaultValue: default
      },
      {
        Id: creator,
        Name: Creator,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: creator,
        ArgumentName: creator,
        ParameterDefaultValue: default
      },
      {
        Id: mentioned,
        Name: Mentioned,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: mentioned,
        ArgumentName: mentioned,
        ParameterDefaultValue: default
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Comments
          ],
          EnumValues: [
            created,
            updated,
            comments
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository issues,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListForRepoAsync,
    NotAsyncMethodName: IssuesListForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListForRepo
  },
  {
    Id: IssuesCreate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The title of the issue.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The contents of the issue.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: assignee,
        Name: Assignee,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Login for the user that this issue should be assigned to. _NOTE: Only users with push access can set the assignee for new issues. The assignee is silently dropped otherwise. **This field is deprecated.**_,
        ParameterName: assignee,
        ArgumentName: assignee,
        ParameterDefaultValue: default
      },
      {
        Id: milestone,
        Name: Milestone,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: ,
        ParameterName: milestone,
        ArgumentName: milestone,
        ParameterDefaultValue: default
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<object?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Labels to associate with this issue. _NOTE: Only users with push access can set labels for new issues. Labels are silently dropped otherwise._,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      },
      {
        Id: assignees,
        Name: Assignees,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Logins for Users to assign to this issue. _NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise._,
        ParameterName: assignees,
        ArgumentName: assignees,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an issue,
    RequestType: ,
    ResponseType: issue,
    MethodName: IssuesCreateAsync,
    NotAsyncMethodName: IssuesCreate,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesCreate
  },
  {
    Id: IssuesListCommentsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/comments?sort={sort}&direction={direction}&since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: default
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List issue comments for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListCommentsForRepoAsync,
    NotAsyncMethodName: IssuesListCommentsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListCommentsForRepo
  },
  {
    Id: IssuesGetComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an issue comment,
    RequestType: ,
    ResponseType: issue-comment,
    MethodName: IssuesGetCommentAsync,
    NotAsyncMethodName: IssuesGetComment,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesGetComment
  },
  {
    Id: IssuesUpdateComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The contents of the comment.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an issue comment,
    RequestType: ,
    ResponseType: issue-comment,
    MethodName: IssuesUpdateCommentAsync,
    NotAsyncMethodName: IssuesUpdateComment,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesUpdateComment
  },
  {
    Id: IssuesDeleteComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an issue comment,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesDeleteCommentAsync,
    NotAsyncMethodName: IssuesDeleteComment,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesDeleteComment
  },
  {
    Id: ReactionsListForIssueComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/comments/{commentId}/reactions?content={content}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reactions for an issue comment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsListForIssueCommentAsync,
    NotAsyncMethodName: ReactionsListForIssueComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsListForIssueComment
  },
  {
    Id: ReactionsCreateForIssueComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/comments/{commentId}/reactions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: true,
        Summary: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the issue comment.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create reaction for an issue comment,
    RequestType: ,
    ResponseType: reaction,
    MethodName: ReactionsCreateForIssueCommentAsync,
    NotAsyncMethodName: ReactionsCreateForIssueComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsCreateForIssueComment
  },
  {
    Id: ReactionsDeleteForIssueComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/comments/{commentId}/reactions/{reactionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: reaction_id,
        Name: ReactionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reactionId,
        ArgumentName: reactionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an issue comment reaction,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsDeleteForIssueCommentAsync,
    NotAsyncMethodName: ReactionsDeleteForIssueComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsDeleteForIssueComment
  },
  {
    Id: IssuesListEventsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/events?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List issue events for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListEventsForRepoAsync,
    NotAsyncMethodName: IssuesListEventsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListEventsForRepo
  },
  {
    Id: IssuesGetEvent,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/events/{eventId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: event_id,
        Name: EventId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: eventId,
        ArgumentName: eventId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an issue event,
    RequestType: ,
    ResponseType: issue-event,
    MethodName: IssuesGetEventAsync,
    NotAsyncMethodName: IssuesGetEvent,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesGetEvent
  },
  {
    Id: IssuesGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an issue,
    RequestType: ,
    ResponseType: issue,
    MethodName: IssuesGetAsync,
    NotAsyncMethodName: IssuesGet,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesGet
  },
  {
    Id: IssuesUpdate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: The title of the issue.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The contents of the issue.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: assignee,
        Name: Assignee,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Username to assign to this issue. **This field is deprecated.**,
        ParameterName: assignee,
        ArgumentName: assignee,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed
          ],
          EnumValues: [
            open,
            closed
          ]
        },
        IsRequired: false,
        Summary: The open or closed state of the issue.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: state_reason,
        Name: StateReason,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Completed,
            NotPlanned,
            Reopened
          ],
          EnumValues: [
            completed,
            not_planned,
            reopened
          ]
        },
        IsRequired: false,
        Summary:
The reason for the state change. Ignored unless `state` is changed.
<br/>Example: not_planned,
        ParameterName: stateReason,
        ArgumentName: stateReason,
        ParameterDefaultValue: default
      },
      {
        Id: milestone,
        Name: Milestone,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: ,
        ParameterName: milestone,
        ArgumentName: milestone,
        ParameterDefaultValue: default
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<object?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Labels to associate with this issue. Pass one or more labels to _replace_ the set of labels on this issue. Send an empty array (`[]`) to clear all labels from the issue. Only users with push access can set labels for issues. Without push access to the repository, label changes are silently dropped.,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      },
      {
        Id: assignees,
        Name: Assignees,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Usernames to assign to this issue. Pass one or more user logins to _replace_ the set of assignees on this issue. Send an empty array (`[]`) to clear all assignees from the issue. Only users with push access can set assignees for new issues. Without push access to the repository, assignee changes are silently dropped.,
        ParameterName: assignees,
        ArgumentName: assignees,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an issue,
    RequestType: ,
    ResponseType: issue,
    MethodName: IssuesUpdateAsync,
    NotAsyncMethodName: IssuesUpdate,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesUpdate
  },
  {
    Id: IssuesAddAssignees,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/assignees",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: assignees,
        Name: Assignees,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._,
        ParameterName: assignees,
        ArgumentName: assignees,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add assignees to an issue,
    RequestType: ,
    ResponseType: issue,
    MethodName: IssuesAddAssigneesAsync,
    NotAsyncMethodName: IssuesAddAssignees,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesAddAssignees
  },
  {
    Id: IssuesRemoveAssignees,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/assignees",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: assignees,
        Name: Assignees,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._,
        ParameterName: assignees,
        ArgumentName: assignees,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove assignees from an issue,
    RequestType: ,
    ResponseType: issue,
    MethodName: IssuesRemoveAssigneesAsync,
    NotAsyncMethodName: IssuesRemoveAssignees,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesRemoveAssignees
  },
  {
    Id: IssuesCheckUserCanBeAssignedToIssue,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/assignees/{assignee}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: assignee,
        Name: Assignee,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: assignee,
        ArgumentName: assignee,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a user can be assigned to a issue,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesCheckUserCanBeAssignedToIssueAsync,
    NotAsyncMethodName: IssuesCheckUserCanBeAssignedToIssue,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesCheckUserCanBeAssignedToIssue
  },
  {
    Id: IssuesListComments,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/comments?since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List issue comments,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListCommentsAsync,
    NotAsyncMethodName: IssuesListComments,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListComments
  },
  {
    Id: IssuesCreateComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/comments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The contents of the comment.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create an issue comment,
    RequestType: ,
    ResponseType: issue-comment,
    MethodName: IssuesCreateCommentAsync,
    NotAsyncMethodName: IssuesCreateComment,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesCreateComment
  },
  {
    Id: IssuesListEvents,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/events?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List issue events,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListEventsAsync,
    NotAsyncMethodName: IssuesListEvents,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListEvents
  },
  {
    Id: IssuesListLabelsOnIssue,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/labels?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List labels for an issue,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListLabelsOnIssueAsync,
    NotAsyncMethodName: IssuesListLabelsOnIssue,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListLabelsOnIssue
  },
  {
    Id: IssuesAddLabels,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add labels to an issue,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesAddLabelsAsync,
    NotAsyncMethodName: IssuesAddLabels,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesAddLabels
  },
  {
    Id: IssuesSetLabels,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set labels for an issue,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesSetLabelsAsync,
    NotAsyncMethodName: IssuesSetLabels,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesSetLabels
  },
  {
    Id: IssuesRemoveAllLabels,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove all labels from an issue,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesRemoveAllLabelsAsync,
    NotAsyncMethodName: IssuesRemoveAllLabels,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesRemoveAllLabels
  },
  {
    Id: IssuesRemoveLabel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/labels/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a label from an issue,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesRemoveLabelAsync,
    NotAsyncMethodName: IssuesRemoveLabel,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesRemoveLabel
  },
  {
    Id: IssuesLock,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/lock",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: lock_reason,
        Name: LockReason,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            OffTopic,
            TooHeated,
            Resolved,
            Spam
          ],
          EnumValues: [
            off-topic,
            too heated,
            resolved,
            spam
          ]
        },
        IsRequired: false,
        Summary:
The reason for locking the issue or pull request conversation. Lock will fail if you don't use one of these reasons:  
 * `off-topic`  
 * `too heated`  
 * `resolved`  
 * `spam`,
        ParameterName: lockReason,
        ArgumentName: lockReason,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Lock an issue,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesLockAsync,
    NotAsyncMethodName: IssuesLock,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesLock
  },
  {
    Id: IssuesUnlock,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/lock",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Unlock an issue,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesUnlockAsync,
    NotAsyncMethodName: IssuesUnlock,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesUnlock
  },
  {
    Id: ReactionsListForIssue,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/reactions?content={content}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reactions for an issue,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsListForIssueAsync,
    NotAsyncMethodName: ReactionsListForIssue,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsListForIssue
  },
  {
    Id: ReactionsCreateForIssue,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/reactions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: true,
        Summary: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the issue.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create reaction for an issue,
    RequestType: ,
    ResponseType: reaction,
    MethodName: ReactionsCreateForIssueAsync,
    NotAsyncMethodName: ReactionsCreateForIssue,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsCreateForIssue
  },
  {
    Id: ReactionsDeleteForIssue,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/reactions/{reactionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: reaction_id,
        Name: ReactionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reactionId,
        ArgumentName: reactionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an issue reaction,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsDeleteForIssueAsync,
    NotAsyncMethodName: ReactionsDeleteForIssue,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsDeleteForIssue
  },
  {
    Id: IssuesListEventsForTimeline,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/issues/{issueNumber}/timeline?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: issue_number,
        Name: IssueNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: issueNumber,
        ArgumentName: issueNumber,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List timeline events for an issue,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListEventsForTimelineAsync,
    NotAsyncMethodName: IssuesListEventsForTimeline,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListEventsForTimeline
  },
  {
    Id: ReposListDeployKeys,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/keys?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List deploy keys,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListDeployKeysAsync,
    NotAsyncMethodName: ReposListDeployKeys,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListDeployKeys
  },
  {
    Id: ReposCreateDeployKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/keys",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A name for the key.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: key,
        Name: Key,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The contents of the key.,
        ParameterName: key,
        ArgumentName: key,
        ParameterDefaultValue: default
      },
      {
        Id: read_only,
        Name: ReadOnly,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.  
  
Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see "[Repository permission levels for an organization](https://docs.github.com/articles/repository-permission-levels-for-an-organization/)" and "[Permission levels for a user account repository](https://docs.github.com/articles/permission-levels-for-a-user-account-repository/).",
        ParameterName: readOnly,
        ArgumentName: readOnly,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a deploy key,
    RequestType: ,
    ResponseType: deploy-key,
    MethodName: ReposCreateDeployKeyAsync,
    NotAsyncMethodName: ReposCreateDeployKey,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateDeployKey
  },
  {
    Id: ReposGetDeployKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/keys/{keyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a deploy key,
    RequestType: ,
    ResponseType: deploy-key,
    MethodName: ReposGetDeployKeyAsync,
    NotAsyncMethodName: ReposGetDeployKey,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetDeployKey
  },
  {
    Id: ReposDeleteDeployKey,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/keys/{keyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a deploy key,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteDeployKeyAsync,
    NotAsyncMethodName: ReposDeleteDeployKey,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteDeployKey
  },
  {
    Id: IssuesListLabelsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/labels?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List labels for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListLabelsForRepoAsync,
    NotAsyncMethodName: IssuesListLabelsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListLabelsForRepo
  },
  {
    Id: IssuesCreateLabel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/labels",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png ":strawberry:"). For a full list of available emoji and codes, see "[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).",
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: color,
        Name: Color,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.,
        ParameterName: color,
        ArgumentName: color,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short description of the label. Must be 100 characters or fewer.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a label,
    RequestType: ,
    ResponseType: label,
    MethodName: IssuesCreateLabelAsync,
    NotAsyncMethodName: IssuesCreateLabel,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesCreateLabel
  },
  {
    Id: IssuesGetLabel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/labels/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a label,
    RequestType: ,
    ResponseType: label,
    MethodName: IssuesGetLabelAsync,
    NotAsyncMethodName: IssuesGetLabel,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesGetLabel
  },
  {
    Id: IssuesUpdateLabel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/labels/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: new_name,
        Name: NewName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The new name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji ![:strawberry:](https://github.githubassets.com/images/icons/emoji/unicode/1f353.png ":strawberry:"). For a full list of available emoji and codes, see "[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet).",
        ParameterName: newName,
        ArgumentName: newName,
        ParameterDefaultValue: default
      },
      {
        Id: color,
        Name: Color,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The [hexadecimal color code](http://www.color-hex.com/) for the label, without the leading `#`.,
        ParameterName: color,
        ArgumentName: color,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short description of the label. Must be 100 characters or fewer.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a label,
    RequestType: ,
    ResponseType: label,
    MethodName: IssuesUpdateLabelAsync,
    NotAsyncMethodName: IssuesUpdateLabel,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesUpdateLabel
  },
  {
    Id: IssuesDeleteLabel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/labels/{name}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a label,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesDeleteLabelAsync,
    NotAsyncMethodName: IssuesDeleteLabel,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesDeleteLabel
  },
  {
    Id: ReposListLanguages,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/languages",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository languages,
    RequestType: ,
    ResponseType: language,
    MethodName: ReposListLanguagesAsync,
    NotAsyncMethodName: ReposListLanguages,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListLanguages
  },
  {
    Id: LicensesGetForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/license?ref={ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary:
The Git reference, formatted as `refs/pull/&lt;number&gt;/merge`, `refs/pull/&lt;number&gt;/head`,
`refs/heads/&lt;branch name&gt;` or simply `&lt;branch name&gt;`.,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the license for a repository,
    RequestType: ,
    ResponseType: license-content,
    MethodName: LicensesGetForRepoAsync,
    NotAsyncMethodName: LicensesGetForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.LicensesGetForRepo
  },
  {
    Id: ReposMergeUpstream,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/merge-upstream",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the branch which should be updated to match upstream.,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Sync a fork branch with the upstream repository,
    RequestType: ,
    ResponseType: merged-upstream,
    MethodName: ReposMergeUpstreamAsync,
    NotAsyncMethodName: ReposMergeUpstream,
    FileNameWithoutExtension: G.Api.EndPoints.ReposMergeUpstream
  },
  {
    Id: ReposMerge,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/merges",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: base,
        Name: Base,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the base branch that the head will be merged into.,
        ParameterName: base,
        ArgumentName: base,
        ParameterDefaultValue: default
      },
      {
        Id: head,
        Name: Head,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The head to merge. This can be a branch name or a commit SHA1.,
        ParameterName: head,
        ArgumentName: head,
        ParameterDefaultValue: default
      },
      {
        Id: commit_message,
        Name: CommitMessage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Commit message to use for the merge commit. If omitted, a default message will be used.,
        ParameterName: commitMessage,
        ArgumentName: commitMessage,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Merge a branch,
    RequestType: ,
    ResponseType: commit,
    MethodName: ReposMergeAsync,
    NotAsyncMethodName: ReposMerge,
    FileNameWithoutExtension: G.Api.EndPoints.ReposMerge
  },
  {
    Id: IssuesListMilestones,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/milestones?state={state}&sort={sort}&direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            All
          ],
          EnumValues: [
            open,
            closed,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Open,
        Summary:
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Open
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            DueOn,
            Completeness
          ],
          EnumValues: [
            due_on,
            completeness
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.DueOn,
        Summary:
<br/>Default Value: due_on,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.DueOn
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Asc,
        Summary:
<br/>Default Value: asc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Asc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List milestones,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListMilestonesAsync,
    NotAsyncMethodName: IssuesListMilestones,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListMilestones
  },
  {
    Id: IssuesCreateMilestone,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/milestones",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The title of the milestone.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed
          ],
          EnumValues: [
            open,
            closed
          ]
        },
        IsRequired: false,
        DefaultValue: TestState.Open,
        Summary:
The state of the milestone. Either `open` or `closed`.
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: TestState.Open
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A description of the milestone.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: due_on,
        Name: DueOn,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.,
        ParameterName: dueOn,
        ArgumentName: dueOn,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a milestone,
    RequestType: ,
    ResponseType: milestone,
    MethodName: IssuesCreateMilestoneAsync,
    NotAsyncMethodName: IssuesCreateMilestone,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesCreateMilestone
  },
  {
    Id: IssuesGetMilestone,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/milestones/{milestoneNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: milestone_number,
        Name: MilestoneNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: milestoneNumber,
        ArgumentName: milestoneNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a milestone,
    RequestType: ,
    ResponseType: milestone,
    MethodName: IssuesGetMilestoneAsync,
    NotAsyncMethodName: IssuesGetMilestone,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesGetMilestone
  },
  {
    Id: IssuesUpdateMilestone,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/milestones/{milestoneNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: milestone_number,
        Name: MilestoneNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: milestoneNumber,
        ArgumentName: milestoneNumber,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The title of the milestone.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed
          ],
          EnumValues: [
            open,
            closed
          ]
        },
        IsRequired: false,
        DefaultValue: TestState.Open,
        Summary:
The state of the milestone. Either `open` or `closed`.
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: TestState.Open
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A description of the milestone.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: due_on,
        Name: DueOn,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.,
        ParameterName: dueOn,
        ArgumentName: dueOn,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a milestone,
    RequestType: ,
    ResponseType: milestone,
    MethodName: IssuesUpdateMilestoneAsync,
    NotAsyncMethodName: IssuesUpdateMilestone,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesUpdateMilestone
  },
  {
    Id: IssuesDeleteMilestone,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/milestones/{milestoneNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: milestone_number,
        Name: MilestoneNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: milestoneNumber,
        ArgumentName: milestoneNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a milestone,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesDeleteMilestoneAsync,
    NotAsyncMethodName: IssuesDeleteMilestone,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesDeleteMilestone
  },
  {
    Id: IssuesListLabelsForMilestone,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/milestones/{milestoneNumber}/labels?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: milestone_number,
        Name: MilestoneNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: milestoneNumber,
        ArgumentName: milestoneNumber,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List labels for issues in a milestone,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListLabelsForMilestoneAsync,
    NotAsyncMethodName: IssuesListLabelsForMilestone,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListLabelsForMilestone
  },
  {
    Id: ActivityListRepoNotificationsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/notifications?all={all}&participating={participating}&since={since}&before={before}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: all,
        Name: All,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: false,
        Summary:
<br/>Default Value: false,
        ParameterName: all,
        ArgumentName: all,
        ParameterDefaultValue: false
      },
      {
        Id: participating,
        Name: Participating,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: false,
        Summary:
<br/>Default Value: false,
        ParameterName: participating,
        ArgumentName: participating,
        ParameterDefaultValue: false
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository notifications for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListRepoNotificationsForAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityListRepoNotificationsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListRepoNotificationsForAuthenticatedUser
  },
  {
    Id: ActivityMarkRepoNotificationsAsRead,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/notifications",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: last_read_at,
        Name: LastReadAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.,
        ParameterName: lastReadAt,
        ArgumentName: lastReadAt,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Mark repository notifications as read,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityMarkRepoNotificationsAsReadAsync,
    NotAsyncMethodName: ActivityMarkRepoNotificationsAsRead,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityMarkRepoNotificationsAsRead
  },
  {
    Id: ReposGetPages,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a GitHub Pages site,
    RequestType: ,
    ResponseType: page,
    MethodName: ReposGetPagesAsync,
    NotAsyncMethodName: ReposGetPages,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetPages
  },
  {
    Id: ReposCreatePagesSite,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: build_type,
        Name: BuildType,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Legacy,
            Workflow
          ],
          EnumValues: [
            legacy,
            workflow
          ]
        },
        IsRequired: false,
        Summary: The process in which the Page will be built. Possible values are `"legacy"` and `"workflow"`.,
        ParameterName: buildType,
        ArgumentName: buildType,
        ParameterDefaultValue: default
      },
      {
        Id: source,
        Name: Source,
        Type: {
          CSharpType: TestSource?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The source branch and directory used to publish your Pages site.,
        ParameterName: source,
        ArgumentName: source,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a GitHub Pages site,
    RequestType: ,
    ResponseType: page,
    MethodName: ReposCreatePagesSiteAsync,
    NotAsyncMethodName: ReposCreatePagesSite,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreatePagesSite
  },
  {
    Id: ReposUpdateInformationAboutPagesSite,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: cname,
        Name: Cname,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specify a custom domain for the repository. Sending a `null` value will remove the custom domain. For more about custom domains, see "[Using a custom domain with GitHub Pages](https://docs.github.com/pages/configuring-a-custom-domain-for-your-github-pages-site).",
        ParameterName: cname,
        ArgumentName: cname,
        ParameterDefaultValue: default
      },
      {
        Id: https_enforced,
        Name: HttpsEnforced,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specify whether HTTPS should be enforced for the repository.,
        ParameterName: httpsEnforced,
        ArgumentName: httpsEnforced,
        ParameterDefaultValue: default
      },
      {
        Id: build_type,
        Name: BuildType,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Legacy,
            Workflow
          ],
          EnumValues: [
            legacy,
            workflow
          ]
        },
        IsRequired: false,
        Summary: The process by which the GitHub Pages site will be built. `workflow` means that the site is built by a custom GitHub Actions workflow. `legacy` means that the site is built by GitHub when changes are pushed to a specific branch.,
        ParameterName: buildType,
        ArgumentName: buildType,
        ParameterDefaultValue: default
      },
      {
        Id: source,
        Name: Source,
        Type: {
          CSharpType: object?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: ,
        Summary: ,
        ParameterName: source,
        ArgumentName: source,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Update information about a GitHub Pages site,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposUpdateInformationAboutPagesSiteAsync,
    NotAsyncMethodName: ReposUpdateInformationAboutPagesSite,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateInformationAboutPagesSite
  },
  {
    Id: ReposDeletePagesSite,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a GitHub Pages site,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeletePagesSiteAsync,
    NotAsyncMethodName: ReposDeletePagesSite,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeletePagesSite
  },
  {
    Id: ReposListPagesBuilds,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages/builds?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List GitHub Pages builds,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListPagesBuildsAsync,
    NotAsyncMethodName: ReposListPagesBuilds,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListPagesBuilds
  },
  {
    Id: ReposRequestPagesBuild,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages/builds",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Request a GitHub Pages build,
    RequestType: ,
    ResponseType: page-build-status,
    MethodName: ReposRequestPagesBuildAsync,
    NotAsyncMethodName: ReposRequestPagesBuild,
    FileNameWithoutExtension: G.Api.EndPoints.ReposRequestPagesBuild
  },
  {
    Id: ReposGetLatestPagesBuild,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages/builds/latest",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get latest Pages build,
    RequestType: ,
    ResponseType: page-build,
    MethodName: ReposGetLatestPagesBuildAsync,
    NotAsyncMethodName: ReposGetLatestPagesBuild,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetLatestPagesBuild
  },
  {
    Id: ReposGetPagesBuild,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages/builds/{buildId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: build_id,
        Name: BuildId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: buildId,
        ArgumentName: buildId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub Pages build,
    RequestType: ,
    ResponseType: page-build,
    MethodName: ReposGetPagesBuildAsync,
    NotAsyncMethodName: ReposGetPagesBuild,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetPagesBuild
  },
  {
    Id: ReposCreatePagesDeployment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages/deployments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: artifact_id,
        Name: ArtifactId,
        Type: {
          CSharpType: double,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The ID of an artifact that contains the .zip or .tar of static assets to deploy. The artifact belongs to the repository. Either `artifact_id` or `artifact_url` are required.,
        ParameterName: artifactId,
        ArgumentName: artifactId,
        ParameterDefaultValue: default
      },
      {
        Id: artifact_url,
        Name: ArtifactUrl,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The URL of an artifact that contains the .zip or .tar of static assets to deploy. The artifact belongs to the repository. Either `artifact_id` or `artifact_url` are required.,
        ParameterName: artifactUrl,
        ArgumentName: artifactUrl,
        ParameterDefaultValue: default
      },
      {
        Id: environment,
        Name: Environment,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "github-pages",
        Summary:
The target environment for this GitHub Pages deployment.
<br/>Default Value: github-pages,
        ParameterName: environment,
        ArgumentName: environment,
        ParameterDefaultValue: "github-pages"
      },
      {
        Id: pages_build_version,
        Name: PagesBuildVersion,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        DefaultValue: "GITHUB_SHA",
        Summary:
A unique string that represents the version of the build for this deployment.
<br/>Default Value: GITHUB_SHA,
        ParameterName: pagesBuildVersion,
        ArgumentName: pagesBuildVersion,
        ParameterDefaultValue: "GITHUB_SHA"
      },
      {
        Id: oidc_token,
        Name: OidcToken,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The OIDC token issued by GitHub Actions certifying the origin of the deployment.,
        ParameterName: oidcToken,
        ArgumentName: oidcToken,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a GitHub Pages deployment,
    RequestType: ,
    ResponseType: page-deployment,
    MethodName: ReposCreatePagesDeploymentAsync,
    NotAsyncMethodName: ReposCreatePagesDeployment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreatePagesDeployment
  },
  {
    Id: ReposGetPagesDeployment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages/deployments/{pagesDeploymentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pages_deployment_id,
        Name: PagesDeploymentId,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pagesDeploymentId,
        ArgumentName: pagesDeploymentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the status of a GitHub Pages deployment,
    RequestType: ,
    ResponseType: pages-deployment-status,
    MethodName: ReposGetPagesDeploymentAsync,
    NotAsyncMethodName: ReposGetPagesDeployment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetPagesDeployment
  },
  {
    Id: ReposCancelPagesDeployment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages/deployments/{pagesDeploymentId}/cancel",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pages_deployment_id,
        Name: PagesDeploymentId,
        Type: {
          CSharpType: object,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pagesDeploymentId,
        ArgumentName: pagesDeploymentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Cancel a GitHub Pages deployment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposCancelPagesDeploymentAsync,
    NotAsyncMethodName: ReposCancelPagesDeployment,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCancelPagesDeployment
  },
  {
    Id: ReposGetPagesHealthCheck,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pages/health",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a DNS health check for GitHub Pages,
    RequestType: ,
    ResponseType: pages-health-check,
    MethodName: ReposGetPagesHealthCheckAsync,
    NotAsyncMethodName: ReposGetPagesHealthCheck,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetPagesHealthCheck
  },
  {
    Id: ReposCheckPrivateVulnerabilityReporting,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/private-vulnerability-reporting",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if private vulnerability reporting is enabled for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposCheckPrivateVulnerabilityReportingAsync,
    NotAsyncMethodName: ReposCheckPrivateVulnerabilityReporting,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCheckPrivateVulnerabilityReporting
  },
  {
    Id: ReposEnablePrivateVulnerabilityReporting,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/private-vulnerability-reporting",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Enable private vulnerability reporting for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposEnablePrivateVulnerabilityReportingAsync,
    NotAsyncMethodName: ReposEnablePrivateVulnerabilityReporting,
    FileNameWithoutExtension: G.Api.EndPoints.ReposEnablePrivateVulnerabilityReporting
  },
  {
    Id: ReposDisablePrivateVulnerabilityReporting,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/private-vulnerability-reporting",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Disable private vulnerability reporting for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDisablePrivateVulnerabilityReportingAsync,
    NotAsyncMethodName: ReposDisablePrivateVulnerabilityReporting,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDisablePrivateVulnerabilityReporting
  },
  {
    Id: ProjectsListForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/projects?state={state}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            All
          ],
          EnumValues: [
            open,
            closed,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Open,
        Summary:
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Open
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository projects,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsListForRepoAsync,
    NotAsyncMethodName: ProjectsListForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsListForRepo
  },
  {
    Id: ProjectsCreateForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/projects",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the project.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The description of the project.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a repository project,
    RequestType: ,
    ResponseType: project,
    MethodName: ProjectsCreateForRepoAsync,
    NotAsyncMethodName: ProjectsCreateForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsCreateForRepo
  },
  {
    Id: ReposGetCustomPropertiesValues,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/properties/values",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all custom property values for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetCustomPropertiesValuesAsync,
    NotAsyncMethodName: ReposGetCustomPropertiesValues,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCustomPropertiesValues
  },
  {
    Id: ReposCreateOrUpdateCustomPropertiesValues,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/properties/values",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: properties,
        Name: Properties,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<CustomPropertyValue>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A list of custom property names and associated values to apply to the repositories.,
        ParameterName: properties,
        ArgumentName: properties,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Create or update custom property values for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposCreateOrUpdateCustomPropertiesValuesAsync,
    NotAsyncMethodName: ReposCreateOrUpdateCustomPropertiesValues,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateOrUpdateCustomPropertiesValues
  },
  {
    Id: PullsList,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls?state={state}&head={head}&base={base}&sort={sort}&direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            All
          ],
          EnumValues: [
            open,
            closed,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Open,
        Summary:
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Open
      },
      {
        Id: head,
        Name: Head,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: head,
        ArgumentName: head,
        ParameterDefaultValue: default
      },
      {
        Id: base,
        Name: Base,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: base,
        ArgumentName: base,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Popularity,
            LongRunning
          ],
          EnumValues: [
            created,
            updated,
            popularity,
            long-running
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List pull requests,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsListAsync,
    NotAsyncMethodName: PullsList,
    FileNameWithoutExtension: G.Api.EndPoints.PullsList
  },
  {
    Id: PullsCreate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The title of the new pull request. Required unless `issue` is specified.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: head,
        Name: Head,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.,
        ParameterName: head,
        ArgumentName: head,
        ParameterDefaultValue: default
      },
      {
        Id: head_repo,
        Name: HeadRepo,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The name of the repository where the changes in the pull request were made. This field is required for cross-repository pull requests if both repositories are owned by the same organization.
<br/>Example: octo-org/octo-repo,
        ParameterName: headRepo,
        ArgumentName: headRepo,
        ParameterDefaultValue: default
      },
      {
        Id: base,
        Name: Base,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.,
        ParameterName: base,
        ArgumentName: base,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The contents of the pull request.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: maintainer_can_modify,
        Name: MaintainerCanModify,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.,
        ParameterName: maintainerCanModify,
        ArgumentName: maintainerCanModify,
        ParameterDefaultValue: default
      },
      {
        Id: draft,
        Name: Draft,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Indicates whether the pull request is a draft. See "[Draft Pull Requests](https://docs.github.com/articles/about-pull-requests#draft-pull-requests)" in the GitHub Help documentation to learn more.,
        ParameterName: draft,
        ArgumentName: draft,
        ParameterDefaultValue: default
      },
      {
        Id: issue,
        Name: Issue,
        Type: {
          CSharpType: long,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
An issue in the repository to convert to a pull request. The issue title, body, and comments will become the title, body, and comments on the new pull request. Required unless `title` is specified.
<br/>Example: 1,
        ParameterName: issue,
        ArgumentName: issue,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a pull request,
    RequestType: ,
    ResponseType: pull-request,
    MethodName: PullsCreateAsync,
    NotAsyncMethodName: PullsCreate,
    FileNameWithoutExtension: G.Api.EndPoints.PullsCreate
  },
  {
    Id: PullsListReviewCommentsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/comments?sort={sort}&direction={direction}&since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            CreatedAt
          ],
          EnumValues: [
            created,
            updated,
            created_at
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: default
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List review comments in a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsListReviewCommentsForRepoAsync,
    NotAsyncMethodName: PullsListReviewCommentsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.PullsListReviewCommentsForRepo
  },
  {
    Id: PullsGetReviewComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a review comment for a pull request,
    RequestType: ,
    ResponseType: pull-request-review-comment,
    MethodName: PullsGetReviewCommentAsync,
    NotAsyncMethodName: PullsGetReviewComment,
    FileNameWithoutExtension: G.Api.EndPoints.PullsGetReviewComment
  },
  {
    Id: PullsUpdateReviewComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The text of the reply to the review comment.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a review comment for a pull request,
    RequestType: ,
    ResponseType: pull-request-review-comment,
    MethodName: PullsUpdateReviewCommentAsync,
    NotAsyncMethodName: PullsUpdateReviewComment,
    FileNameWithoutExtension: G.Api.EndPoints.PullsUpdateReviewComment
  },
  {
    Id: PullsDeleteReviewComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/comments/{commentId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a review comment for a pull request,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsDeleteReviewCommentAsync,
    NotAsyncMethodName: PullsDeleteReviewComment,
    FileNameWithoutExtension: G.Api.EndPoints.PullsDeleteReviewComment
  },
  {
    Id: ReactionsListForPullRequestReviewComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/comments/{commentId}/reactions?content={content}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reactions for a pull request review comment,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsListForPullRequestReviewCommentAsync,
    NotAsyncMethodName: ReactionsListForPullRequestReviewComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsListForPullRequestReviewComment
  },
  {
    Id: ReactionsCreateForPullRequestReviewComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/comments/{commentId}/reactions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: true,
        Summary: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the pull request review comment.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create reaction for a pull request review comment,
    RequestType: ,
    ResponseType: reaction,
    MethodName: ReactionsCreateForPullRequestReviewCommentAsync,
    NotAsyncMethodName: ReactionsCreateForPullRequestReviewComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsCreateForPullRequestReviewComment
  },
  {
    Id: ReactionsDeleteForPullRequestComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/comments/{commentId}/reactions/{reactionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: reaction_id,
        Name: ReactionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reactionId,
        ArgumentName: reactionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a pull request comment reaction,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsDeleteForPullRequestCommentAsync,
    NotAsyncMethodName: ReactionsDeleteForPullRequestComment,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsDeleteForPullRequestComment
  },
  {
    Id: PullsGet,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a pull request,
    RequestType: ,
    ResponseType: pull-request,
    MethodName: PullsGetAsync,
    NotAsyncMethodName: PullsGet,
    FileNameWithoutExtension: G.Api.EndPoints.PullsGet
  },
  {
    Id: PullsUpdate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The title of the pull request.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The contents of the pull request.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed
          ],
          EnumValues: [
            open,
            closed
          ]
        },
        IsRequired: false,
        Summary: State of this Pull Request. Either `open` or `closed`.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: base,
        Name: Base,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the branch you want your changes pulled into. This should be an existing branch on the current repository. You cannot update the base branch on a pull request to point to another repository.,
        ParameterName: base,
        ArgumentName: base,
        ParameterDefaultValue: default
      },
      {
        Id: maintainer_can_modify,
        Name: MaintainerCanModify,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.,
        ParameterName: maintainerCanModify,
        ArgumentName: maintainerCanModify,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a pull request,
    RequestType: ,
    ResponseType: pull-request,
    MethodName: PullsUpdateAsync,
    NotAsyncMethodName: PullsUpdate,
    FileNameWithoutExtension: G.Api.EndPoints.PullsUpdate
  },
  {
    Id: CodespacesCreateWithPrForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/codespaces",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: location,
        Name: Location,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The requested location for a new codespace. Best efforts are made to respect this upon creation. Assigned by IP if not provided.,
        ParameterName: location,
        ArgumentName: location,
        ParameterDefaultValue: default
      },
      {
        Id: geo,
        Name: Geo,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            EuropeWest,
            SoutheastAsia,
            UsEast,
            UsWest
          ],
          EnumValues: [
            EuropeWest,
            SoutheastAsia,
            UsEast,
            UsWest
          ]
        },
        IsRequired: false,
        Summary: The geographic area for this codespace. If not specified, the value is assigned by IP. This property replaces `location`, which is being deprecated.,
        ParameterName: geo,
        ArgumentName: geo,
        ParameterDefaultValue: default
      },
      {
        Id: client_ip,
        Name: ClientIp,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: IP for location auto-detection when proxying a request,
        ParameterName: clientIp,
        ArgumentName: clientIp,
        ParameterDefaultValue: default
      },
      {
        Id: machine,
        Name: Machine,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Machine type to use for this codespace,
        ParameterName: machine,
        ArgumentName: machine,
        ParameterDefaultValue: default
      },
      {
        Id: devcontainer_path,
        Name: DevcontainerPath,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Path to devcontainer.json config to use for this codespace,
        ParameterName: devcontainerPath,
        ArgumentName: devcontainerPath,
        ParameterDefaultValue: default
      },
      {
        Id: multi_repo_permissions_opt_out,
        Name: MultiRepoPermissionsOptOut,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Whether to authorize requested permissions from devcontainer.json,
        ParameterName: multiRepoPermissionsOptOut,
        ArgumentName: multiRepoPermissionsOptOut,
        ParameterDefaultValue: default
      },
      {
        Id: working_directory,
        Name: WorkingDirectory,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Working directory for this codespace,
        ParameterName: workingDirectory,
        ArgumentName: workingDirectory,
        ParameterDefaultValue: default
      },
      {
        Id: idle_timeout_minutes,
        Name: IdleTimeoutMinutes,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Time in minutes before codespace stops from inactivity,
        ParameterName: idleTimeoutMinutes,
        ArgumentName: idleTimeoutMinutes,
        ParameterDefaultValue: default
      },
      {
        Id: display_name,
        Name: DisplayName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Display name for this codespace,
        ParameterName: displayName,
        ArgumentName: displayName,
        ParameterDefaultValue: default
      },
      {
        Id: retention_period_minutes,
        Name: RetentionPeriodMinutes,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Duration in minutes after codespace has gone idle in which it will be deleted. Must be integer minutes between 0 and 43200 (30 days).,
        ParameterName: retentionPeriodMinutes,
        ArgumentName: retentionPeriodMinutes,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a codespace from a pull request,
    RequestType: ,
    ResponseType: codespace,
    MethodName: CodespacesCreateWithPrForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesCreateWithPrForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesCreateWithPrForAuthenticatedUser
  },
  {
    Id: PullsListReviewComments,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/comments?sort={sort}&direction={direction}&since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: default
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List review comments on a pull request,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsListReviewCommentsAsync,
    NotAsyncMethodName: PullsListReviewComments,
    FileNameWithoutExtension: G.Api.EndPoints.PullsListReviewComments
  },
  {
    Id: PullsCreateReviewComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/comments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The text of the review comment.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: commit_id,
        Name: CommitId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The SHA of the commit needing a comment. Not using the latest commit SHA may render your comment outdated if a subsequent commit modifies the line you specify as the `position`.,
        ParameterName: commitId,
        ArgumentName: commitId,
        ParameterDefaultValue: default
      },
      {
        Id: path,
        Name: Path,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The relative path to the file that necessitates a comment.,
        ParameterName: path,
        ArgumentName: path,
        ParameterDefaultValue: default
      },
      {
        Id: position,
        Name: Position,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: **This parameter is deprecated. Use `line` instead**. The position in the diff where you want to add a review comment. Note this value is not the same as the line number in the file. The position value equals the number of lines down from the first "@@" hunk header in the file you want to add a comment. The line just below the "@@" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.,
        ParameterName: position,
        ArgumentName: position,
        ParameterDefaultValue: default
      },
      {
        Id: side,
        Name: Side,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            LEFT,
            RIGHT
          ],
          EnumValues: [
            LEFT,
            RIGHT
          ]
        },
        IsRequired: false,
        Summary: In a split diff view, the side of the diff that the pull request's changes appear on. Can be `LEFT` or `RIGHT`. Use `LEFT` for deletions that appear in red. Use `RIGHT` for additions that appear in green or unchanged lines that appear in white and are shown for context. For a multi-line comment, side represents whether the last line of the comment range is a deletion or addition. For more information, see "[Diff view options](https://docs.github.com/articles/about-comparing-branches-in-pull-requests#diff-view-options)" in the GitHub Help documentation.,
        ParameterName: side,
        ArgumentName: side,
        ParameterDefaultValue: default
      },
      {
        Id: line,
        Name: Line,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: **Required unless using `subject_type:file`**. The line of the blob in the pull request diff that the comment applies to. For a multi-line comment, the last line of the range that your comment applies to.,
        ParameterName: line,
        ArgumentName: line,
        ParameterDefaultValue: default
      },
      {
        Id: start_line,
        Name: StartLine,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: **Required when using multi-line comments unless using `in_reply_to`**. The `start_line` is the first line in the pull request diff that your multi-line comment applies to. To learn more about multi-line comments, see "[Commenting on a pull request](https://docs.github.com/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)" in the GitHub Help documentation.,
        ParameterName: startLine,
        ArgumentName: startLine,
        ParameterDefaultValue: default
      },
      {
        Id: start_side,
        Name: StartSide,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            LEFT,
            RIGHT,
            Side
          ],
          EnumValues: [
            LEFT,
            RIGHT,
            side
          ]
        },
        IsRequired: false,
        Summary: **Required when using multi-line comments unless using `in_reply_to`**. The `start_side` is the starting side of the diff that the comment applies to. Can be `LEFT` or `RIGHT`. To learn more about multi-line comments, see "[Commenting on a pull request](https://docs.github.com/articles/commenting-on-a-pull-request#adding-line-comments-to-a-pull-request)" in the GitHub Help documentation. See `side` in this table for additional context.,
        ParameterName: startSide,
        ArgumentName: startSide,
        ParameterDefaultValue: default
      },
      {
        Id: in_reply_to,
        Name: InReplyTo,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The ID of the review comment to reply to. To find the ID of a review comment with ["List review comments on a pull request"](#list-review-comments-on-a-pull-request). When specified, all parameters other than `body` in the request body are ignored.
<br/>Example: 2,
        ParameterName: inReplyTo,
        ArgumentName: inReplyTo,
        ParameterDefaultValue: default
      },
      {
        Id: subject_type,
        Name: SubjectType,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Line,
            File
          ],
          EnumValues: [
            line,
            file
          ]
        },
        IsRequired: false,
        Summary: The level at which the comment is targeted.,
        ParameterName: subjectType,
        ArgumentName: subjectType,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a review comment for a pull request,
    RequestType: ,
    ResponseType: pull-request-review-comment,
    MethodName: PullsCreateReviewCommentAsync,
    NotAsyncMethodName: PullsCreateReviewComment,
    FileNameWithoutExtension: G.Api.EndPoints.PullsCreateReviewComment
  },
  {
    Id: PullsCreateReplyForReviewComment,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/comments/{commentId}/replies",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_id,
        Name: CommentId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentId,
        ArgumentName: commentId,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The text of the review comment.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a reply for a review comment,
    RequestType: ,
    ResponseType: pull-request-review-comment,
    MethodName: PullsCreateReplyForReviewCommentAsync,
    NotAsyncMethodName: PullsCreateReplyForReviewComment,
    FileNameWithoutExtension: G.Api.EndPoints.PullsCreateReplyForReviewComment
  },
  {
    Id: PullsListCommits,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/commits?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List commits on a pull request,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsListCommitsAsync,
    NotAsyncMethodName: PullsListCommits,
    FileNameWithoutExtension: G.Api.EndPoints.PullsListCommits
  },
  {
    Id: PullsListFiles,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/files?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List pull requests files,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsListFilesAsync,
    NotAsyncMethodName: PullsListFiles,
    FileNameWithoutExtension: G.Api.EndPoints.PullsListFiles
  },
  {
    Id: PullsCheckIfMerged,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/merge",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a pull request has been merged,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsCheckIfMergedAsync,
    NotAsyncMethodName: PullsCheckIfMerged,
    FileNameWithoutExtension: G.Api.EndPoints.PullsCheckIfMerged
  },
  {
    Id: PullsMerge,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/merge",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: commit_title,
        Name: CommitTitle,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Title for the automatic commit message.,
        ParameterName: commitTitle,
        ArgumentName: commitTitle,
        ParameterDefaultValue: default
      },
      {
        Id: commit_message,
        Name: CommitMessage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Extra detail to append to automatic commit message.,
        ParameterName: commitMessage,
        ArgumentName: commitMessage,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: SHA that pull request head must match to allow merge.,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: default
      },
      {
        Id: merge_method,
        Name: MergeMethod,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Merge,
            Squash,
            Rebase
          ],
          EnumValues: [
            merge,
            squash,
            rebase
          ]
        },
        IsRequired: false,
        Summary: The merge method to use.,
        ParameterName: mergeMethod,
        ArgumentName: mergeMethod,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Merge a pull request,
    RequestType: ,
    ResponseType: pull-request-merge-result,
    MethodName: PullsMergeAsync,
    NotAsyncMethodName: PullsMerge,
    FileNameWithoutExtension: G.Api.EndPoints.PullsMerge
  },
  {
    Id: PullsListRequestedReviewers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/requested_reviewers",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all requested reviewers for a pull request,
    RequestType: ,
    ResponseType: pull-request-review-request,
    MethodName: PullsListRequestedReviewersAsync,
    NotAsyncMethodName: PullsListRequestedReviewers,
    FileNameWithoutExtension: G.Api.EndPoints.PullsListRequestedReviewers
  },
  {
    Id: PullsRequestReviewers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/requested_reviewers",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: reviewers,
        Name: Reviewers,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of user `login`s that will be requested.,
        ParameterName: reviewers,
        ArgumentName: reviewers,
        ParameterDefaultValue: default
      },
      {
        Id: team_reviewers,
        Name: TeamReviewers,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of team `slug`s that will be requested.,
        ParameterName: teamReviewers,
        ArgumentName: teamReviewers,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Request reviewers for a pull request,
    RequestType: ,
    ResponseType: pull-request-simple,
    MethodName: PullsRequestReviewersAsync,
    NotAsyncMethodName: PullsRequestReviewers,
    FileNameWithoutExtension: G.Api.EndPoints.PullsRequestReviewers
  },
  {
    Id: PullsRemoveRequestedReviewers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/requested_reviewers",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: reviewers,
        Name: Reviewers,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: An array of user `login`s that will be removed.,
        ParameterName: reviewers,
        ArgumentName: reviewers,
        ParameterDefaultValue: default
      },
      {
        Id: team_reviewers,
        Name: TeamReviewers,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of team `slug`s that will be removed.,
        ParameterName: teamReviewers,
        ArgumentName: teamReviewers,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove requested reviewers from a pull request,
    RequestType: ,
    ResponseType: pull-request-simple,
    MethodName: PullsRemoveRequestedReviewersAsync,
    NotAsyncMethodName: PullsRemoveRequestedReviewers,
    FileNameWithoutExtension: G.Api.EndPoints.PullsRemoveRequestedReviewers
  },
  {
    Id: PullsListReviews,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/reviews?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reviews for a pull request,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsListReviewsAsync,
    NotAsyncMethodName: PullsListReviews,
    FileNameWithoutExtension: G.Api.EndPoints.PullsListReviews
  },
  {
    Id: PullsCreateReview,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/reviews",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: commit_id,
        Name: CommitId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The SHA of the commit that needs a review. Not using the latest commit SHA may render your review comment outdated if a subsequent commit modifies the line you specify as the `position`. Defaults to the most recent commit in the pull request when you do not specify a value.,
        ParameterName: commitId,
        ArgumentName: commitId,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: **Required** when using `REQUEST_CHANGES` or `COMMENT` for the `event` parameter. The body text of the pull request review.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: event,
        Name: Event,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            APPROVE,
            REQUESTCHANGES,
            COMMENT
          ],
          EnumValues: [
            APPROVE,
            REQUEST_CHANGES,
            COMMENT
          ]
        },
        IsRequired: false,
        Summary: The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. By leaving this blank, you set the review action state to `PENDING`, which means you will need to [submit the pull request review](https://docs.github.com/rest/pulls/reviews#submit-a-review-for-a-pull-request) when you are ready.,
        ParameterName: @event,
        ArgumentName: @event,
        ParameterDefaultValue: default
      },
      {
        Id: comments,
        Name: Comments,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<TestComments?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Use the following table to specify the location, destination, and contents of the draft review comment.,
        ParameterName: comments,
        ArgumentName: comments,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a review for a pull request,
    RequestType: ,
    ResponseType: pull-request-review,
    MethodName: PullsCreateReviewAsync,
    NotAsyncMethodName: PullsCreateReview,
    FileNameWithoutExtension: G.Api.EndPoints.PullsCreateReview
  },
  {
    Id: PullsGetReview,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/reviews/{reviewId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: review_id,
        Name: ReviewId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reviewId,
        ArgumentName: reviewId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a review for a pull request,
    RequestType: ,
    ResponseType: pull-request-review,
    MethodName: PullsGetReviewAsync,
    NotAsyncMethodName: PullsGetReview,
    FileNameWithoutExtension: G.Api.EndPoints.PullsGetReview
  },
  {
    Id: PullsUpdateReview,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/reviews/{reviewId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: review_id,
        Name: ReviewId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reviewId,
        ArgumentName: reviewId,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The body text of the pull request review.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Update a review for a pull request,
    RequestType: ,
    ResponseType: pull-request-review,
    MethodName: PullsUpdateReviewAsync,
    NotAsyncMethodName: PullsUpdateReview,
    FileNameWithoutExtension: G.Api.EndPoints.PullsUpdateReview
  },
  {
    Id: PullsDeletePendingReview,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/reviews/{reviewId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: review_id,
        Name: ReviewId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reviewId,
        ArgumentName: reviewId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a pending review for a pull request,
    RequestType: ,
    ResponseType: pull-request-review,
    MethodName: PullsDeletePendingReviewAsync,
    NotAsyncMethodName: PullsDeletePendingReview,
    FileNameWithoutExtension: G.Api.EndPoints.PullsDeletePendingReview
  },
  {
    Id: PullsListCommentsForReview,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/reviews/{reviewId}/comments?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: review_id,
        Name: ReviewId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reviewId,
        ArgumentName: reviewId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List comments for a pull request review,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsListCommentsForReviewAsync,
    NotAsyncMethodName: PullsListCommentsForReview,
    FileNameWithoutExtension: G.Api.EndPoints.PullsListCommentsForReview
  },
  {
    Id: PullsDismissReview,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/reviews/{reviewId}/dismissals",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: review_id,
        Name: ReviewId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reviewId,
        ArgumentName: reviewId,
        ParameterDefaultValue: default
      },
      {
        Id: message,
        Name: Message,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The message for the pull request review dismissal,
        ParameterName: message,
        ArgumentName: message,
        ParameterDefaultValue: default
      },
      {
        Id: event,
        Name: Event,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            DISMISS
          ],
          EnumValues: [
            DISMISS
          ]
        },
        IsRequired: false,
        Summary:
<br/>Example: "DISMISS",
        ParameterName: @event,
        ArgumentName: @event,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Dismiss a review for a pull request,
    RequestType: ,
    ResponseType: pull-request-review,
    MethodName: PullsDismissReviewAsync,
    NotAsyncMethodName: PullsDismissReview,
    FileNameWithoutExtension: G.Api.EndPoints.PullsDismissReview
  },
  {
    Id: PullsSubmitReview,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/reviews/{reviewId}/events",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: review_id,
        Name: ReviewId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reviewId,
        ArgumentName: reviewId,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The body text of the pull request review,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: event,
        Name: Event,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            APPROVE,
            REQUESTCHANGES,
            COMMENT
          ],
          EnumValues: [
            APPROVE,
            REQUEST_CHANGES,
            COMMENT
          ]
        },
        IsRequired: true,
        Summary: The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action.,
        ParameterName: @event,
        ArgumentName: @event,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Submit a review for a pull request,
    RequestType: ,
    ResponseType: pull-request-review,
    MethodName: PullsSubmitReviewAsync,
    NotAsyncMethodName: PullsSubmitReview,
    FileNameWithoutExtension: G.Api.EndPoints.PullsSubmitReview
  },
  {
    Id: PullsUpdateBranch,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/pulls/{pullNumber}/update-branch",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pull_number,
        Name: PullNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: pullNumber,
        ArgumentName: pullNumber,
        ParameterDefaultValue: default
      },
      {
        Id: expected_head_sha,
        Name: ExpectedHeadSha,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The expected SHA of the pull request's HEAD ref. This is the most recent commit on the pull request's branch. If the expected SHA does not match the pull request's HEAD, you will receive a `422 Unprocessable Entity` status. You can use the "[List commits](https://docs.github.com/rest/commits/commits#list-commits)" endpoint to find the most recent commit SHA. Default: SHA of the pull request's current HEAD ref.,
        ParameterName: expectedHeadSha,
        ArgumentName: expectedHeadSha,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Update a pull request branch,
    RequestType: ,
    ResponseType: ,
    MethodName: PullsUpdateBranchAsync,
    NotAsyncMethodName: PullsUpdateBranch,
    FileNameWithoutExtension: G.Api.EndPoints.PullsUpdateBranch
  },
  {
    Id: ReposGetReadme,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/readme?ref={ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository README,
    RequestType: ,
    ResponseType: content-file,
    MethodName: ReposGetReadmeAsync,
    NotAsyncMethodName: ReposGetReadme,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetReadme
  },
  {
    Id: ReposGetReadmeInDirectory,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/readme/{dir}?ref={ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: dir,
        Name: Dir,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: dir,
        ArgumentName: dir,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository README for a directory,
    RequestType: ,
    ResponseType: content-file,
    MethodName: ReposGetReadmeInDirectoryAsync,
    NotAsyncMethodName: ReposGetReadmeInDirectory,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetReadmeInDirectory
  },
  {
    Id: ReposListReleases,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List releases,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListReleasesAsync,
    NotAsyncMethodName: ReposListReleases,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListReleases
  },
  {
    Id: ReposCreateRelease,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tag_name,
        Name: TagName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the tag.,
        ParameterName: tagName,
        ArgumentName: tagName,
        ParameterDefaultValue: default
      },
      {
        Id: target_commitish,
        Name: TargetCommitish,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch.,
        ParameterName: targetCommitish,
        ArgumentName: targetCommitish,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the release.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Text describing the contents of the tag.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: draft,
        Name: Draft,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
`true` to create a draft (unpublished) release, `false` to create a published one.
<br/>Default Value: false,
        ParameterName: draft,
        ArgumentName: draft,
        ParameterDefaultValue: false
      },
      {
        Id: prerelease,
        Name: Prerelease,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
`true` to identify the release as a prerelease. `false` to identify the release as a full release.
<br/>Default Value: false,
        ParameterName: prerelease,
        ArgumentName: prerelease,
        ParameterDefaultValue: false
      },
      {
        Id: discussion_category_name,
        Name: DiscussionCategoryName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. For more information, see "[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository).",
        ParameterName: discussionCategoryName,
        ArgumentName: discussionCategoryName,
        ParameterDefaultValue: default
      },
      {
        Id: generate_release_notes,
        Name: GenerateReleaseNotes,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to automatically generate the name and body for this release. If `name` is specified, the specified name will be used; otherwise, a name will be automatically generated. If `body` is specified, the body will be pre-pended to the automatically generated notes.
<br/>Default Value: false,
        ParameterName: generateReleaseNotes,
        ArgumentName: generateReleaseNotes,
        ParameterDefaultValue: false
      },
      {
        Id: make_latest,
        Name: MakeLatest,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            True,
            False,
            Legacy
          ],
          EnumValues: [
            true,
            false,
            legacy
          ]
        },
        IsRequired: false,
        DefaultValue: TestMakeLatest.True,
        Summary:
Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be set as latest. Defaults to `true` for newly published releases. `legacy` specifies that the latest release should be determined based on the release creation date and higher semantic version.
<br/>Default Value: true,
        ParameterName: makeLatest,
        ArgumentName: makeLatest,
        ParameterDefaultValue: TestMakeLatest.True
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a release,
    RequestType: ,
    ResponseType: release,
    MethodName: ReposCreateReleaseAsync,
    NotAsyncMethodName: ReposCreateRelease,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateRelease
  },
  {
    Id: ReposGetReleaseAsset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/assets/{assetId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: asset_id,
        Name: AssetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: assetId,
        ArgumentName: assetId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a release asset,
    RequestType: ,
    ResponseType: release-asset,
    MethodName: ReposGetReleaseAssetAsync,
    NotAsyncMethodName: ReposGetReleaseAsset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetReleaseAsset
  },
  {
    Id: ReposUpdateReleaseAsset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/assets/{assetId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: asset_id,
        Name: AssetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: assetId,
        ArgumentName: assetId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The file name of the asset.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: label,
        Name: Label,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An alternate short description of the asset. Used in place of the filename.,
        ParameterName: label,
        ArgumentName: label,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
<br/>Example: "uploaded",
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a release asset,
    RequestType: ,
    ResponseType: release-asset,
    MethodName: ReposUpdateReleaseAssetAsync,
    NotAsyncMethodName: ReposUpdateReleaseAsset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateReleaseAsset
  },
  {
    Id: ReposDeleteReleaseAsset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/assets/{assetId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: asset_id,
        Name: AssetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: assetId,
        ArgumentName: assetId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a release asset,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteReleaseAssetAsync,
    NotAsyncMethodName: ReposDeleteReleaseAsset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteReleaseAsset
  },
  {
    Id: ReposGenerateReleaseNotes,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/generate-notes",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tag_name,
        Name: TagName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The tag name for the release. This can be an existing tag or a new one.,
        ParameterName: tagName,
        ArgumentName: tagName,
        ParameterDefaultValue: default
      },
      {
        Id: target_commitish,
        Name: TargetCommitish,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specifies the commitish value that will be the target for the release's tag. Required if the supplied tag_name does not reference an existing tag. Ignored if the tag_name already exists.,
        ParameterName: targetCommitish,
        ArgumentName: targetCommitish,
        ParameterDefaultValue: default
      },
      {
        Id: previous_tag_name,
        Name: PreviousTagName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the previous tag to use as the starting point for the release notes. Use to manually specify the range for the set of changes considered as part this release.,
        ParameterName: previousTagName,
        ArgumentName: previousTagName,
        ParameterDefaultValue: default
      },
      {
        Id: configuration_file_path,
        Name: ConfigurationFilePath,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specifies a path to a file in the repository containing configuration settings used for generating the release notes. If unspecified, the configuration file located in the repository at '.github/release.yml' or '.github/release.yaml' will be used. If that is not present, the default configuration will be used.,
        ParameterName: configurationFilePath,
        ArgumentName: configurationFilePath,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Generate release notes content for a release,
    RequestType: ,
    ResponseType: release-notes-content,
    MethodName: ReposGenerateReleaseNotesAsync,
    NotAsyncMethodName: ReposGenerateReleaseNotes,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGenerateReleaseNotes
  },
  {
    Id: ReposGetLatestRelease,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/latest",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the latest release,
    RequestType: ,
    ResponseType: release,
    MethodName: ReposGetLatestReleaseAsync,
    NotAsyncMethodName: ReposGetLatestRelease,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetLatestRelease
  },
  {
    Id: ReposGetReleaseByTag,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/tags/{tag}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tag,
        Name: Tag,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: tag,
        ArgumentName: tag,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a release by tag name,
    RequestType: ,
    ResponseType: release,
    MethodName: ReposGetReleaseByTagAsync,
    NotAsyncMethodName: ReposGetReleaseByTag,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetReleaseByTag
  },
  {
    Id: ReposGetRelease,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/{releaseId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: release_id,
        Name: ReleaseId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: releaseId,
        ArgumentName: releaseId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a release,
    RequestType: ,
    ResponseType: release,
    MethodName: ReposGetReleaseAsync,
    NotAsyncMethodName: ReposGetRelease,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetRelease
  },
  {
    Id: ReposUpdateRelease,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/{releaseId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: release_id,
        Name: ReleaseId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: releaseId,
        ArgumentName: releaseId,
        ParameterDefaultValue: default
      },
      {
        Id: tag_name,
        Name: TagName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the tag.,
        ParameterName: tagName,
        ArgumentName: tagName,
        ParameterDefaultValue: default
      },
      {
        Id: target_commitish,
        Name: TargetCommitish,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch.,
        ParameterName: targetCommitish,
        ArgumentName: targetCommitish,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the release.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Text describing the contents of the tag.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: draft,
        Name: Draft,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: `true` makes the release a draft, and `false` publishes the release.,
        ParameterName: draft,
        ArgumentName: draft,
        ParameterDefaultValue: default
      },
      {
        Id: prerelease,
        Name: Prerelease,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: `true` to identify the release as a prerelease, `false` to identify the release as a full release.,
        ParameterName: prerelease,
        ArgumentName: prerelease,
        ParameterDefaultValue: default
      },
      {
        Id: make_latest,
        Name: MakeLatest,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            True,
            False,
            Legacy
          ],
          EnumValues: [
            true,
            false,
            legacy
          ]
        },
        IsRequired: false,
        DefaultValue: TestMakeLatest.True,
        Summary:
Specifies whether this release should be set as the latest release for the repository. Drafts and prereleases cannot be set as latest. Defaults to `true` for newly published releases. `legacy` specifies that the latest release should be determined based on the release creation date and higher semantic version.
<br/>Default Value: true,
        ParameterName: makeLatest,
        ArgumentName: makeLatest,
        ParameterDefaultValue: TestMakeLatest.True
      },
      {
        Id: discussion_category_name,
        Name: DiscussionCategoryName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: If specified, a discussion of the specified category is created and linked to the release. The value must be a category that already exists in the repository. If there is already a discussion linked to the release, this parameter is ignored. For more information, see "[Managing categories for discussions in your repository](https://docs.github.com/discussions/managing-discussions-for-your-community/managing-categories-for-discussions-in-your-repository).",
        ParameterName: discussionCategoryName,
        ArgumentName: discussionCategoryName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a release,
    RequestType: ,
    ResponseType: release,
    MethodName: ReposUpdateReleaseAsync,
    NotAsyncMethodName: ReposUpdateRelease,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateRelease
  },
  {
    Id: ReposDeleteRelease,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/{releaseId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: release_id,
        Name: ReleaseId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: releaseId,
        ArgumentName: releaseId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a release,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteReleaseAsync,
    NotAsyncMethodName: ReposDeleteRelease,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteRelease
  },
  {
    Id: ReposListReleaseAssets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/{releaseId}/assets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: release_id,
        Name: ReleaseId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: releaseId,
        ArgumentName: releaseId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List release assets,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListReleaseAssetsAsync,
    NotAsyncMethodName: ReposListReleaseAssets,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListReleaseAssets
  },
  {
    Id: ReposUploadReleaseAsset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/{releaseId}/assets?name={name}&label={label}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: release_id,
        Name: ReleaseId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: releaseId,
        ArgumentName: releaseId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: label,
        Name: Label,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: label,
        ArgumentName: label,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Upload a release asset,
    RequestType: ,
    ResponseType: release-asset,
    MethodName: ReposUploadReleaseAssetAsync,
    NotAsyncMethodName: ReposUploadReleaseAsset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUploadReleaseAsset
  },
  {
    Id: ReactionsListForRelease,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/{releaseId}/reactions?content={content}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: release_id,
        Name: ReleaseId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: releaseId,
        ArgumentName: releaseId,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Laugh,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            laugh,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reactions for a release,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsListForReleaseAsync,
    NotAsyncMethodName: ReactionsListForRelease,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsListForRelease
  },
  {
    Id: ReactionsCreateForRelease,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/{releaseId}/reactions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: release_id,
        Name: ReleaseId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: releaseId,
        ArgumentName: releaseId,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Laugh,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            laugh,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: true,
        Summary: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the release.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create reaction for a release,
    RequestType: ,
    ResponseType: reaction,
    MethodName: ReactionsCreateForReleaseAsync,
    NotAsyncMethodName: ReactionsCreateForRelease,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsCreateForRelease
  },
  {
    Id: ReactionsDeleteForRelease,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/releases/{releaseId}/reactions/{reactionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: release_id,
        Name: ReleaseId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: releaseId,
        ArgumentName: releaseId,
        ParameterDefaultValue: default
      },
      {
        Id: reaction_id,
        Name: ReactionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: reactionId,
        ArgumentName: reactionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a release reaction,
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsDeleteForReleaseAsync,
    NotAsyncMethodName: ReactionsDeleteForRelease,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsDeleteForRelease
  },
  {
    Id: ReposGetBranchRules,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/rules/branches/{branch}?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: branch,
        Name: Branch,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: branch,
        ArgumentName: branch,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get rules for a branch,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetBranchRulesAsync,
    NotAsyncMethodName: ReposGetBranchRules,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetBranchRules
  },
  {
    Id: ReposGetRepoRulesets,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/rulesets?per_page={perPage}&page={page}&includes_parents={includesParents}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: includes_parents,
        Name: IncludesParents,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: true,
        Summary:
<br/>Default Value: true,
        ParameterName: includesParents,
        ArgumentName: includesParents,
        ParameterDefaultValue: true
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all repository rulesets,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetRepoRulesetsAsync,
    NotAsyncMethodName: ReposGetRepoRulesets,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetRepoRulesets
  },
  {
    Id: ReposCreateRepoRuleset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/rulesets",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the ruleset.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: target,
        Name: Target,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Branch,
            Tag,
            Push
          ],
          EnumValues: [
            branch,
            tag,
            push
          ]
        },
        IsRequired: false,
        Summary:
The target of the ruleset

**Note**: The `push` target is in beta and is subject to change.,
        ParameterName: target,
        ArgumentName: target,
        ParameterDefaultValue: default
      },
      {
        Id: enforcement,
        Name: Enforcement,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Disabled,
            Active,
            Evaluate
          ],
          EnumValues: [
            disabled,
            active,
            evaluate
          ]
        },
        IsRequired: true,
        Summary: The enforcement level of the ruleset. `evaluate` allows admins to test rules before enforcing them. Admins can view insights on the Rule Insights page (`evaluate` is only available with GitHub Enterprise).,
        ParameterName: enforcement,
        ArgumentName: enforcement,
        ParameterDefaultValue: default
      },
      {
        Id: bypass_actors,
        Name: BypassActors,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryRulesetBypassActor>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The actors that can bypass the rules in this ruleset,
        ParameterName: bypassActors,
        ArgumentName: bypassActors,
        ParameterDefaultValue: default
      },
      {
        Id: conditions,
        Name: Conditions,
        Type: {
          CSharpType: RepositoryRulesetConditions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            ref_name
          ],
          EnumValues: null
        },
        IsRequired: false,
        Summary: Parameters for a repository ruleset ref name condition,
        ParameterName: conditions,
        ArgumentName: conditions,
        ParameterDefaultValue: default
      },
      {
        Id: rules,
        Name: Rules,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryRule>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of rules within the ruleset.,
        ParameterName: rules,
        ArgumentName: rules,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a repository ruleset,
    RequestType: ,
    ResponseType: repository-ruleset,
    MethodName: ReposCreateRepoRulesetAsync,
    NotAsyncMethodName: ReposCreateRepoRuleset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateRepoRuleset
  },
  {
    Id: ReposGetRepoRuleSuites,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/rulesets/rule-suites?ref={ref}&time_period={timePeriod}&actor_name={actorName}&rule_suite_result={ruleSuiteResult}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      },
      {
        Id: time_period,
        Name: TimePeriod,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Hour,
            Day,
            Week,
            Month
          ],
          EnumValues: [
            hour,
            day,
            week,
            month
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: TimePeriod.Day,
        Summary:
<br/>Default Value: day,
        ParameterName: timePeriod,
        ArgumentName: timePeriod,
        ParameterDefaultValue: TimePeriod.Day
      },
      {
        Id: actor_name,
        Name: ActorName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: actorName,
        ArgumentName: actorName,
        ParameterDefaultValue: default
      },
      {
        Id: rule_suite_result,
        Name: RuleSuiteResult,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Pass,
            Fail,
            Bypass,
            All
          ],
          EnumValues: [
            pass,
            fail,
            bypass,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: RuleSuiteResult.All,
        Summary:
<br/>Default Value: all,
        ParameterName: ruleSuiteResult,
        ArgumentName: ruleSuiteResult,
        ParameterDefaultValue: RuleSuiteResult.All
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository rule suites,
    RequestType: ,
    ResponseType: rule-suites,
    MethodName: ReposGetRepoRuleSuitesAsync,
    NotAsyncMethodName: ReposGetRepoRuleSuites,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetRepoRuleSuites
  },
  {
    Id: ReposGetRepoRuleSuite,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/rulesets/rule-suites/{ruleSuiteId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: rule_suite_id,
        Name: RuleSuiteId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ruleSuiteId,
        ArgumentName: ruleSuiteId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository rule suite,
    RequestType: ,
    ResponseType: rule-suite,
    MethodName: ReposGetRepoRuleSuiteAsync,
    NotAsyncMethodName: ReposGetRepoRuleSuite,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetRepoRuleSuite
  },
  {
    Id: ReposGetRepoRuleset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/rulesets/{rulesetId}?includes_parents={includesParents}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ruleset_id,
        Name: RulesetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: rulesetId,
        ArgumentName: rulesetId,
        ParameterDefaultValue: default
      },
      {
        Id: includes_parents,
        Name: IncludesParents,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: true,
        Summary:
<br/>Default Value: true,
        ParameterName: includesParents,
        ArgumentName: includesParents,
        ParameterDefaultValue: true
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository ruleset,
    RequestType: ,
    ResponseType: repository-ruleset,
    MethodName: ReposGetRepoRulesetAsync,
    NotAsyncMethodName: ReposGetRepoRuleset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetRepoRuleset
  },
  {
    Id: ReposUpdateRepoRuleset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/rulesets/{rulesetId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ruleset_id,
        Name: RulesetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: rulesetId,
        ArgumentName: rulesetId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The name of the ruleset.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: target,
        Name: Target,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Branch,
            Tag,
            Push
          ],
          EnumValues: [
            branch,
            tag,
            push
          ]
        },
        IsRequired: false,
        Summary:
The target of the ruleset

**Note**: The `push` target is in beta and is subject to change.,
        ParameterName: target,
        ArgumentName: target,
        ParameterDefaultValue: default
      },
      {
        Id: enforcement,
        Name: Enforcement,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Disabled,
            Active,
            Evaluate
          ],
          EnumValues: [
            disabled,
            active,
            evaluate
          ]
        },
        IsRequired: false,
        Summary: The enforcement level of the ruleset. `evaluate` allows admins to test rules before enforcing them. Admins can view insights on the Rule Insights page (`evaluate` is only available with GitHub Enterprise).,
        ParameterName: enforcement,
        ArgumentName: enforcement,
        ParameterDefaultValue: default
      },
      {
        Id: bypass_actors,
        Name: BypassActors,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryRulesetBypassActor>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The actors that can bypass the rules in this ruleset,
        ParameterName: bypassActors,
        ArgumentName: bypassActors,
        ParameterDefaultValue: default
      },
      {
        Id: conditions,
        Name: Conditions,
        Type: {
          CSharpType: RepositoryRulesetConditions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            ref_name
          ],
          EnumValues: null
        },
        IsRequired: false,
        Summary: Parameters for a repository ruleset ref name condition,
        ParameterName: conditions,
        ArgumentName: conditions,
        ParameterDefaultValue: default
      },
      {
        Id: rules,
        Name: Rules,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryRule>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of rules within the ruleset.,
        ParameterName: rules,
        ArgumentName: rules,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Update a repository ruleset,
    RequestType: ,
    ResponseType: repository-ruleset,
    MethodName: ReposUpdateRepoRulesetAsync,
    NotAsyncMethodName: ReposUpdateRepoRuleset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposUpdateRepoRuleset
  },
  {
    Id: ReposDeleteRepoRuleset,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/rulesets/{rulesetId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ruleset_id,
        Name: RulesetId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: rulesetId,
        ArgumentName: rulesetId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a repository ruleset,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteRepoRulesetAsync,
    NotAsyncMethodName: ReposDeleteRepoRuleset,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteRepoRuleset
  },
  {
    Id: SecretScanningListAlertsForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/secret-scanning/alerts?state={state}&secret_type={secretType}&resolution={resolution}&sort={sort}&direction={direction}&page={page}&per_page={perPage}&before={before}&after={after}&validity={validity}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Resolved
          ],
          EnumValues: [
            open,
            resolved
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: secret_type,
        Name: SecretType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: secretType,
        ArgumentName: secretType,
        ParameterDefaultValue: default
      },
      {
        Id: resolution,
        Name: Resolution,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: resolution,
        ArgumentName: resolution,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: validity,
        Name: Validity,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: validity,
        ArgumentName: validity,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List secret scanning alerts for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: SecretScanningListAlertsForRepoAsync,
    NotAsyncMethodName: SecretScanningListAlertsForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.SecretScanningListAlertsForRepo
  },
  {
    Id: SecretScanningGetAlert,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/secret-scanning/alerts/{alertNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: alert_number,
        Name: AlertNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: The security alert number.,
        ParameterName: alertNumber,
        ArgumentName: alertNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a secret scanning alert,
    RequestType: ,
    ResponseType: secret-scanning-alert,
    MethodName: SecretScanningGetAlertAsync,
    NotAsyncMethodName: SecretScanningGetAlert,
    FileNameWithoutExtension: G.Api.EndPoints.SecretScanningGetAlert
  },
  {
    Id: SecretScanningUpdateAlert,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/secret-scanning/alerts/{alertNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: alert_number,
        Name: AlertNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: The security alert number.,
        ParameterName: alertNumber,
        ArgumentName: alertNumber,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Resolved
          ],
          EnumValues: [
            open,
            resolved
          ]
        },
        IsRequired: true,
        Summary: Sets the state of the secret scanning alert. You must provide `resolution` when you set the state to `resolved`.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: resolution,
        Name: Resolution,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            FalsePositive,
            WontFix,
            Revoked,
            UsedInTests
          ],
          EnumValues: [
            false_positive,
            wont_fix,
            revoked,
            used_in_tests
          ]
        },
        IsRequired: false,
        Summary: **Required when the `state` is `resolved`.** The reason for resolving the alert.,
        ParameterName: resolution,
        ArgumentName: resolution,
        ParameterDefaultValue: default
      },
      {
        Id: resolution_comment,
        Name: ResolutionComment,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An optional comment when closing an alert. Cannot be updated or deleted. Must be `null` when changing `state` to `open`.,
        ParameterName: resolutionComment,
        ArgumentName: resolutionComment,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a secret scanning alert,
    RequestType: ,
    ResponseType: secret-scanning-alert,
    MethodName: SecretScanningUpdateAlertAsync,
    NotAsyncMethodName: SecretScanningUpdateAlert,
    FileNameWithoutExtension: G.Api.EndPoints.SecretScanningUpdateAlert
  },
  {
    Id: SecretScanningListLocationsForAlert,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/secret-scanning/alerts/{alertNumber}/locations?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: alert_number,
        Name: AlertNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: The security alert number.,
        ParameterName: alertNumber,
        ArgumentName: alertNumber,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List locations for a secret scanning alert,
    RequestType: ,
    ResponseType: ,
    MethodName: SecretScanningListLocationsForAlertAsync,
    NotAsyncMethodName: SecretScanningListLocationsForAlert,
    FileNameWithoutExtension: G.Api.EndPoints.SecretScanningListLocationsForAlert
  },
  {
    Id: SecurityAdvisoriesListRepositoryAdvisories,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/security-advisories?direction={direction}&sort={sort}&before={before}&after={after}&per_page={perPage}&state={state}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Published
          ],
          EnumValues: [
            created,
            updated,
            published
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      },
      {
        Id: after,
        Name: After,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: after,
        ArgumentName: after,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Triage,
            Draft,
            Published,
            Closed
          ],
          EnumValues: [
            triage,
            draft,
            published,
            closed
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository security advisories,
    RequestType: ,
    ResponseType: ,
    MethodName: SecurityAdvisoriesListRepositoryAdvisoriesAsync,
    NotAsyncMethodName: SecurityAdvisoriesListRepositoryAdvisories,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesListRepositoryAdvisories
  },
  {
    Id: SecurityAdvisoriesCreateRepositoryAdvisory,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/security-advisories",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: summary,
        Name: Summary,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A short summary of the advisory.,
        ParameterName: summary,
        ArgumentName: summary,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A detailed description of what the advisory impacts.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: cve_id,
        Name: CveId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The Common Vulnerabilities and Exposures (CVE) ID.,
        ParameterName: cveId,
        ArgumentName: cveId,
        ParameterDefaultValue: default
      },
      {
        Id: vulnerabilities,
        Name: Vulnerabilities,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryAdvisoryCreateVulnerabilities>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A product affected by the vulnerability detailed in a repository security advisory.,
        ParameterName: vulnerabilities,
        ArgumentName: vulnerabilities,
        ParameterDefaultValue: default
      },
      {
        Id: cwe_ids,
        Name: CweIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A list of Common Weakness Enumeration (CWE) IDs.,
        ParameterName: cweIds,
        ArgumentName: cweIds,
        ParameterDefaultValue: default
      },
      {
        Id: credits,
        Name: Credits,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryAdvisoryCreateCredits?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A list of users receiving credit for their participation in the security advisory.,
        ParameterName: credits,
        ArgumentName: credits,
        ParameterDefaultValue: default
      },
      {
        Id: severity,
        Name: Severity,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Critical,
            High,
            Medium,
            Low
          ],
          EnumValues: [
            critical,
            high,
            medium,
            low
          ]
        },
        IsRequired: false,
        Summary: The severity of the advisory. You must choose between setting this field or `cvss_vector_string`.,
        ParameterName: severity,
        ArgumentName: severity,
        ParameterDefaultValue: default
      },
      {
        Id: cvss_vector_string,
        Name: CvssVectorString,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The CVSS vector that calculates the severity of the advisory. You must choose between setting this field or `severity`.,
        ParameterName: cvssVectorString,
        ArgumentName: cvssVectorString,
        ParameterDefaultValue: default
      },
      {
        Id: start_private_fork,
        Name: StartPrivateFork,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to create a temporary private fork of the repository to collaborate on a fix.
<br/>Default Value: false,
        ParameterName: startPrivateFork,
        ArgumentName: startPrivateFork,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a repository security advisory,
    RequestType: RepositoryAdvisoryCreate,
    ResponseType: repository-advisory,
    MethodName: SecurityAdvisoriesCreateRepositoryAdvisoryAsync,
    NotAsyncMethodName: SecurityAdvisoriesCreateRepositoryAdvisory,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesCreateRepositoryAdvisory
  },
  {
    Id: SecurityAdvisoriesCreatePrivateVulnerabilityReport,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/security-advisories/reports",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: summary,
        Name: Summary,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A short summary of the advisory.,
        ParameterName: summary,
        ArgumentName: summary,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A detailed description of what the advisory impacts.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: vulnerabilities,
        Name: Vulnerabilities,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<PrivateVulnerabilityReportCreateVulnerabilities?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of products affected by the vulnerability detailed in a repository security advisory.,
        ParameterName: vulnerabilities,
        ArgumentName: vulnerabilities,
        ParameterDefaultValue: default
      },
      {
        Id: cwe_ids,
        Name: CweIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A list of Common Weakness Enumeration (CWE) IDs.,
        ParameterName: cweIds,
        ArgumentName: cweIds,
        ParameterDefaultValue: default
      },
      {
        Id: severity,
        Name: Severity,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Critical,
            High,
            Medium,
            Low
          ],
          EnumValues: [
            critical,
            high,
            medium,
            low
          ]
        },
        IsRequired: false,
        Summary: The severity of the advisory. You must choose between setting this field or `cvss_vector_string`.,
        ParameterName: severity,
        ArgumentName: severity,
        ParameterDefaultValue: default
      },
      {
        Id: cvss_vector_string,
        Name: CvssVectorString,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The CVSS vector that calculates the severity of the advisory. You must choose between setting this field or `severity`.,
        ParameterName: cvssVectorString,
        ArgumentName: cvssVectorString,
        ParameterDefaultValue: default
      },
      {
        Id: start_private_fork,
        Name: StartPrivateFork,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to create a temporary private fork of the repository to collaborate on a fix.
<br/>Default Value: false,
        ParameterName: startPrivateFork,
        ArgumentName: startPrivateFork,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Privately report a security vulnerability,
    RequestType: PrivateVulnerabilityReportCreate,
    ResponseType: repository-advisory,
    MethodName: SecurityAdvisoriesCreatePrivateVulnerabilityReportAsync,
    NotAsyncMethodName: SecurityAdvisoriesCreatePrivateVulnerabilityReport,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesCreatePrivateVulnerabilityReport
  },
  {
    Id: SecurityAdvisoriesGetRepositoryAdvisory,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/security-advisories/{ghsaId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ghsa_id,
        Name: GhsaId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ghsaId,
        ArgumentName: ghsaId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository security advisory,
    RequestType: ,
    ResponseType: repository-advisory,
    MethodName: SecurityAdvisoriesGetRepositoryAdvisoryAsync,
    NotAsyncMethodName: SecurityAdvisoriesGetRepositoryAdvisory,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesGetRepositoryAdvisory
  },
  {
    Id: SecurityAdvisoriesUpdateRepositoryAdvisory,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/security-advisories/{ghsaId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ghsa_id,
        Name: GhsaId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ghsaId,
        ArgumentName: ghsaId,
        ParameterDefaultValue: default
      },
      {
        Id: summary,
        Name: Summary,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short summary of the advisory.,
        ParameterName: summary,
        ArgumentName: summary,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A detailed description of what the advisory impacts.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: cve_id,
        Name: CveId,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The Common Vulnerabilities and Exposures (CVE) ID.,
        ParameterName: cveId,
        ArgumentName: cveId,
        ParameterDefaultValue: default
      },
      {
        Id: vulnerabilities,
        Name: Vulnerabilities,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryAdvisoryUpdateVulnerabilities?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A product affected by the vulnerability detailed in a repository security advisory.,
        ParameterName: vulnerabilities,
        ArgumentName: vulnerabilities,
        ParameterDefaultValue: default
      },
      {
        Id: cwe_ids,
        Name: CweIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A list of Common Weakness Enumeration (CWE) IDs.,
        ParameterName: cweIds,
        ArgumentName: cweIds,
        ParameterDefaultValue: default
      },
      {
        Id: credits,
        Name: Credits,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<RepositoryAdvisoryUpdateCredits?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A list of users receiving credit for their participation in the security advisory.,
        ParameterName: credits,
        ArgumentName: credits,
        ParameterDefaultValue: default
      },
      {
        Id: severity,
        Name: Severity,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Critical,
            High,
            Medium,
            Low
          ],
          EnumValues: [
            critical,
            high,
            medium,
            low
          ]
        },
        IsRequired: false,
        Summary: The severity of the advisory. You must choose between setting this field or `cvss_vector_string`.,
        ParameterName: severity,
        ArgumentName: severity,
        ParameterDefaultValue: default
      },
      {
        Id: cvss_vector_string,
        Name: CvssVectorString,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The CVSS vector that calculates the severity of the advisory. You must choose between setting this field or `severity`.,
        ParameterName: cvssVectorString,
        ArgumentName: cvssVectorString,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Published,
            Closed,
            Draft
          ],
          EnumValues: [
            published,
            closed,
            draft
          ]
        },
        IsRequired: false,
        Summary: The state of the advisory.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: collaborating_users,
        Name: CollaboratingUsers,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A list of usernames who have been granted write access to the advisory.,
        ParameterName: collaboratingUsers,
        ArgumentName: collaboratingUsers,
        ParameterDefaultValue: default
      },
      {
        Id: collaborating_teams,
        Name: CollaboratingTeams,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A list of team slugs which have been granted write access to the advisory.,
        ParameterName: collaboratingTeams,
        ArgumentName: collaboratingTeams,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a repository security advisory,
    RequestType: RepositoryAdvisoryUpdate,
    ResponseType: repository-advisory,
    MethodName: SecurityAdvisoriesUpdateRepositoryAdvisoryAsync,
    NotAsyncMethodName: SecurityAdvisoriesUpdateRepositoryAdvisory,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesUpdateRepositoryAdvisory
  },
  {
    Id: SecurityAdvisoriesCreateRepositoryAdvisoryCveRequest,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/security-advisories/{ghsaId}/cve",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ghsa_id,
        Name: GhsaId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ghsaId,
        ArgumentName: ghsaId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Request a CVE for a repository security advisory,
    RequestType: ,
    ResponseType: ,
    MethodName: SecurityAdvisoriesCreateRepositoryAdvisoryCveRequestAsync,
    NotAsyncMethodName: SecurityAdvisoriesCreateRepositoryAdvisoryCveRequest,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesCreateRepositoryAdvisoryCveRequest
  },
  {
    Id: SecurityAdvisoriesCreateFork,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/security-advisories/{ghsaId}/forks",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ghsa_id,
        Name: GhsaId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ghsaId,
        ArgumentName: ghsaId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a temporary private fork,
    RequestType: ,
    ResponseType: full-repository,
    MethodName: SecurityAdvisoriesCreateForkAsync,
    NotAsyncMethodName: SecurityAdvisoriesCreateFork,
    FileNameWithoutExtension: G.Api.EndPoints.SecurityAdvisoriesCreateFork
  },
  {
    Id: ActivityListStargazersForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/stargazers?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List stargazers,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListStargazersForRepoAsync,
    NotAsyncMethodName: ActivityListStargazersForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListStargazersForRepo
  },
  {
    Id: ReposGetCodeFrequencyStats,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/stats/code_frequency",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the weekly commit activity,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetCodeFrequencyStatsAsync,
    NotAsyncMethodName: ReposGetCodeFrequencyStats,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCodeFrequencyStats
  },
  {
    Id: ReposGetCommitActivityStats,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/stats/commit_activity",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the last year of commit activity,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetCommitActivityStatsAsync,
    NotAsyncMethodName: ReposGetCommitActivityStats,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetCommitActivityStats
  },
  {
    Id: ReposGetContributorsStats,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/stats/contributors",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all contributor commit activity,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetContributorsStatsAsync,
    NotAsyncMethodName: ReposGetContributorsStats,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetContributorsStats
  },
  {
    Id: ReposGetParticipationStats,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/stats/participation",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the weekly commit count,
    RequestType: ,
    ResponseType: participation-stats,
    MethodName: ReposGetParticipationStatsAsync,
    NotAsyncMethodName: ReposGetParticipationStats,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetParticipationStats
  },
  {
    Id: ReposGetPunchCardStats,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/stats/punch_card",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the hourly commit count for each day,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetPunchCardStatsAsync,
    NotAsyncMethodName: ReposGetPunchCardStats,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetPunchCardStats
  },
  {
    Id: ReposCreateCommitStatus,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/statuses/{sha}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: sha,
        Name: Sha,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: sha,
        ArgumentName: sha,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Error,
            Failure,
            Pending,
            Success
          ],
          EnumValues: [
            error,
            failure,
            pending,
            success
          ]
        },
        IsRequired: true,
        Summary: The state of the status.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: target_url,
        Name: TargetUrl,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The target URL to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the source of the status.  
For example, if your continuous integration system is posting build status, you would want to provide the deep link for the build output for this specific SHA:  
`http://ci.example.com/user/repo/build/sha`,
        ParameterName: targetUrl,
        ArgumentName: targetUrl,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short description of the status.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: context,
        Name: Context,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: "default",
        Summary:
A string label to differentiate this status from the status of other systems. This field is case-insensitive.
<br/>Default Value: default,
        ParameterName: context,
        ArgumentName: context,
        ParameterDefaultValue: "default"
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a commit status,
    RequestType: ,
    ResponseType: status,
    MethodName: ReposCreateCommitStatusAsync,
    NotAsyncMethodName: ReposCreateCommitStatus,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateCommitStatus
  },
  {
    Id: ActivityListWatchersForRepo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/subscribers?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List watchers,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListWatchersForRepoAsync,
    NotAsyncMethodName: ActivityListWatchersForRepo,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListWatchersForRepo
  },
  {
    Id: ActivityGetRepoSubscription,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/subscription",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a repository subscription,
    RequestType: ,
    ResponseType: repository-subscription,
    MethodName: ActivityGetRepoSubscriptionAsync,
    NotAsyncMethodName: ActivityGetRepoSubscription,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityGetRepoSubscription
  },
  {
    Id: ActivitySetRepoSubscription,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/subscription",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: subscribed,
        Name: Subscribed,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Determines if notifications should be received from this repository.,
        ParameterName: subscribed,
        ArgumentName: subscribed,
        ParameterDefaultValue: default
      },
      {
        Id: ignored,
        Name: Ignored,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Determines if all notifications should be blocked from this repository.,
        ParameterName: ignored,
        ArgumentName: ignored,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set a repository subscription,
    RequestType: ,
    ResponseType: repository-subscription,
    MethodName: ActivitySetRepoSubscriptionAsync,
    NotAsyncMethodName: ActivitySetRepoSubscription,
    FileNameWithoutExtension: G.Api.EndPoints.ActivitySetRepoSubscription
  },
  {
    Id: ActivityDeleteRepoSubscription,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/subscription",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a repository subscription,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityDeleteRepoSubscriptionAsync,
    NotAsyncMethodName: ActivityDeleteRepoSubscription,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityDeleteRepoSubscription
  },
  {
    Id: ReposListTags,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/tags?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository tags,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListTagsAsync,
    NotAsyncMethodName: ReposListTags,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListTags
  },
  {
    Id: ReposListTagProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/tags/protection",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List tag protection states for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListTagProtectionAsync,
    NotAsyncMethodName: ReposListTagProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListTagProtection
  },
  {
    Id: ReposCreateTagProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/tags/protection",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: pattern,
        Name: Pattern,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: An optional glob pattern to match against when enforcing tag protection.,
        ParameterName: pattern,
        ArgumentName: pattern,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a tag protection state for a repository,
    RequestType: ,
    ResponseType: tag-protection,
    MethodName: ReposCreateTagProtectionAsync,
    NotAsyncMethodName: ReposCreateTagProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateTagProtection
  },
  {
    Id: ReposDeleteTagProtection,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/tags/protection/{tagProtectionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: tag_protection_id,
        Name: TagProtectionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: tagProtectionId,
        ArgumentName: tagProtectionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a tag protection state for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeleteTagProtectionAsync,
    NotAsyncMethodName: ReposDeleteTagProtection,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeleteTagProtection
  },
  {
    Id: ReposDownloadTarballArchive,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/tarball/{ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Download a repository archive (tar),
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDownloadTarballArchiveAsync,
    NotAsyncMethodName: ReposDownloadTarballArchive,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDownloadTarballArchive
  },
  {
    Id: ReposListTeams,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/teams?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository teams,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListTeamsAsync,
    NotAsyncMethodName: ReposListTeams,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListTeams
  },
  {
    Id: ReposGetAllTopics,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/topics?page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all repository topics,
    RequestType: ,
    ResponseType: topic,
    MethodName: ReposGetAllTopicsAsync,
    NotAsyncMethodName: ReposGetAllTopics,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetAllTopics
  },
  {
    Id: ReposReplaceAllTopics,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/topics",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: names,
        Name: Names,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: An array of topics to add to the repository. Pass one or more topics to _replace_ the set of existing topics. Send an empty array (`[]`) to clear all topics from the repository. **Note:** Topic `names` cannot contain uppercase letters.,
        ParameterName: names,
        ArgumentName: names,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Replace all repository topics,
    RequestType: ,
    ResponseType: topic,
    MethodName: ReposReplaceAllTopicsAsync,
    NotAsyncMethodName: ReposReplaceAllTopics,
    FileNameWithoutExtension: G.Api.EndPoints.ReposReplaceAllTopics
  },
  {
    Id: ReposGetClones,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/traffic/clones?per={per}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per,
        Name: Per,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Day,
            Week
          ],
          EnumValues: [
            day,
            week
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Per.Day,
        Summary:
<br/>Default Value: day,
        ParameterName: per,
        ArgumentName: per,
        ParameterDefaultValue: Per.Day
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get repository clones,
    RequestType: ,
    ResponseType: clone-traffic,
    MethodName: ReposGetClonesAsync,
    NotAsyncMethodName: ReposGetClones,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetClones
  },
  {
    Id: ReposGetTopPaths,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/traffic/popular/paths",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get top referral paths,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetTopPathsAsync,
    NotAsyncMethodName: ReposGetTopPaths,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetTopPaths
  },
  {
    Id: ReposGetTopReferrers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/traffic/popular/referrers",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get top referral sources,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposGetTopReferrersAsync,
    NotAsyncMethodName: ReposGetTopReferrers,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetTopReferrers
  },
  {
    Id: ReposGetViews,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/traffic/views?per={per}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: per,
        Name: Per,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Day,
            Week
          ],
          EnumValues: [
            day,
            week
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Per.Day,
        Summary:
<br/>Default Value: day,
        ParameterName: per,
        ArgumentName: per,
        ParameterDefaultValue: Per.Day
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get page views,
    RequestType: ,
    ResponseType: view-traffic,
    MethodName: ReposGetViewsAsync,
    NotAsyncMethodName: ReposGetViews,
    FileNameWithoutExtension: G.Api.EndPoints.ReposGetViews
  },
  {
    Id: ReposTransfer,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/transfer",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: new_owner,
        Name: NewOwner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The username or organization name the repository will be transferred to.,
        ParameterName: newOwner,
        ArgumentName: newOwner,
        ParameterDefaultValue: default
      },
      {
        Id: new_name,
        Name: NewName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The new name to be given to the repository.,
        ParameterName: newName,
        ArgumentName: newName,
        ParameterDefaultValue: default
      },
      {
        Id: team_ids,
        Name: TeamIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: ID of the team or teams to add to the repository. Teams can only be added to organization-owned repositories.,
        ParameterName: teamIds,
        ArgumentName: teamIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Transfer a repository,
    RequestType: ,
    ResponseType: minimal-repository,
    MethodName: ReposTransferAsync,
    NotAsyncMethodName: ReposTransfer,
    FileNameWithoutExtension: G.Api.EndPoints.ReposTransfer
  },
  {
    Id: ReposCheckVulnerabilityAlerts,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/vulnerability-alerts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if vulnerability alerts are enabled for a repository,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposCheckVulnerabilityAlertsAsync,
    NotAsyncMethodName: ReposCheckVulnerabilityAlerts,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCheckVulnerabilityAlerts
  },
  {
    Id: ReposEnableVulnerabilityAlerts,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/vulnerability-alerts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Enable vulnerability alerts,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposEnableVulnerabilityAlertsAsync,
    NotAsyncMethodName: ReposEnableVulnerabilityAlerts,
    FileNameWithoutExtension: G.Api.EndPoints.ReposEnableVulnerabilityAlerts
  },
  {
    Id: ReposDisableVulnerabilityAlerts,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/vulnerability-alerts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Disable vulnerability alerts,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDisableVulnerabilityAlertsAsync,
    NotAsyncMethodName: ReposDisableVulnerabilityAlerts,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDisableVulnerabilityAlerts
  },
  {
    Id: ReposDownloadZipballArchive,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{owner}/{repo}/zipball/{ref}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: ref,
        Name: Ref,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: ref,
        ArgumentName: ref,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Download a repository archive (zip),
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDownloadZipballArchiveAsync,
    NotAsyncMethodName: ReposDownloadZipballArchive,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDownloadZipballArchive
  },
  {
    Id: ReposCreateUsingTemplate,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repos/{templateOwner}/{templateRepo}/generate",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: template_owner,
        Name: TemplateOwner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: templateOwner,
        ArgumentName: templateOwner,
        ParameterDefaultValue: default
      },
      {
        Id: template_repo,
        Name: TemplateRepo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: templateRepo,
        ArgumentName: templateRepo,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the new repository.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short description of the new repository.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: include_all_branches,
        Name: IncludeAllBranches,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Set to `true` to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: `false`.
<br/>Default Value: false,
        ParameterName: includeAllBranches,
        ArgumentName: includeAllBranches,
        ParameterDefaultValue: false
      },
      {
        Id: private,
        Name: Private,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Either `true` to create a new private repository or `false` to create a new public one.
<br/>Default Value: false,
        ParameterName: private,
        ArgumentName: private,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a repository using a template,
    RequestType: ,
    ResponseType: full-repository,
    MethodName: ReposCreateUsingTemplateAsync,
    NotAsyncMethodName: ReposCreateUsingTemplate,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateUsingTemplate
  },
  {
    Id: ReposListPublic,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/repositories?since={since}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public repositories,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListPublicAsync,
    NotAsyncMethodName: ReposListPublic,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListPublic
  },
  {
    Id: SearchCode,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/search/code?q={q}&sort={sort}&order={order}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: q,
        Name: Q,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: q,
        ArgumentName: q,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Indexed
          ],
          EnumValues: [
            indexed
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: default
      },
      {
        Id: order,
        Name: Order,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Desc,
            Asc
          ],
          EnumValues: [
            desc,
            asc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Order.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: order,
        ArgumentName: order,
        ParameterDefaultValue: Order.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Search code,
    RequestType: ,
    ResponseType: ,
    MethodName: SearchCodeAsync,
    NotAsyncMethodName: SearchCode,
    FileNameWithoutExtension: G.Api.EndPoints.SearchCode
  },
  {
    Id: SearchCommits,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/search/commits?q={q}&sort={sort}&order={order}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: q,
        Name: Q,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: q,
        ArgumentName: q,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            AuthorDate,
            CommitterDate
          ],
          EnumValues: [
            author-date,
            committer-date
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: default
      },
      {
        Id: order,
        Name: Order,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Desc,
            Asc
          ],
          EnumValues: [
            desc,
            asc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Order.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: order,
        ArgumentName: order,
        ParameterDefaultValue: Order.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Search commits,
    RequestType: ,
    ResponseType: ,
    MethodName: SearchCommitsAsync,
    NotAsyncMethodName: SearchCommits,
    FileNameWithoutExtension: G.Api.EndPoints.SearchCommits
  },
  {
    Id: SearchIssuesAndPullRequests,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/search/issues?q={q}&sort={sort}&order={order}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: q,
        Name: Q,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: q,
        ArgumentName: q,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Comments,
            Reactions,
            ReactionsPlus1,
            Reactions1,
            ReactionsSmile,
            ReactionsThinkingFace,
            ReactionsHeart,
            ReactionsTada,
            Interactions,
            Created,
            Updated
          ],
          EnumValues: [
            comments,
            reactions,
            reactions-+1,
            reactions--1,
            reactions-smile,
            reactions-thinking_face,
            reactions-heart,
            reactions-tada,
            interactions,
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: default
      },
      {
        Id: order,
        Name: Order,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Desc,
            Asc
          ],
          EnumValues: [
            desc,
            asc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Order.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: order,
        ArgumentName: order,
        ParameterDefaultValue: Order.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Search issues and pull requests,
    RequestType: ,
    ResponseType: ,
    MethodName: SearchIssuesAndPullRequestsAsync,
    NotAsyncMethodName: SearchIssuesAndPullRequests,
    FileNameWithoutExtension: G.Api.EndPoints.SearchIssuesAndPullRequests
  },
  {
    Id: SearchLabels,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/search/labels?repository_id={repositoryId}&q={q}&sort={sort}&order={order}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      },
      {
        Id: q,
        Name: Q,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: q,
        ArgumentName: q,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: default
      },
      {
        Id: order,
        Name: Order,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Desc,
            Asc
          ],
          EnumValues: [
            desc,
            asc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Order.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: order,
        ArgumentName: order,
        ParameterDefaultValue: Order.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Search labels,
    RequestType: ,
    ResponseType: ,
    MethodName: SearchLabelsAsync,
    NotAsyncMethodName: SearchLabels,
    FileNameWithoutExtension: G.Api.EndPoints.SearchLabels
  },
  {
    Id: SearchRepos,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/search/repositories?q={q}&sort={sort}&order={order}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: q,
        Name: Q,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: q,
        ArgumentName: q,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Stars,
            Forks,
            HelpWantedIssues,
            Updated
          ],
          EnumValues: [
            stars,
            forks,
            help-wanted-issues,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: default
      },
      {
        Id: order,
        Name: Order,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Desc,
            Asc
          ],
          EnumValues: [
            desc,
            asc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Order.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: order,
        ArgumentName: order,
        ParameterDefaultValue: Order.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Search repositories,
    RequestType: ,
    ResponseType: ,
    MethodName: SearchReposAsync,
    NotAsyncMethodName: SearchRepos,
    FileNameWithoutExtension: G.Api.EndPoints.SearchRepos
  },
  {
    Id: SearchTopics,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/search/topics?q={q}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: q,
        Name: Q,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: q,
        ArgumentName: q,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Search topics,
    RequestType: ,
    ResponseType: ,
    MethodName: SearchTopicsAsync,
    NotAsyncMethodName: SearchTopics,
    FileNameWithoutExtension: G.Api.EndPoints.SearchTopics
  },
  {
    Id: SearchUsers,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/search/users?q={q}&sort={sort}&order={order}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: q,
        Name: Q,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: q,
        ArgumentName: q,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Followers,
            Repositories,
            Joined
          ],
          EnumValues: [
            followers,
            repositories,
            joined
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: default
      },
      {
        Id: order,
        Name: Order,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Desc,
            Asc
          ],
          EnumValues: [
            desc,
            asc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Order.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: order,
        ArgumentName: order,
        ParameterDefaultValue: Order.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Search users,
    RequestType: ,
    ResponseType: ,
    MethodName: SearchUsersAsync,
    NotAsyncMethodName: SearchUsers,
    FileNameWithoutExtension: G.Api.EndPoints.SearchUsers
  },
  {
    Id: TeamsGetLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a team (Legacy),
    RequestType: ,
    ResponseType: team-full,
    MethodName: TeamsGetLegacyAsync,
    NotAsyncMethodName: TeamsGetLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsGetLegacy
  },
  {
    Id: TeamsUpdateLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The name of the team.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The description of the team.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: privacy,
        Name: Privacy,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Secret,
            Closed
          ],
          EnumValues: [
            secret,
            closed
          ]
        },
        IsRequired: false,
        Summary:
The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. The options are:  
**For a non-nested team:**  
 * `secret` - only visible to organization owners and members of this team.  
 * `closed` - visible to all members of this organization.  
**For a parent or child team:**  
 * `closed` - visible to all members of this organization.,
        ParameterName: privacy,
        ArgumentName: privacy,
        ParameterDefaultValue: default
      },
      {
        Id: notification_setting,
        Name: NotificationSetting,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            NotificationsEnabled,
            NotificationsDisabled
          ],
          EnumValues: [
            notifications_enabled,
            notifications_disabled
          ]
        },
        IsRequired: false,
        Summary:
The notification setting the team has chosen. Editing teams without specifying this parameter leaves `notification_setting` intact. The options are: 
 * `notifications_enabled` - team members receive notifications when the team is @mentioned.  
 * `notifications_disabled` - no one receives notifications.,
        ParameterName: notificationSetting,
        ArgumentName: notificationSetting,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Pull,
            Push,
            Admin
          ],
          EnumValues: [
            pull,
            push,
            admin
          ]
        },
        IsRequired: false,
        DefaultValue: TestPermission.Pull,
        Summary:
**Deprecated**. The permission that new repositories will be added to the team with when none is specified.
<br/>Default Value: pull,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: TestPermission.Pull
      },
      {
        Id: parent_team_id,
        Name: ParentTeamId,
        Type: {
          CSharpType: int?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The ID of a team to set as the parent team.,
        ParameterName: parentTeamId,
        ArgumentName: parentTeamId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a team (Legacy),
    RequestType: ,
    ResponseType: team-full,
    MethodName: TeamsUpdateLegacyAsync,
    NotAsyncMethodName: TeamsUpdateLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsUpdateLegacy
  },
  {
    Id: TeamsDeleteLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a team (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsDeleteLegacyAsync,
    NotAsyncMethodName: TeamsDeleteLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsDeleteLegacy
  },
  {
    Id: TeamsListDiscussionsLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions?direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List discussions (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListDiscussionsLegacyAsync,
    NotAsyncMethodName: TeamsListDiscussionsLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListDiscussionsLegacy
  },
  {
    Id: TeamsCreateDiscussionLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The discussion post's title.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The discussion post's body text.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      },
      {
        Id: private,
        Name: Private,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Private posts are only visible to team members, organization owners, and team maintainers. Public posts are visible to all members of the organization. Set to `true` to create a private post.
<br/>Default Value: false,
        ParameterName: private,
        ArgumentName: private,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a discussion (Legacy),
    RequestType: ,
    ResponseType: team-discussion,
    MethodName: TeamsCreateDiscussionLegacyAsync,
    NotAsyncMethodName: TeamsCreateDiscussionLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsCreateDiscussionLegacy
  },
  {
    Id: TeamsGetDiscussionLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a discussion (Legacy),
    RequestType: ,
    ResponseType: team-discussion,
    MethodName: TeamsGetDiscussionLegacyAsync,
    NotAsyncMethodName: TeamsGetDiscussionLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsGetDiscussionLegacy
  },
  {
    Id: TeamsUpdateDiscussionLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The discussion post's title.,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The discussion post's body text.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a discussion (Legacy),
    RequestType: ,
    ResponseType: team-discussion,
    MethodName: TeamsUpdateDiscussionLegacyAsync,
    NotAsyncMethodName: TeamsUpdateDiscussionLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsUpdateDiscussionLegacy
  },
  {
    Id: TeamsDeleteDiscussionLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a discussion (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsDeleteDiscussionLegacyAsync,
    NotAsyncMethodName: TeamsDeleteDiscussionLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsDeleteDiscussionLegacy
  },
  {
    Id: TeamsListDiscussionCommentsLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}/comments?direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List discussion comments (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListDiscussionCommentsLegacyAsync,
    NotAsyncMethodName: TeamsListDiscussionCommentsLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListDiscussionCommentsLegacy
  },
  {
    Id: TeamsCreateDiscussionCommentLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}/comments",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The discussion comment's body text.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a discussion comment (Legacy),
    RequestType: ,
    ResponseType: team-discussion-comment,
    MethodName: TeamsCreateDiscussionCommentLegacyAsync,
    NotAsyncMethodName: TeamsCreateDiscussionCommentLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsCreateDiscussionCommentLegacy
  },
  {
    Id: TeamsGetDiscussionCommentLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}/comments/{commentNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a discussion comment (Legacy),
    RequestType: ,
    ResponseType: team-discussion-comment,
    MethodName: TeamsGetDiscussionCommentLegacyAsync,
    NotAsyncMethodName: TeamsGetDiscussionCommentLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsGetDiscussionCommentLegacy
  },
  {
    Id: TeamsUpdateDiscussionCommentLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}/comments/{commentNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The discussion comment's body text.,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a discussion comment (Legacy),
    RequestType: ,
    ResponseType: team-discussion-comment,
    MethodName: TeamsUpdateDiscussionCommentLegacyAsync,
    NotAsyncMethodName: TeamsUpdateDiscussionCommentLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsUpdateDiscussionCommentLegacy
  },
  {
    Id: TeamsDeleteDiscussionCommentLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}/comments/{commentNumber}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a discussion comment (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsDeleteDiscussionCommentLegacyAsync,
    NotAsyncMethodName: TeamsDeleteDiscussionCommentLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsDeleteDiscussionCommentLegacy
  },
  {
    Id: ReactionsListForTeamDiscussionCommentLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}/comments/{commentNumber}/reactions?content={content}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reactions for a team discussion comment (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsListForTeamDiscussionCommentLegacyAsync,
    NotAsyncMethodName: ReactionsListForTeamDiscussionCommentLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsListForTeamDiscussionCommentLegacy
  },
  {
    Id: ReactionsCreateForTeamDiscussionCommentLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}/comments/{commentNumber}/reactions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: comment_number,
        Name: CommentNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: commentNumber,
        ArgumentName: commentNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: true,
        Summary: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the team discussion comment.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create reaction for a team discussion comment (Legacy),
    RequestType: ,
    ResponseType: reaction,
    MethodName: ReactionsCreateForTeamDiscussionCommentLegacyAsync,
    NotAsyncMethodName: ReactionsCreateForTeamDiscussionCommentLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsCreateForTeamDiscussionCommentLegacy
  },
  {
    Id: ReactionsListForTeamDiscussionLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}/reactions?content={content}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List reactions for a team discussion (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: ReactionsListForTeamDiscussionLegacyAsync,
    NotAsyncMethodName: ReactionsListForTeamDiscussionLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsListForTeamDiscussionLegacy
  },
  {
    Id: ReactionsCreateForTeamDiscussionLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/discussions/{discussionNumber}/reactions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: discussion_number,
        Name: DiscussionNumber,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: discussionNumber,
        ArgumentName: discussionNumber,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Plus1,
            Minus1,
            Laugh,
            Confused,
            Heart,
            Hooray,
            Rocket,
            Eyes
          ],
          EnumValues: [
            +1,
            -1,
            laugh,
            confused,
            heart,
            hooray,
            rocket,
            eyes
          ]
        },
        IsRequired: true,
        Summary: The [reaction type](https://docs.github.com/rest/reactions/reactions#about-reactions) to add to the team discussion.,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create reaction for a team discussion (Legacy),
    RequestType: ,
    ResponseType: reaction,
    MethodName: ReactionsCreateForTeamDiscussionLegacyAsync,
    NotAsyncMethodName: ReactionsCreateForTeamDiscussionLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.ReactionsCreateForTeamDiscussionLegacy
  },
  {
    Id: TeamsListPendingInvitationsLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/invitations?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List pending team invitations (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListPendingInvitationsLegacyAsync,
    NotAsyncMethodName: TeamsListPendingInvitationsLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListPendingInvitationsLegacy
  },
  {
    Id: TeamsListMembersLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/members?role={role}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: role,
        Name: Role,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Member,
            Maintainer,
            All
          ],
          EnumValues: [
            member,
            maintainer,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Role.All,
        Summary:
<br/>Default Value: all,
        ParameterName: role,
        ArgumentName: role,
        ParameterDefaultValue: Role.All
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List team members (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListMembersLegacyAsync,
    NotAsyncMethodName: TeamsListMembersLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListMembersLegacy
  },
  {
    Id: TeamsGetMemberLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/members/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get team member (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsGetMemberLegacyAsync,
    NotAsyncMethodName: TeamsGetMemberLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsGetMemberLegacy
  },
  {
    Id: TeamsAddMemberLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/members/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add team member (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsAddMemberLegacyAsync,
    NotAsyncMethodName: TeamsAddMemberLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsAddMemberLegacy
  },
  {
    Id: TeamsRemoveMemberLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/members/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove team member (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsRemoveMemberLegacyAsync,
    NotAsyncMethodName: TeamsRemoveMemberLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsRemoveMemberLegacy
  },
  {
    Id: TeamsGetMembershipForUserLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/memberships/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get team membership for a user (Legacy),
    RequestType: ,
    ResponseType: team-membership,
    MethodName: TeamsGetMembershipForUserLegacyAsync,
    NotAsyncMethodName: TeamsGetMembershipForUserLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsGetMembershipForUserLegacy
  },
  {
    Id: TeamsAddOrUpdateMembershipForUserLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/memberships/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: role,
        Name: Role,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Member,
            Maintainer
          ],
          EnumValues: [
            member,
            maintainer
          ]
        },
        IsRequired: false,
        DefaultValue: TestRole.Member,
        Summary:
The role that this user should have in the team.
<br/>Default Value: member,
        ParameterName: role,
        ArgumentName: role,
        ParameterDefaultValue: TestRole.Member
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add or update team membership for a user (Legacy),
    RequestType: ,
    ResponseType: team-membership,
    MethodName: TeamsAddOrUpdateMembershipForUserLegacyAsync,
    NotAsyncMethodName: TeamsAddOrUpdateMembershipForUserLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsAddOrUpdateMembershipForUserLegacy
  },
  {
    Id: TeamsRemoveMembershipForUserLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/memberships/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove team membership for a user (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsRemoveMembershipForUserLegacyAsync,
    NotAsyncMethodName: TeamsRemoveMembershipForUserLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsRemoveMembershipForUserLegacy
  },
  {
    Id: TeamsListProjectsLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/projects?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List team projects (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListProjectsLegacyAsync,
    NotAsyncMethodName: TeamsListProjectsLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListProjectsLegacy
  },
  {
    Id: TeamsCheckPermissionsForProjectLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/projects/{projectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check team permissions for a project (Legacy),
    RequestType: ,
    ResponseType: team-project,
    MethodName: TeamsCheckPermissionsForProjectLegacyAsync,
    NotAsyncMethodName: TeamsCheckPermissionsForProjectLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsCheckPermissionsForProjectLegacy
  },
  {
    Id: TeamsAddOrUpdateProjectPermissionsLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/projects/{projectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Read,
            Write,
            Admin
          ],
          EnumValues: [
            read,
            write,
            admin
          ]
        },
        IsRequired: false,
        Summary: The permission to grant to the team for this project. Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling this endpoint. For more information, see "[HTTP method](https://docs.github.com/rest/guides/getting-started-with-the-rest-api#http-method).",
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add or update team project permissions (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsAddOrUpdateProjectPermissionsLegacyAsync,
    NotAsyncMethodName: TeamsAddOrUpdateProjectPermissionsLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsAddOrUpdateProjectPermissionsLegacy
  },
  {
    Id: TeamsRemoveProjectLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/projects/{projectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: project_id,
        Name: ProjectId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: projectId,
        ArgumentName: projectId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a project from a team (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsRemoveProjectLegacyAsync,
    NotAsyncMethodName: TeamsRemoveProjectLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsRemoveProjectLegacy
  },
  {
    Id: TeamsListReposLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/repos?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List team repositories (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListReposLegacyAsync,
    NotAsyncMethodName: TeamsListReposLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListReposLegacy
  },
  {
    Id: TeamsCheckPermissionsForRepoLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/repos/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check team permissions for a repository (Legacy),
    RequestType: ,
    ResponseType: team-repository,
    MethodName: TeamsCheckPermissionsForRepoLegacyAsync,
    NotAsyncMethodName: TeamsCheckPermissionsForRepoLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsCheckPermissionsForRepoLegacy
  },
  {
    Id: TeamsAddOrUpdateRepoPermissionsLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/repos/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      },
      {
        Id: permission,
        Name: Permission,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Pull,
            Push,
            Admin
          ],
          EnumValues: [
            pull,
            push,
            admin
          ]
        },
        IsRequired: false,
        Summary: The permission to grant the team on this repository. If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.,
        ParameterName: permission,
        ArgumentName: permission,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add or update team repository permissions (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsAddOrUpdateRepoPermissionsLegacyAsync,
    NotAsyncMethodName: TeamsAddOrUpdateRepoPermissionsLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsAddOrUpdateRepoPermissionsLegacy
  },
  {
    Id: TeamsRemoveRepoLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/repos/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a repository from a team (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsRemoveRepoLegacyAsync,
    NotAsyncMethodName: TeamsRemoveRepoLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsRemoveRepoLegacy
  },
  {
    Id: TeamsListChildLegacy,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/teams/{teamId}/teams?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List child teams (Legacy),
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListChildLegacyAsync,
    NotAsyncMethodName: TeamsListChildLegacy,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListChildLegacy
  },
  {
    Id: UsersGetAuthenticated,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersGetAuthenticatedAsync,
    NotAsyncMethodName: UsersGetAuthenticated,
    FileNameWithoutExtension: G.Api.EndPoints.UsersGetAuthenticated
  },
  {
    Id: UsersUpdateAuthenticated,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The new name of the user.
<br/>Example: Omar Jahandar,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: email,
        Name: Email,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The publicly visible email address of the user.
<br/>Example: omar@example.com,
        ParameterName: email,
        ArgumentName: email,
        ParameterDefaultValue: default
      },
      {
        Id: blog,
        Name: Blog,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The new blog URL of the user.
<br/>Example: blog.example.com,
        ParameterName: blog,
        ArgumentName: blog,
        ParameterDefaultValue: default
      },
      {
        Id: twitter_username,
        Name: TwitterUsername,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The new Twitter username of the user.
<br/>Example: therealomarj,
        ParameterName: twitterUsername,
        ArgumentName: twitterUsername,
        ParameterDefaultValue: default
      },
      {
        Id: company,
        Name: Company,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The new company of the user.
<br/>Example: Acme corporation,
        ParameterName: company,
        ArgumentName: company,
        ParameterDefaultValue: default
      },
      {
        Id: location,
        Name: Location,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The new location of the user.
<br/>Example: Berlin, Germany,
        ParameterName: location,
        ArgumentName: location,
        ParameterDefaultValue: default
      },
      {
        Id: hireable,
        Name: Hireable,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The new hiring availability of the user.,
        ParameterName: hireable,
        ArgumentName: hireable,
        ParameterDefaultValue: default
      },
      {
        Id: bio,
        Name: Bio,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The new short biography of the user.,
        ParameterName: bio,
        ArgumentName: bio,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update the authenticated user,
    RequestType: ,
    ResponseType: private-user,
    MethodName: UsersUpdateAuthenticatedAsync,
    NotAsyncMethodName: UsersUpdateAuthenticated,
    FileNameWithoutExtension: G.Api.EndPoints.UsersUpdateAuthenticated
  },
  {
    Id: UsersListBlockedByAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/blocks?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List users blocked by the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListBlockedByAuthenticatedUserAsync,
    NotAsyncMethodName: UsersListBlockedByAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListBlockedByAuthenticatedUser
  },
  {
    Id: UsersCheckBlocked,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/blocks/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a user is blocked by the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersCheckBlockedAsync,
    NotAsyncMethodName: UsersCheckBlocked,
    FileNameWithoutExtension: G.Api.EndPoints.UsersCheckBlocked
  },
  {
    Id: UsersBlock,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/blocks/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Block a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersBlockAsync,
    NotAsyncMethodName: UsersBlock,
    FileNameWithoutExtension: G.Api.EndPoints.UsersBlock
  },
  {
    Id: UsersUnblock,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/blocks/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Unblock a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersUnblockAsync,
    NotAsyncMethodName: UsersUnblock,
    FileNameWithoutExtension: G.Api.EndPoints.UsersUnblock
  },
  {
    Id: CodespacesListForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces?per_page={perPage}&page={page}&repository_id={repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List codespaces for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesListForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesListForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesListForAuthenticatedUser
  },
  {
    Id: CodespacesCreateForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/codespaces",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a codespace for the authenticated user,
    RequestType: ,
    ResponseType: codespace,
    MethodName: CodespacesCreateForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesCreateForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesCreateForAuthenticatedUser
  },
  {
    Id: CodespacesListSecretsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/secrets?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List secrets for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesListSecretsForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesListSecretsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesListSecretsForAuthenticatedUser
  },
  {
    Id: CodespacesGetPublicKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/codespaces/secrets/public-key",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get public key for the authenticated user,
    RequestType: ,
    ResponseType: codespaces-user-public-key,
    MethodName: CodespacesGetPublicKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesGetPublicKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesGetPublicKeyForAuthenticatedUser
  },
  {
    Id: CodespacesGetSecretForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a secret for the authenticated user,
    RequestType: ,
    ResponseType: codespaces-secret,
    MethodName: CodespacesGetSecretForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesGetSecretForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesGetSecretForAuthenticatedUser
  },
  {
    Id: CodespacesCreateOrUpdateSecretForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: encrypted_value,
        Name: EncryptedValue,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get the public key for the authenticated user](https://docs.github.com/rest/codespaces/secrets#get-public-key-for-the-authenticated-user) endpoint.,
        ParameterName: encryptedValue,
        ArgumentName: encryptedValue,
        ParameterDefaultValue: default
      },
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: ID of the key you used to encrypt the secret.,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<object?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: An array of repository ids that can access the user secret. You can manage the list of selected repositories using the [List selected repositories for a user secret](https://docs.github.com/rest/codespaces/secrets#list-selected-repositories-for-a-user-secret), [Set selected repositories for a user secret](https://docs.github.com/rest/codespaces/secrets#set-selected-repositories-for-a-user-secret), and [Remove a selected repository from a user secret](https://docs.github.com/rest/codespaces/secrets#remove-a-selected-repository-from-a-user-secret) endpoints.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Create or update a secret for the authenticated user,
    RequestType: ,
    ResponseType: empty-object,
    MethodName: CodespacesCreateOrUpdateSecretForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesCreateOrUpdateSecretForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesCreateOrUpdateSecretForAuthenticatedUser
  },
  {
    Id: CodespacesDeleteSecretForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/secrets/{secretName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a secret for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesDeleteSecretForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesDeleteSecretForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesDeleteSecretForAuthenticatedUser
  },
  {
    Id: CodespacesListRepositoriesForSecretForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/secrets/{secretName}/repositories",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List selected repositories for a user secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesListRepositoriesForSecretForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesListRepositoriesForSecretForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesListRepositoriesForSecretForAuthenticatedUser
  },
  {
    Id: CodespacesSetRepositoriesForSecretForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/secrets/{secretName}/repositories",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: selected_repository_ids,
        Name: SelectedRepositoryIds,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: An array of repository ids for which a codespace can access the secret. You can manage the list of selected repositories using the [List selected repositories for a user secret](https://docs.github.com/rest/codespaces/secrets#list-selected-repositories-for-a-user-secret), [Add a selected repository to a user secret](https://docs.github.com/rest/codespaces/secrets#add-a-selected-repository-to-a-user-secret), and [Remove a selected repository from a user secret](https://docs.github.com/rest/codespaces/secrets#remove-a-selected-repository-from-a-user-secret) endpoints.,
        ParameterName: selectedRepositoryIds,
        ArgumentName: selectedRepositoryIds,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set selected repositories for a user secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesSetRepositoriesForSecretForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesSetRepositoriesForSecretForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesSetRepositoriesForSecretForAuthenticatedUser
  },
  {
    Id: CodespacesAddRepositoryForSecretForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/secrets/{secretName}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add a selected repository to a user secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesAddRepositoryForSecretForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesAddRepositoryForSecretForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesAddRepositoryForSecretForAuthenticatedUser
  },
  {
    Id: CodespacesRemoveRepositoryForSecretForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/secrets/{secretName}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: secret_name,
        Name: SecretName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: secretName,
        ArgumentName: secretName,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a selected repository from a user secret,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesRemoveRepositoryForSecretForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesRemoveRepositoryForSecretForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesRemoveRepositoryForSecretForAuthenticatedUser
  },
  {
    Id: CodespacesGetForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/{codespaceName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a codespace for the authenticated user,
    RequestType: ,
    ResponseType: codespace,
    MethodName: CodespacesGetForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesGetForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesGetForAuthenticatedUser
  },
  {
    Id: CodespacesUpdateForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/{codespaceName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      },
      {
        Id: machine,
        Name: Machine,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A valid machine to transition this codespace to.,
        ParameterName: machine,
        ArgumentName: machine,
        ParameterDefaultValue: default
      },
      {
        Id: display_name,
        Name: DisplayName,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Display name for this codespace,
        ParameterName: displayName,
        ArgumentName: displayName,
        ParameterDefaultValue: default
      },
      {
        Id: recent_folders,
        Name: RecentFolders,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: Recently opened folders inside the codespace. It is currently used by the clients to determine the folder path to load the codespace in.,
        ParameterName: recentFolders,
        ArgumentName: recentFolders,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update a codespace for the authenticated user,
    RequestType: ,
    ResponseType: codespace,
    MethodName: CodespacesUpdateForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesUpdateForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesUpdateForAuthenticatedUser
  },
  {
    Id: CodespacesDeleteForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/{codespaceName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a codespace for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesDeleteForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesDeleteForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesDeleteForAuthenticatedUser
  },
  {
    Id: CodespacesExportForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/{codespaceName}/exports",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Export a codespace for the authenticated user,
    RequestType: ,
    ResponseType: codespace-export-details,
    MethodName: CodespacesExportForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesExportForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesExportForAuthenticatedUser
  },
  {
    Id: CodespacesGetExportDetailsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/{codespaceName}/exports/{exportId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      },
      {
        Id: export_id,
        Name: ExportId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: exportId,
        ArgumentName: exportId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get details about a codespace export,
    RequestType: ,
    ResponseType: codespace-export-details,
    MethodName: CodespacesGetExportDetailsForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesGetExportDetailsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesGetExportDetailsForAuthenticatedUser
  },
  {
    Id: CodespacesCodespaceMachinesForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/{codespaceName}/machines",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List machine types for a codespace,
    RequestType: ,
    ResponseType: ,
    MethodName: CodespacesCodespaceMachinesForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesCodespaceMachinesForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesCodespaceMachinesForAuthenticatedUser
  },
  {
    Id: CodespacesPublishForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/{codespaceName}/publish",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      },
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A name for the new repository.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: private,
        Name: Private,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether the new repository should be private.
<br/>Default Value: false,
        ParameterName: private,
        ArgumentName: private,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a repository from an unpublished codespace,
    RequestType: ,
    ResponseType: codespace-with-full-repository,
    MethodName: CodespacesPublishForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesPublishForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesPublishForAuthenticatedUser
  },
  {
    Id: CodespacesStartForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/{codespaceName}/start",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Start a codespace for the authenticated user,
    RequestType: ,
    ResponseType: codespace,
    MethodName: CodespacesStartForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesStartForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesStartForAuthenticatedUser
  },
  {
    Id: CodespacesStopForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/codespaces/{codespaceName}/stop",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: codespace_name,
        Name: CodespaceName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: codespaceName,
        ArgumentName: codespaceName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Stop a codespace for the authenticated user,
    RequestType: ,
    ResponseType: codespace,
    MethodName: CodespacesStopForAuthenticatedUserAsync,
    NotAsyncMethodName: CodespacesStopForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.CodespacesStopForAuthenticatedUser
  },
  {
    Id: PackagesListDockerMigrationConflictingPackagesForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/docker/conflicts",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get list of conflicting packages during Docker migration for authenticated-user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesListDockerMigrationConflictingPackagesForAuthenticatedUserAsync,
    NotAsyncMethodName: PackagesListDockerMigrationConflictingPackagesForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesListDockerMigrationConflictingPackagesForAuthenticatedUser
  },
  {
    Id: UsersSetPrimaryEmailVisibilityForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/email/visibility",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Public,
            Private
          ],
          EnumValues: [
            public,
            private
          ]
        },
        IsRequired: true,
        Summary: Denotes whether an email is publicly visible.,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Set primary email visibility for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersSetPrimaryEmailVisibilityForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersSetPrimaryEmailVisibilityForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersSetPrimaryEmailVisibilityForAuthenticatedUser
  },
  {
    Id: UsersListEmailsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/emails?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List email addresses for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListEmailsForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersListEmailsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListEmailsForAuthenticatedUser
  },
  {
    Id: UsersAddEmailForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/emails",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add an email address for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersAddEmailForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersAddEmailForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersAddEmailForAuthenticatedUser
  },
  {
    Id: UsersDeleteEmailForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/emails",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an email address for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersDeleteEmailForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersDeleteEmailForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersDeleteEmailForAuthenticatedUser
  },
  {
    Id: UsersListFollowersForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/followers?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List followers of the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListFollowersForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersListFollowersForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListFollowersForAuthenticatedUser
  },
  {
    Id: UsersListFollowedByAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/following?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List the people the authenticated user follows,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListFollowedByAuthenticatedUserAsync,
    NotAsyncMethodName: UsersListFollowedByAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListFollowedByAuthenticatedUser
  },
  {
    Id: UsersCheckPersonIsFollowedByAuthenticated,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/following/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a person is followed by the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersCheckPersonIsFollowedByAuthenticatedAsync,
    NotAsyncMethodName: UsersCheckPersonIsFollowedByAuthenticated,
    FileNameWithoutExtension: G.Api.EndPoints.UsersCheckPersonIsFollowedByAuthenticated
  },
  {
    Id: UsersFollow,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/following/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Follow a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersFollowAsync,
    NotAsyncMethodName: UsersFollow,
    FileNameWithoutExtension: G.Api.EndPoints.UsersFollow
  },
  {
    Id: UsersUnfollow,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/following/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Unfollow a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersUnfollowAsync,
    NotAsyncMethodName: UsersUnfollow,
    FileNameWithoutExtension: G.Api.EndPoints.UsersUnfollow
  },
  {
    Id: UsersListGpgKeysForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/gpg_keys?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List GPG keys for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListGpgKeysForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersListGpgKeysForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListGpgKeysForAuthenticatedUser
  },
  {
    Id: UsersCreateGpgKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/gpg_keys",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A descriptive name for the new key.,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: armored_public_key,
        Name: ArmoredPublicKey,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: A GPG key in ASCII-armored format.,
        ParameterName: armoredPublicKey,
        ArgumentName: armoredPublicKey,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a GPG key for the authenticated user,
    RequestType: ,
    ResponseType: gpg-key,
    MethodName: UsersCreateGpgKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersCreateGpgKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersCreateGpgKeyForAuthenticatedUser
  },
  {
    Id: UsersGetGpgKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/gpg_keys/{gpgKeyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gpg_key_id,
        Name: GpgKeyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gpgKeyId,
        ArgumentName: gpgKeyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a GPG key for the authenticated user,
    RequestType: ,
    ResponseType: gpg-key,
    MethodName: UsersGetGpgKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersGetGpgKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersGetGpgKeyForAuthenticatedUser
  },
  {
    Id: UsersDeleteGpgKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/gpg_keys/{gpgKeyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: gpg_key_id,
        Name: GpgKeyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: gpgKeyId,
        ArgumentName: gpgKeyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a GPG key for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersDeleteGpgKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersDeleteGpgKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersDeleteGpgKeyForAuthenticatedUser
  },
  {
    Id: AppsListInstallationsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/installations?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List app installations accessible to the user access token,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListInstallationsForAuthenticatedUserAsync,
    NotAsyncMethodName: AppsListInstallationsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListInstallationsForAuthenticatedUser
  },
  {
    Id: AppsListInstallationReposForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/installations/{installationId}/repositories?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: installation_id,
        Name: InstallationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: installationId,
        ArgumentName: installationId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories accessible to the user access token,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListInstallationReposForAuthenticatedUserAsync,
    NotAsyncMethodName: AppsListInstallationReposForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListInstallationReposForAuthenticatedUser
  },
  {
    Id: AppsAddRepoToInstallationForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/installations/{installationId}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: installation_id,
        Name: InstallationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: installationId,
        ArgumentName: installationId,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Add a repository to an app installation,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsAddRepoToInstallationForAuthenticatedUserAsync,
    NotAsyncMethodName: AppsAddRepoToInstallationForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.AppsAddRepoToInstallationForAuthenticatedUser
  },
  {
    Id: AppsRemoveRepoFromInstallationForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/installations/{installationId}/repositories/{repositoryId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: installation_id,
        Name: InstallationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: installationId,
        ArgumentName: installationId,
        ParameterDefaultValue: default
      },
      {
        Id: repository_id,
        Name: RepositoryId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repositoryId,
        ArgumentName: repositoryId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove a repository from an app installation,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsRemoveRepoFromInstallationForAuthenticatedUserAsync,
    NotAsyncMethodName: AppsRemoveRepoFromInstallationForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.AppsRemoveRepoFromInstallationForAuthenticatedUser
  },
  {
    Id: InteractionsGetRestrictionsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/interaction-limits",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get interaction restrictions for your public repositories,
    RequestType: ,
    ResponseType: ,
    MethodName: InteractionsGetRestrictionsForAuthenticatedUserAsync,
    NotAsyncMethodName: InteractionsGetRestrictionsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.InteractionsGetRestrictionsForAuthenticatedUser
  },
  {
    Id: InteractionsSetRestrictionsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/interaction-limits",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: limit,
        Name: Limit,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            ExistingUsers,
            ContributorsOnly,
            CollaboratorsOnly
          ],
          EnumValues: [
            existing_users,
            contributors_only,
            collaborators_only
          ]
        },
        IsRequired: true,
        Summary:
The type of GitHub user that can comment, open issues, or create pull requests while the interaction limit is in effect.
<br/>Example: collaborators_only,
        ParameterName: limit,
        ArgumentName: limit,
        ParameterDefaultValue: default
      },
      {
        Id: expiry,
        Name: Expiry,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            OneDay,
            ThreeDays,
            OneWeek,
            OneMonth,
            SixMonths
          ],
          EnumValues: [
            one_day,
            three_days,
            one_week,
            one_month,
            six_months
          ]
        },
        IsRequired: false,
        Summary:
The duration of the interaction restriction. Default: `one_day`.
<br/>Example: one_month,
        ParameterName: expiry,
        ArgumentName: expiry,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Set interaction restrictions for your public repositories,
    RequestType: InteractionLimit,
    ResponseType: interaction-limit-response,
    MethodName: InteractionsSetRestrictionsForAuthenticatedUserAsync,
    NotAsyncMethodName: InteractionsSetRestrictionsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.InteractionsSetRestrictionsForAuthenticatedUser
  },
  {
    Id: InteractionsRemoveRestrictionsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/interaction-limits",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Remove interaction restrictions from your public repositories,
    RequestType: ,
    ResponseType: ,
    MethodName: InteractionsRemoveRestrictionsForAuthenticatedUserAsync,
    NotAsyncMethodName: InteractionsRemoveRestrictionsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.InteractionsRemoveRestrictionsForAuthenticatedUser
  },
  {
    Id: IssuesListForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/issues?filter={filter}&state={state}&labels={labels}&sort={sort}&direction={direction}&since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: filter,
        Name: Filter,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Assigned,
            Created,
            Mentioned,
            Subscribed,
            Repos,
            All
          ],
          EnumValues: [
            assigned,
            created,
            mentioned,
            subscribed,
            repos,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Filter.Assigned,
        Summary:
<br/>Default Value: assigned,
        ParameterName: filter,
        ArgumentName: filter,
        ParameterDefaultValue: Filter.Assigned
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            All
          ],
          EnumValues: [
            open,
            closed,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Open,
        Summary:
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Open
      },
      {
        Id: labels,
        Name: Labels,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: labels,
        ArgumentName: labels,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Comments
          ],
          EnumValues: [
            created,
            updated,
            comments
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List user account issues assigned to the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: IssuesListForAuthenticatedUserAsync,
    NotAsyncMethodName: IssuesListForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.IssuesListForAuthenticatedUser
  },
  {
    Id: UsersListPublicSshKeysForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/keys?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public SSH keys for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListPublicSshKeysForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersListPublicSshKeysForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListPublicSshKeysForAuthenticatedUser
  },
  {
    Id: UsersCreatePublicSshKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/keys",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
A descriptive name for the new key.
<br/>Example: Personal MacBook Air,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: key,
        Name: Key,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The public SSH key to add to your GitHub account.,
        ParameterName: key,
        ArgumentName: key,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a public SSH key for the authenticated user,
    RequestType: ,
    ResponseType: key,
    MethodName: UsersCreatePublicSshKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersCreatePublicSshKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersCreatePublicSshKeyForAuthenticatedUser
  },
  {
    Id: UsersGetPublicSshKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/keys/{keyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a public SSH key for the authenticated user,
    RequestType: ,
    ResponseType: key,
    MethodName: UsersGetPublicSshKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersGetPublicSshKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersGetPublicSshKeyForAuthenticatedUser
  },
  {
    Id: UsersDeletePublicSshKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/keys/{keyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: key_id,
        Name: KeyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: keyId,
        ArgumentName: keyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a public SSH key for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersDeletePublicSshKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersDeletePublicSshKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersDeletePublicSshKeyForAuthenticatedUser
  },
  {
    Id: AppsListSubscriptionsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/marketplace_purchases?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List subscriptions for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListSubscriptionsForAuthenticatedUserAsync,
    NotAsyncMethodName: AppsListSubscriptionsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListSubscriptionsForAuthenticatedUser
  },
  {
    Id: AppsListSubscriptionsForAuthenticatedUserStubbed,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/marketplace_purchases/stubbed?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List subscriptions for the authenticated user (stubbed),
    RequestType: ,
    ResponseType: ,
    MethodName: AppsListSubscriptionsForAuthenticatedUserStubbedAsync,
    NotAsyncMethodName: AppsListSubscriptionsForAuthenticatedUserStubbed,
    FileNameWithoutExtension: G.Api.EndPoints.AppsListSubscriptionsForAuthenticatedUserStubbed
  },
  {
    Id: OrgsListMembershipsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/memberships/orgs?state={state}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Active,
            Pending
          ],
          EnumValues: [
            active,
            pending
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization memberships for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListMembershipsForAuthenticatedUserAsync,
    NotAsyncMethodName: OrgsListMembershipsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListMembershipsForAuthenticatedUser
  },
  {
    Id: OrgsGetMembershipForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/memberships/orgs/{org}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an organization membership for the authenticated user,
    RequestType: ,
    ResponseType: org-membership,
    MethodName: OrgsGetMembershipForAuthenticatedUserAsync,
    NotAsyncMethodName: OrgsGetMembershipForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsGetMembershipForAuthenticatedUser
  },
  {
    Id: OrgsUpdateMembershipForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/memberships/orgs/{org}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Active
          ],
          EnumValues: [
            active
          ]
        },
        IsRequired: true,
        Summary: The state that the membership should be in. Only `"active"` will be accepted.,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Update an organization membership for the authenticated user,
    RequestType: ,
    ResponseType: org-membership,
    MethodName: OrgsUpdateMembershipForAuthenticatedUserAsync,
    NotAsyncMethodName: OrgsUpdateMembershipForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsUpdateMembershipForAuthenticatedUser
  },
  {
    Id: MigrationsListForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/migrations?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List user migrations,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsListForAuthenticatedUserAsync,
    NotAsyncMethodName: MigrationsListForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsListForAuthenticatedUser
  },
  {
    Id: MigrationsStartForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/migrations",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: lock_repositories,
        Name: LockRepositories,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Lock the repositories being migrated at the start of the migration
<br/>Example: true,
        ParameterName: lockRepositories,
        ArgumentName: lockRepositories,
        ParameterDefaultValue: default
      },
      {
        Id: exclude_metadata,
        Name: ExcludeMetadata,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Indicates whether metadata should be excluded and only git source should be included for the migration.
<br/>Example: true,
        ParameterName: excludeMetadata,
        ArgumentName: excludeMetadata,
        ParameterDefaultValue: default
      },
      {
        Id: exclude_git_data,
        Name: ExcludeGitData,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Indicates whether the repository git data should be excluded from the migration.
<br/>Example: true,
        ParameterName: excludeGitData,
        ArgumentName: excludeGitData,
        ParameterDefaultValue: default
      },
      {
        Id: exclude_attachments,
        Name: ExcludeAttachments,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Do not include attachments in the migration
<br/>Example: true,
        ParameterName: excludeAttachments,
        ArgumentName: excludeAttachments,
        ParameterDefaultValue: default
      },
      {
        Id: exclude_releases,
        Name: ExcludeReleases,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Do not include releases in the migration
<br/>Example: true,
        ParameterName: excludeReleases,
        ArgumentName: excludeReleases,
        ParameterDefaultValue: default
      },
      {
        Id: exclude_owner_projects,
        Name: ExcludeOwnerProjects,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Indicates whether projects owned by the organization or users should be excluded.
<br/>Example: true,
        ParameterName: excludeOwnerProjects,
        ArgumentName: excludeOwnerProjects,
        ParameterDefaultValue: default
      },
      {
        Id: org_metadata_only,
        Name: OrgMetadataOnly,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
<br/>Default Value: false
<br/>Example: true,
        ParameterName: orgMetadataOnly,
        ArgumentName: orgMetadataOnly,
        ParameterDefaultValue: false
      },
      {
        Id: exclude,
        Name: Exclude,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Exclude attributes from the API response to improve performance
<br/>Example: [repositories],
        ParameterName: exclude,
        ArgumentName: exclude,
        ParameterDefaultValue: default
      },
      {
        Id: repositories,
        Name: Repositories,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: ,
        ParameterName: repositories,
        ArgumentName: repositories,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Start a user migration,
    RequestType: ,
    ResponseType: migration,
    MethodName: MigrationsStartForAuthenticatedUserAsync,
    NotAsyncMethodName: MigrationsStartForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsStartForAuthenticatedUser
  },
  {
    Id: MigrationsGetStatusForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/migrations/{migrationId}?{string.Join("&", exclude.Select(static x => $"exclude={x}"))}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      },
      {
        Id: exclude,
        Name: Exclude,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: exclude,
        ArgumentName: exclude,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a user migration status,
    RequestType: ,
    ResponseType: migration,
    MethodName: MigrationsGetStatusForAuthenticatedUserAsync,
    NotAsyncMethodName: MigrationsGetStatusForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsGetStatusForAuthenticatedUser
  },
  {
    Id: MigrationsGetArchiveForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/migrations/{migrationId}/archive",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Download a user migration archive,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsGetArchiveForAuthenticatedUserAsync,
    NotAsyncMethodName: MigrationsGetArchiveForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsGetArchiveForAuthenticatedUser
  },
  {
    Id: MigrationsDeleteArchiveForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/migrations/{migrationId}/archive",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a user migration archive,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsDeleteArchiveForAuthenticatedUserAsync,
    NotAsyncMethodName: MigrationsDeleteArchiveForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsDeleteArchiveForAuthenticatedUser
  },
  {
    Id: MigrationsUnlockRepoForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/migrations/{migrationId}/repos/{repoName}/lock",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      },
      {
        Id: repo_name,
        Name: RepoName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repoName,
        ArgumentName: repoName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Unlock a user repository,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsUnlockRepoForAuthenticatedUserAsync,
    NotAsyncMethodName: MigrationsUnlockRepoForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsUnlockRepoForAuthenticatedUser
  },
  {
    Id: MigrationsListReposForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/migrations/{migrationId}/repositories?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: migration_id,
        Name: MigrationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: migrationId,
        ArgumentName: migrationId,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories for a user migration,
    RequestType: ,
    ResponseType: ,
    MethodName: MigrationsListReposForAuthenticatedUserAsync,
    NotAsyncMethodName: MigrationsListReposForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.MigrationsListReposForAuthenticatedUser
  },
  {
    Id: OrgsListForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/orgs?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organizations for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListForAuthenticatedUserAsync,
    NotAsyncMethodName: OrgsListForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListForAuthenticatedUser
  },
  {
    Id: PackagesListPackagesForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/packages?package_type={packageType}&visibility={visibility}&page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Public,
            Private,
            Internal
          ],
          EnumValues: [
            public,
            private,
            internal
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List packages for the authenticated user's namespace,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesListPackagesForAuthenticatedUserAsync,
    NotAsyncMethodName: PackagesListPackagesForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesListPackagesForAuthenticatedUser
  },
  {
    Id: PackagesGetPackageForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/packages/{packageType}/{packageName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a package for the authenticated user,
    RequestType: ,
    ResponseType: package,
    MethodName: PackagesGetPackageForAuthenticatedUserAsync,
    NotAsyncMethodName: PackagesGetPackageForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesGetPackageForAuthenticatedUser
  },
  {
    Id: PackagesDeletePackageForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/packages/{packageType}/{packageName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a package for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesDeletePackageForAuthenticatedUserAsync,
    NotAsyncMethodName: PackagesDeletePackageForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesDeletePackageForAuthenticatedUser
  },
  {
    Id: PackagesRestorePackageForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/packages/{packageType}/{packageName}/restore?token={token}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: token,
        Name: Token,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: token,
        ArgumentName: token,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Restore a package for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesRestorePackageForAuthenticatedUserAsync,
    NotAsyncMethodName: PackagesRestorePackageForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesRestorePackageForAuthenticatedUser
  },
  {
    Id: PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/packages/{packageType}/{packageName}/versions?page={page}&per_page={perPage}&state={state}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Active,
            Deleted
          ],
          EnumValues: [
            active,
            deleted
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Active,
        Summary:
<br/>Default Value: active,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Active
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List package versions for a package owned by the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserAsync,
    NotAsyncMethodName: PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUser
  },
  {
    Id: PackagesGetPackageVersionForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/packages/{packageType}/{packageName}/versions/{packageVersionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: package_version_id,
        Name: PackageVersionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageVersionId,
        ArgumentName: packageVersionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a package version for the authenticated user,
    RequestType: ,
    ResponseType: package-version,
    MethodName: PackagesGetPackageVersionForAuthenticatedUserAsync,
    NotAsyncMethodName: PackagesGetPackageVersionForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesGetPackageVersionForAuthenticatedUser
  },
  {
    Id: PackagesDeletePackageVersionForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/packages/{packageType}/{packageName}/versions/{packageVersionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: package_version_id,
        Name: PackageVersionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageVersionId,
        ArgumentName: packageVersionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a package version for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesDeletePackageVersionForAuthenticatedUserAsync,
    NotAsyncMethodName: PackagesDeletePackageVersionForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesDeletePackageVersionForAuthenticatedUser
  },
  {
    Id: PackagesRestorePackageVersionForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/packages/{packageType}/{packageName}/versions/{packageVersionId}/restore",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: package_version_id,
        Name: PackageVersionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageVersionId,
        ArgumentName: packageVersionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Restore a package version for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesRestorePackageVersionForAuthenticatedUserAsync,
    NotAsyncMethodName: PackagesRestorePackageVersionForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesRestorePackageVersionForAuthenticatedUser
  },
  {
    Id: ProjectsCreateForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/projects",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
Name of the project
<br/>Example: Week One Sprint,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: body,
        Name: Body,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
Body of the project
<br/>Example: This project represents the sprint of the first week in January,
        ParameterName: body,
        ArgumentName: body,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a user project,
    RequestType: ,
    ResponseType: project,
    MethodName: ProjectsCreateForAuthenticatedUserAsync,
    NotAsyncMethodName: ProjectsCreateForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsCreateForAuthenticatedUser
  },
  {
    Id: UsersListPublicEmailsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/public_emails?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public email addresses for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListPublicEmailsForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersListPublicEmailsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListPublicEmailsForAuthenticatedUser
  },
  {
    Id: ReposListForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/repos?visibility={visibility}&affiliation={affiliation}&type={type}&sort={sort}&direction={direction}&per_page={perPage}&page={page}&since={since}&before={before}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Public,
            Private
          ],
          EnumValues: [
            all,
            public,
            private
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Visibility.All,
        Summary:
<br/>Default Value: all,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: Visibility.All
      },
      {
        Id: affiliation,
        Name: Affiliation,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: "owner,collaborator,organization_member",
        Summary:
<br/>Default Value: owner,collaborator,organization_member,
        ParameterName: affiliation,
        ArgumentName: affiliation,
        ParameterDefaultValue: "owner,collaborator,organization_member"
      },
      {
        Id: type,
        Name: Type,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Owner,
            Public,
            Private,
            Member
          ],
          EnumValues: [
            all,
            owner,
            public,
            private,
            member
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Type.All,
        Summary:
<br/>Default Value: all,
        ParameterName: type,
        ArgumentName: type,
        ParameterDefaultValue: Type.All
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Pushed,
            FullName
          ],
          EnumValues: [
            created,
            updated,
            pushed,
            full_name
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.FullName,
        Summary:
<br/>Default Value: full_name,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.FullName
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: before,
        Name: Before,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: before,
        ArgumentName: before,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListForAuthenticatedUserAsync,
    NotAsyncMethodName: ReposListForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListForAuthenticatedUser
  },
  {
    Id: ReposCreateForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/repos",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
The name of the repository.
<br/>Example: Team Environment,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: description,
        Name: Description,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A short description of the repository.,
        ParameterName: description,
        ArgumentName: description,
        ParameterDefaultValue: default
      },
      {
        Id: homepage,
        Name: Homepage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: A URL with more information about the repository.,
        ParameterName: homepage,
        ArgumentName: homepage,
        ParameterDefaultValue: default
      },
      {
        Id: private,
        Name: Private,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether the repository is private.
<br/>Default Value: false,
        ParameterName: private,
        ArgumentName: private,
        ParameterDefaultValue: false
      },
      {
        Id: has_issues,
        Name: HasIssues,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether issues are enabled.
<br/>Default Value: true
<br/>Example: true,
        ParameterName: hasIssues,
        ArgumentName: hasIssues,
        ParameterDefaultValue: true
      },
      {
        Id: has_projects,
        Name: HasProjects,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether projects are enabled.
<br/>Default Value: true
<br/>Example: true,
        ParameterName: hasProjects,
        ArgumentName: hasProjects,
        ParameterDefaultValue: true
      },
      {
        Id: has_wiki,
        Name: HasWiki,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether the wiki is enabled.
<br/>Default Value: true
<br/>Example: true,
        ParameterName: hasWiki,
        ArgumentName: hasWiki,
        ParameterDefaultValue: true
      },
      {
        Id: has_discussions,
        Name: HasDiscussions,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether discussions are enabled.
<br/>Default Value: false
<br/>Example: true,
        ParameterName: hasDiscussions,
        ArgumentName: hasDiscussions,
        ParameterDefaultValue: false
      },
      {
        Id: team_id,
        Name: TeamId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary: The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.,
        ParameterName: teamId,
        ArgumentName: teamId,
        ParameterDefaultValue: default
      },
      {
        Id: auto_init,
        Name: AutoInit,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether the repository is initialized with a minimal README.
<br/>Default Value: false,
        ParameterName: autoInit,
        ArgumentName: autoInit,
        ParameterDefaultValue: false
      },
      {
        Id: gitignore_template,
        Name: GitignoreTemplate,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The desired language or platform to apply to the .gitignore.
<br/>Example: Haskell,
        ParameterName: gitignoreTemplate,
        ArgumentName: gitignoreTemplate,
        ParameterDefaultValue: default
      },
      {
        Id: license_template,
        Name: LicenseTemplate,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
The license keyword of the open source license for this repository.
<br/>Example: mit,
        ParameterName: licenseTemplate,
        ArgumentName: licenseTemplate,
        ParameterDefaultValue: default
      },
      {
        Id: allow_squash_merge,
        Name: AllowSquashMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether to allow squash merges for pull requests.
<br/>Default Value: true
<br/>Example: true,
        ParameterName: allowSquashMerge,
        ArgumentName: allowSquashMerge,
        ParameterDefaultValue: true
      },
      {
        Id: allow_merge_commit,
        Name: AllowMergeCommit,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether to allow merge commits for pull requests.
<br/>Default Value: true
<br/>Example: true,
        ParameterName: allowMergeCommit,
        ArgumentName: allowMergeCommit,
        ParameterDefaultValue: true
      },
      {
        Id: allow_rebase_merge,
        Name: AllowRebaseMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether to allow rebase merges for pull requests.
<br/>Default Value: true
<br/>Example: true,
        ParameterName: allowRebaseMerge,
        ArgumentName: allowRebaseMerge,
        ParameterDefaultValue: true
      },
      {
        Id: allow_auto_merge,
        Name: AllowAutoMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to allow Auto-merge to be used on pull requests.
<br/>Default Value: false
<br/>Example: false,
        ParameterName: allowAutoMerge,
        ArgumentName: allowAutoMerge,
        ParameterDefaultValue: false
      },
      {
        Id: delete_branch_on_merge,
        Name: DeleteBranchOnMerge,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to delete head branches when pull requests are merged
<br/>Default Value: false
<br/>Example: false,
        ParameterName: deleteBranchOnMerge,
        ArgumentName: deleteBranchOnMerge,
        ParameterDefaultValue: false
      },
      {
        Id: squash_merge_commit_title,
        Name: SquashMergeCommitTitle,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRTITLE,
            COMMITORPRTITLE
          ],
          EnumValues: [
            PR_TITLE,
            COMMIT_OR_PR_TITLE
          ]
        },
        IsRequired: false,
        Summary:
The default value for a squash merge commit title:

- `PR_TITLE` - default to the pull request's title.
- `COMMIT_OR_PR_TITLE` - default to the commit's title (if only one commit) or the pull request's title (when more than one commit).,
        ParameterName: squashMergeCommitTitle,
        ArgumentName: squashMergeCommitTitle,
        ParameterDefaultValue: default
      },
      {
        Id: squash_merge_commit_message,
        Name: SquashMergeCommitMessage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRBODY,
            COMMITMESSAGES,
            BLANK
          ],
          EnumValues: [
            PR_BODY,
            COMMIT_MESSAGES,
            BLANK
          ]
        },
        IsRequired: false,
        Summary:
The default value for a squash merge commit message:

- `PR_BODY` - default to the pull request's body.
- `COMMIT_MESSAGES` - default to the branch's commit messages.
- `BLANK` - default to a blank commit message.,
        ParameterName: squashMergeCommitMessage,
        ArgumentName: squashMergeCommitMessage,
        ParameterDefaultValue: default
      },
      {
        Id: merge_commit_title,
        Name: MergeCommitTitle,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRTITLE,
            MERGEMESSAGE
          ],
          EnumValues: [
            PR_TITLE,
            MERGE_MESSAGE
          ]
        },
        IsRequired: false,
        Summary:
The default value for a merge commit title.

- `PR_TITLE` - default to the pull request's title.
- `MERGE_MESSAGE` - default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).,
        ParameterName: mergeCommitTitle,
        ArgumentName: mergeCommitTitle,
        ParameterDefaultValue: default
      },
      {
        Id: merge_commit_message,
        Name: MergeCommitMessage,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PRBODY,
            PRTITLE,
            BLANK
          ],
          EnumValues: [
            PR_BODY,
            PR_TITLE,
            BLANK
          ]
        },
        IsRequired: false,
        Summary:
The default value for a merge commit message.

- `PR_TITLE` - default to the pull request's title.
- `PR_BODY` - default to the pull request's body.
- `BLANK` - default to a blank commit message.,
        ParameterName: mergeCommitMessage,
        ArgumentName: mergeCommitMessage,
        ParameterDefaultValue: default
      },
      {
        Id: has_downloads,
        Name: HasDownloads,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: true,
        Summary:
Whether downloads are enabled.
<br/>Default Value: true
<br/>Example: true,
        ParameterName: hasDownloads,
        ArgumentName: hasDownloads,
        ParameterDefaultValue: true
      },
      {
        Id: is_template,
        Name: IsTemplate,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether this repository acts as a template that can be used to generate new repositories.
<br/>Default Value: false
<br/>Example: true,
        ParameterName: isTemplate,
        ArgumentName: isTemplate,
        ParameterDefaultValue: false
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a repository for the authenticated user,
    RequestType: ,
    ResponseType: full-repository,
    MethodName: ReposCreateForAuthenticatedUserAsync,
    NotAsyncMethodName: ReposCreateForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ReposCreateForAuthenticatedUser
  },
  {
    Id: ReposListInvitationsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/repository_invitations?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repository invitations for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListInvitationsForAuthenticatedUserAsync,
    NotAsyncMethodName: ReposListInvitationsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListInvitationsForAuthenticatedUser
  },
  {
    Id: ReposAcceptInvitationForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/repository_invitations/{invitationId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: invitation_id,
        Name: InvitationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: invitationId,
        ArgumentName: invitationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Patch,
    Summary: Accept a repository invitation,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposAcceptInvitationForAuthenticatedUserAsync,
    NotAsyncMethodName: ReposAcceptInvitationForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ReposAcceptInvitationForAuthenticatedUser
  },
  {
    Id: ReposDeclineInvitationForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/repository_invitations/{invitationId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: invitation_id,
        Name: InvitationId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: invitationId,
        ArgumentName: invitationId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Decline a repository invitation,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposDeclineInvitationForAuthenticatedUserAsync,
    NotAsyncMethodName: ReposDeclineInvitationForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ReposDeclineInvitationForAuthenticatedUser
  },
  {
    Id: UsersListSocialAccountsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/social_accounts?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List social accounts for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListSocialAccountsForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersListSocialAccountsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListSocialAccountsForAuthenticatedUser
  },
  {
    Id: UsersAddSocialAccountForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/social_accounts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: account_urls,
        Name: AccountUrls,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
Full URLs for the social media profiles to add.
<br/>Example: [],
        ParameterName: accountUrls,
        ArgumentName: accountUrls,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Add social accounts for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersAddSocialAccountForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersAddSocialAccountForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersAddSocialAccountForAuthenticatedUser
  },
  {
    Id: UsersDeleteSocialAccountForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/social_accounts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: account_urls,
        Name: AccountUrls,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary:
Full URLs for the social media profiles to delete.
<br/>Example: [],
        ParameterName: accountUrls,
        ArgumentName: accountUrls,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete social accounts for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersDeleteSocialAccountForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersDeleteSocialAccountForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersDeleteSocialAccountForAuthenticatedUser
  },
  {
    Id: UsersListSshSigningKeysForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/ssh_signing_keys?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List SSH signing keys for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListSshSigningKeysForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersListSshSigningKeysForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListSshSigningKeysForAuthenticatedUser
  },
  {
    Id: UsersCreateSshSigningKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/user/ssh_signing_keys",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: title,
        Name: Title,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        Summary:
A descriptive name for the new key.
<br/>Example: Personal MacBook Air,
        ParameterName: title,
        ArgumentName: title,
        ParameterDefaultValue: default
      },
      {
        Id: key,
        Name: Key,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        Summary: The public SSH key to add to your GitHub account. For more information, see "[Checking for existing SSH keys](https://docs.github.com/authentication/connecting-to-github-with-ssh/checking-for-existing-ssh-keys).",
        ParameterName: key,
        ArgumentName: key,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Create a SSH signing key for the authenticated user,
    RequestType: ,
    ResponseType: ssh-signing-key,
    MethodName: UsersCreateSshSigningKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersCreateSshSigningKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersCreateSshSigningKeyForAuthenticatedUser
  },
  {
    Id: UsersGetSshSigningKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/ssh_signing_keys/{sshSigningKeyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: ssh_signing_key_id,
        Name: SshSigningKeyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: sshSigningKeyId,
        ArgumentName: sshSigningKeyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get an SSH signing key for the authenticated user,
    RequestType: ,
    ResponseType: ssh-signing-key,
    MethodName: UsersGetSshSigningKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersGetSshSigningKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersGetSshSigningKeyForAuthenticatedUser
  },
  {
    Id: UsersDeleteSshSigningKeyForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/ssh_signing_keys/{sshSigningKeyId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: ssh_signing_key_id,
        Name: SshSigningKeyId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: sshSigningKeyId,
        ArgumentName: sshSigningKeyId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete an SSH signing key for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersDeleteSshSigningKeyForAuthenticatedUserAsync,
    NotAsyncMethodName: UsersDeleteSshSigningKeyForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersDeleteSshSigningKeyForAuthenticatedUser
  },
  {
    Id: ActivityListReposStarredByAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/starred?sort={sort}&direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories starred by the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListReposStarredByAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityListReposStarredByAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListReposStarredByAuthenticatedUser
  },
  {
    Id: ActivityCheckRepoIsStarredByAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/starred/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a repository is starred by the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityCheckRepoIsStarredByAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityCheckRepoIsStarredByAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityCheckRepoIsStarredByAuthenticatedUser
  },
  {
    Id: ActivityStarRepoForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/starred/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Put,
    Summary: Star a repository for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityStarRepoForAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityStarRepoForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityStarRepoForAuthenticatedUser
  },
  {
    Id: ActivityUnstarRepoForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/starred/{owner}/{repo}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: owner,
        Name: Owner,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: owner,
        ArgumentName: owner,
        ParameterDefaultValue: default
      },
      {
        Id: repo,
        Name: Repo,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: repo,
        ArgumentName: repo,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Unstar a repository for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityUnstarRepoForAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityUnstarRepoForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityUnstarRepoForAuthenticatedUser
  },
  {
    Id: ActivityListWatchedReposForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/subscriptions?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories watched by the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListWatchedReposForAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityListWatchedReposForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListWatchedReposForAuthenticatedUser
  },
  {
    Id: TeamsListForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/user/teams?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List teams for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: TeamsListForAuthenticatedUserAsync,
    NotAsyncMethodName: TeamsListForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.TeamsListForAuthenticatedUser
  },
  {
    Id: UsersList,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users?since={since}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List users,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListAsync,
    NotAsyncMethodName: UsersList,
    FileNameWithoutExtension: G.Api.EndPoints.UsersList
  },
  {
    Id: UsersGetByUsername,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersGetByUsernameAsync,
    NotAsyncMethodName: UsersGetByUsername,
    FileNameWithoutExtension: G.Api.EndPoints.UsersGetByUsername
  },
  {
    Id: PackagesListDockerMigrationConflictingPackagesForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/docker/conflicts",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get list of conflicting packages during Docker migration for user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesListDockerMigrationConflictingPackagesForUserAsync,
    NotAsyncMethodName: PackagesListDockerMigrationConflictingPackagesForUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesListDockerMigrationConflictingPackagesForUser
  },
  {
    Id: ActivityListEventsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/events?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List events for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListEventsForAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityListEventsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListEventsForAuthenticatedUser
  },
  {
    Id: ActivityListOrgEventsForAuthenticatedUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/events/orgs/{org}?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: org,
        Name: Org,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: org,
        ArgumentName: org,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organization events for the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListOrgEventsForAuthenticatedUserAsync,
    NotAsyncMethodName: ActivityListOrgEventsForAuthenticatedUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListOrgEventsForAuthenticatedUser
  },
  {
    Id: ActivityListPublicEventsForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/events/public?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public events for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListPublicEventsForUserAsync,
    NotAsyncMethodName: ActivityListPublicEventsForUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListPublicEventsForUser
  },
  {
    Id: UsersListFollowersForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/followers?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List followers of a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListFollowersForUserAsync,
    NotAsyncMethodName: UsersListFollowersForUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListFollowersForUser
  },
  {
    Id: UsersListFollowingForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/following?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List the people a user follows,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListFollowingForUserAsync,
    NotAsyncMethodName: UsersListFollowingForUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListFollowingForUser
  },
  {
    Id: UsersCheckFollowingForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/following/{targetUser}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: target_user,
        Name: TargetUser,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: targetUser,
        ArgumentName: targetUser,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Check if a user follows another user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersCheckFollowingForUserAsync,
    NotAsyncMethodName: UsersCheckFollowingForUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersCheckFollowingForUser
  },
  {
    Id: GistsListForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/gists?since={since}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: since,
        Name: Since,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: since,
        ArgumentName: since,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List gists for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: GistsListForUserAsync,
    NotAsyncMethodName: GistsListForUser,
    FileNameWithoutExtension: G.Api.EndPoints.GistsListForUser
  },
  {
    Id: UsersListGpgKeysForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/gpg_keys?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List GPG keys for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListGpgKeysForUserAsync,
    NotAsyncMethodName: UsersListGpgKeysForUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListGpgKeysForUser
  },
  {
    Id: UsersGetContextForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/hovercard?subject_type={subjectType}&subject_id={subjectId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: subject_type,
        Name: SubjectType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Organization,
            Repository,
            Issue,
            PullRequest
          ],
          EnumValues: [
            organization,
            repository,
            issue,
            pull_request
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: subjectType,
        ArgumentName: subjectType,
        ParameterDefaultValue: default
      },
      {
        Id: subject_id,
        Name: SubjectId,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: subjectId,
        ArgumentName: subjectId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get contextual information for a user,
    RequestType: ,
    ResponseType: hovercard,
    MethodName: UsersGetContextForUserAsync,
    NotAsyncMethodName: UsersGetContextForUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersGetContextForUser
  },
  {
    Id: AppsGetUserInstallation,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/installation",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a user installation for the authenticated app,
    RequestType: ,
    ResponseType: installation,
    MethodName: AppsGetUserInstallationAsync,
    NotAsyncMethodName: AppsGetUserInstallation,
    FileNameWithoutExtension: G.Api.EndPoints.AppsGetUserInstallation
  },
  {
    Id: UsersListPublicKeysForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/keys?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public keys for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListPublicKeysForUserAsync,
    NotAsyncMethodName: UsersListPublicKeysForUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListPublicKeysForUser
  },
  {
    Id: OrgsListForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/orgs?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List organizations for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: OrgsListForUserAsync,
    NotAsyncMethodName: OrgsListForUser,
    FileNameWithoutExtension: G.Api.EndPoints.OrgsListForUser
  },
  {
    Id: PackagesListPackagesForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/packages?package_type={packageType}&visibility={visibility}&page={page}&per_page={perPage}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: visibility,
        Name: Visibility,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Public,
            Private,
            Internal
          ],
          EnumValues: [
            public,
            private,
            internal
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: visibility,
        ArgumentName: visibility,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List packages for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesListPackagesForUserAsync,
    NotAsyncMethodName: PackagesListPackagesForUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesListPackagesForUser
  },
  {
    Id: PackagesGetPackageForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/packages/{packageType}/{packageName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a package for a user,
    RequestType: ,
    ResponseType: package,
    MethodName: PackagesGetPackageForUserAsync,
    NotAsyncMethodName: PackagesGetPackageForUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesGetPackageForUser
  },
  {
    Id: PackagesDeletePackageForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/packages/{packageType}/{packageName}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete a package for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesDeletePackageForUserAsync,
    NotAsyncMethodName: PackagesDeletePackageForUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesDeletePackageForUser
  },
  {
    Id: PackagesRestorePackageForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/packages/{packageType}/{packageName}/restore?token={token}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: token,
        Name: Token,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: token,
        ArgumentName: token,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Restore a package for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesRestorePackageForUserAsync,
    NotAsyncMethodName: PackagesRestorePackageForUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesRestorePackageForUser
  },
  {
    Id: PackagesGetAllPackageVersionsForPackageOwnedByUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/packages/{packageType}/{packageName}/versions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List package versions for a package owned by a user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesGetAllPackageVersionsForPackageOwnedByUserAsync,
    NotAsyncMethodName: PackagesGetAllPackageVersionsForPackageOwnedByUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesGetAllPackageVersionsForPackageOwnedByUser
  },
  {
    Id: PackagesGetPackageVersionForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/packages/{packageType}/{packageName}/versions/{packageVersionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: package_version_id,
        Name: PackageVersionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageVersionId,
        ArgumentName: packageVersionId,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get a package version for a user,
    RequestType: ,
    ResponseType: package-version,
    MethodName: PackagesGetPackageVersionForUserAsync,
    NotAsyncMethodName: PackagesGetPackageVersionForUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesGetPackageVersionForUser
  },
  {
    Id: PackagesDeletePackageVersionForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/packages/{packageType}/{packageName}/versions/{packageVersionId}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: package_version_id,
        Name: PackageVersionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageVersionId,
        ArgumentName: packageVersionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Delete,
    Summary: Delete package version for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesDeletePackageVersionForUserAsync,
    NotAsyncMethodName: PackagesDeletePackageVersionForUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesDeletePackageVersionForUser
  },
  {
    Id: PackagesRestorePackageVersionForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/packages/{packageType}/{packageName}/versions/{packageVersionId}/restore",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: package_type,
        Name: PackageType,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Npm,
            Maven,
            Rubygems,
            Docker,
            Nuget,
            Container
          ],
          EnumValues: [
            npm,
            maven,
            rubygems,
            docker,
            nuget,
            container
          ]
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageType,
        ArgumentName: packageType,
        ParameterDefaultValue: default
      },
      {
        Id: package_name,
        Name: PackageName,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageName,
        ArgumentName: packageName,
        ParameterDefaultValue: default
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: package_version_id,
        Name: PackageVersionId,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: packageVersionId,
        ArgumentName: packageVersionId,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    HttpMethod: Post,
    Summary: Restore package version for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: PackagesRestorePackageVersionForUserAsync,
    NotAsyncMethodName: PackagesRestorePackageVersionForUser,
    FileNameWithoutExtension: G.Api.EndPoints.PackagesRestorePackageVersionForUser
  },
  {
    Id: ProjectsListForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/projects?state={state}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: state,
        Name: State,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Open,
            Closed,
            All
          ],
          EnumValues: [
            open,
            closed,
            all
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: State.Open,
        Summary:
<br/>Default Value: open,
        ParameterName: state,
        ArgumentName: state,
        ParameterDefaultValue: State.Open
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List user projects,
    RequestType: ,
    ResponseType: ,
    MethodName: ProjectsListForUserAsync,
    NotAsyncMethodName: ProjectsListForUser,
    FileNameWithoutExtension: G.Api.EndPoints.ProjectsListForUser
  },
  {
    Id: ActivityListReceivedEventsForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/received_events?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List events received by the authenticated user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListReceivedEventsForUserAsync,
    NotAsyncMethodName: ActivityListReceivedEventsForUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListReceivedEventsForUser
  },
  {
    Id: ActivityListReceivedPublicEventsForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/received_events/public?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List public events received by a user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListReceivedPublicEventsForUserAsync,
    NotAsyncMethodName: ActivityListReceivedPublicEventsForUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListReceivedPublicEventsForUser
  },
  {
    Id: ReposListForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/repos?type={type}&sort={sort}&direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: type,
        Name: Type,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            All,
            Owner,
            Member
          ],
          EnumValues: [
            all,
            owner,
            member
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Type.Owner,
        Summary:
<br/>Default Value: owner,
        ParameterName: type,
        ArgumentName: type,
        ParameterDefaultValue: Type.Owner
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated,
            Pushed,
            FullName
          ],
          EnumValues: [
            created,
            updated,
            pushed,
            full_name
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.FullName,
        Summary:
<br/>Default Value: full_name,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.FullName
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        Summary: ,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: ReposListForUserAsync,
    NotAsyncMethodName: ReposListForUser,
    FileNameWithoutExtension: G.Api.EndPoints.ReposListForUser
  },
  {
    Id: BillingGetGithubActionsBillingUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/settings/billing/actions",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub Actions billing for a user,
    RequestType: ,
    ResponseType: actions-billing-usage,
    MethodName: BillingGetGithubActionsBillingUserAsync,
    NotAsyncMethodName: BillingGetGithubActionsBillingUser,
    FileNameWithoutExtension: G.Api.EndPoints.BillingGetGithubActionsBillingUser
  },
  {
    Id: BillingGetGithubPackagesBillingUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/settings/billing/packages",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get GitHub Packages billing for a user,
    RequestType: ,
    ResponseType: packages-billing-usage,
    MethodName: BillingGetGithubPackagesBillingUserAsync,
    NotAsyncMethodName: BillingGetGithubPackagesBillingUser,
    FileNameWithoutExtension: G.Api.EndPoints.BillingGetGithubPackagesBillingUser
  },
  {
    Id: BillingGetSharedStorageBillingUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/settings/billing/shared-storage",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get shared storage billing for a user,
    RequestType: ,
    ResponseType: combined-billing-usage,
    MethodName: BillingGetSharedStorageBillingUserAsync,
    NotAsyncMethodName: BillingGetSharedStorageBillingUser,
    FileNameWithoutExtension: G.Api.EndPoints.BillingGetSharedStorageBillingUser
  },
  {
    Id: UsersListSocialAccountsForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/social_accounts?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List social accounts for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListSocialAccountsForUserAsync,
    NotAsyncMethodName: UsersListSocialAccountsForUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListSocialAccountsForUser
  },
  {
    Id: UsersListSshSigningKeysForUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/ssh_signing_keys?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List SSH signing keys for a user,
    RequestType: ,
    ResponseType: ,
    MethodName: UsersListSshSigningKeysForUserAsync,
    NotAsyncMethodName: UsersListSshSigningKeysForUser,
    FileNameWithoutExtension: G.Api.EndPoints.UsersListSshSigningKeysForUser
  },
  {
    Id: ActivityListReposStarredByUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/starred?sort={sort}&direction={direction}&per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: sort,
        Name: Sort,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Created,
            Updated
          ],
          EnumValues: [
            created,
            updated
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Sort.Created,
        Summary:
<br/>Default Value: created,
        ParameterName: sort,
        ArgumentName: sort,
        ParameterDefaultValue: Sort.Created
      },
      {
        Id: direction,
        Name: Direction,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Asc,
            Desc
          ],
          EnumValues: [
            asc,
            desc
          ]
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: Direction.Desc,
        Summary:
<br/>Default Value: desc,
        ParameterName: direction,
        ArgumentName: direction,
        ParameterDefaultValue: Direction.Desc
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories starred by a user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListReposStarredByUserAsync,
    NotAsyncMethodName: ActivityListReposStarredByUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListReposStarredByUser
  },
  {
    Id: ActivityListReposWatchedByUser,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: $"/users/{username}/subscriptions?per_page={perPage}&page={page}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        Summary: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: per_page,
        Name: PerPage,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 30,
        Summary:
<br/>Default Value: 30,
        ParameterName: perPage,
        ArgumentName: perPage,
        ParameterDefaultValue: 30
      },
      {
        Id: page,
        Name: Page,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        ParameterLocation: Query,
        ParameterStyle: Form,
        ParameterExplode: true,
        DefaultValue: 1,
        Summary:
<br/>Default Value: 1,
        ParameterName: page,
        ArgumentName: page,
        ParameterDefaultValue: 1
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: List repositories watched by a user,
    RequestType: ,
    ResponseType: ,
    MethodName: ActivityListReposWatchedByUserAsync,
    NotAsyncMethodName: ActivityListReposWatchedByUser,
    FileNameWithoutExtension: G.Api.EndPoints.ActivityListReposWatchedByUser
  },
  {
    Id: MetaGetAllVersions,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/versions",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get all API versions,
    RequestType: ,
    ResponseType: ,
    MethodName: MetaGetAllVersionsAsync,
    NotAsyncMethodName: MetaGetAllVersions,
    FileNameWithoutExtension: G.Api.EndPoints.MetaGetAllVersions
  },
  {
    Id: MetaGetZen,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: "/zen",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: Get the Zen of GitHub,
    RequestType: ,
    ResponseType: ,
    MethodName: MetaGetZenAsync,
    NotAsyncMethodName: MetaGetZen,
    FileNameWithoutExtension: G.Api.EndPoints.MetaGetZen
  },
  {
    Id: Constructors,
    Namespace: G,
    ClassName: Api,
    BaseUrl: https://api.github.com,
    Stream: false,
    Path: ,
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    Summary: ,
    RequestType: ,
    ResponseType: ,
    MethodName: ConstructorsAsync,
    NotAsyncMethodName: Constructors,
    FileNameWithoutExtension: G.Api.EndPoints.Constructors
  }
]