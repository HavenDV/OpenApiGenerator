[
  {
    Id: generateCompletion,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: true,
    Path: /generate,
    HttpMethod: Post,
    Summary: Generate a response for a given prompt with a provided model.,
    RequestType: GenerateCompletionRequest,
    ResponseType: GenerateCompletionResponse,
    MethodName: GenerateCompletionAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GenerateCompletion
  },
  {
    Id: generateChatCompletion,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: true,
    Path: /chat,
    HttpMethod: Post,
    Summary: Generate the next message in a chat with a provided model.,
    RequestType: GenerateChatCompletionRequest,
    ResponseType: GenerateChatCompletionResponse,
    MethodName: GenerateChatCompletionAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GenerateChatCompletion
  },
  {
    Id: generateEmbedding,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /embeddings,
    HttpMethod: Post,
    Summary: Generate embeddings from a model.,
    RequestType: GenerateEmbeddingRequest,
    ResponseType: GenerateEmbeddingResponse,
    MethodName: GenerateEmbeddingAsync,
    FileNameWithoutExtension: G.Api.EndPoints.GenerateEmbedding
  },
  {
    Id: createModel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: true,
    Path: /create,
    HttpMethod: Post,
    Summary: Create a model from a Modelfile.,
    RequestType: CreateModelRequest,
    ResponseType: CreateModelResponse,
    MethodName: CreateModelAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateModel
  },
  {
    Id: listModels,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /tags,
    Summary: List models that are available locally.,
    RequestType: ,
    ResponseType: ModelsResponse,
    MethodName: ListModelsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ListModels
  },
  {
    Id: showModelInfo,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /show,
    HttpMethod: Post,
    Summary: Show details about a model including modelfile, template, parameters, license, and system prompt.,
    RequestType: ModelInfoRequest,
    ResponseType: ModelInfo,
    MethodName: ShowModelInfoAsync,
    FileNameWithoutExtension: G.Api.EndPoints.ShowModelInfo
  },
  {
    Id: copyModel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /copy,
    HttpMethod: Post,
    Summary: Creates a model with another name from an existing model.,
    RequestType: CopyModelRequest,
    ResponseType: ,
    MethodName: CopyModelAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CopyModel
  },
  {
    Id: deleteModel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /delete,
    HttpMethod: Delete,
    Summary: Delete a model and its data.,
    RequestType: DeleteModelRequest,
    ResponseType: ,
    MethodName: DeleteModelAsync,
    FileNameWithoutExtension: G.Api.EndPoints.DeleteModel
  },
  {
    Id: pullModel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /pull,
    HttpMethod: Post,
    Summary: Download a model from the ollama library.,
    RequestType: PullModelRequest,
    ResponseType: PullModelResponse,
    MethodName: PullModelAsync,
    FileNameWithoutExtension: G.Api.EndPoints.PullModel
  },
  {
    Id: pushModel,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /push,
    HttpMethod: Post,
    Summary: Upload a model to a model library.,
    RequestType: PushModelRequest,
    ResponseType: PushModelResponse,
    MethodName: PushModelAsync,
    FileNameWithoutExtension: G.Api.EndPoints.PushModel
  },
  {
    Id: checkBlob,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /blobs/{digest},
    HttpMethod: Head,
    Summary: Check to see if a blob exists on the Ollama server which is useful when creating models.,
    RequestType: ,
    ResponseType: ,
    MethodName: CheckBlobAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CheckBlob
  },
  {
    Id: createBlob,
    Namespace: G,
    ClassName: Api,
    BaseUrl: ,
    Stream: false,
    Path: /blobs/{digest},
    HttpMethod: Post,
    Summary: Create a blob from a file. Returns the server file path.,
    RequestType: ,
    ResponseType: ,
    MethodName: CreateBlobAsync,
    FileNameWithoutExtension: G.Api.EndPoints.CreateBlob
  },
  {
    Id: Constructors,
    Namespace: G,
    ClassName: Api,
    BaseUrl: http://localhost:11434/api,
    Stream: false,
    Path: ,
    Summary: ,
    RequestType: ,
    ResponseType: ,
    MethodName: ConstructorsAsync,
    FileNameWithoutExtension: G.Api.EndPoints.Constructors
  }
]