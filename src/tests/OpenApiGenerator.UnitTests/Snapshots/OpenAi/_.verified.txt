[
  {
    Id: Error,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: code,
        Name: Code,
        Type: string?,
        IsRequired: true,
        Summary: 
      },
      {
        Id: message,
        Name: Message,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: param,
        Name: Param,
        Type: string?,
        IsRequired: true,
        Summary: 
      },
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Error,
    ClassName: Error,
    ExternalClassName: Error,
    FileNameWithoutExtension: G.Models.Error
  },
  {
    Id: ErrorResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: error,
        Name: Error,
        Type: Error,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ErrorResponse,
    ClassName: ErrorResponse,
    ExternalClassName: ErrorResponse,
    FileNameWithoutExtension: G.Models.ErrorResponse
  },
  {
    Id: ListModelsResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<Model>,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListModelsResponse,
    ClassName: ListModelsResponse,
    ExternalClassName: ListModelsResponse,
    FileNameWithoutExtension: G.Models.ListModelsResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: list,
        Name: List,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: DeleteModelResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: deleted,
        Name: Deleted,
        Type: bool,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: DeleteModelResponse,
    ClassName: DeleteModelResponse,
    ExternalClassName: DeleteModelResponse,
    FileNameWithoutExtension: G.Models.DeleteModelResponse
  },
  {
    Id: CreateCompletionRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.

      },
      {
        Id: prompt,
        Name: Prompt,
        Type: object?,
        IsRequired: true,
        DefaultValue: <|endoftext|>,
        Summary:
The prompt(s) to generate completions for, encoded as a string, array of strings, array of tokens, or array of token arrays.

Note that &lt;|endoftext|&gt; is the document separator that the model sees during training, so if a prompt is not specified the model will generate as if from the beginning of a new document.

<br/>Default Value: &lt;|endoftext|&gt;
      },
      {
        Id: best_of,
        Name: BestOf,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
Generates `best_of` completions server-side and returns the "best" (the one with the highest log probability per token). Results cannot be streamed.

When used with `n`, `best_of` controls the number of candidate completions and `n` specifies how many to return – `best_of` must be greater than `n`.

**Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.

<br/>Default Value: 1
      },
      {
        Id: echo,
        Name: Echo,
        Type: bool?,
        IsRequired: false,
        DefaultValue: false,
        Summary:
Echo back the prompt in addition to the completion

<br/>Default Value: false
      },
      {
        Id: frequency_penalty,
        Name: FrequencyPenalty,
        Type: double?,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.

[See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details)

<br/>Default Value: 0
      },
      {
        Id: logit_bias,
        Name: LogitBias,
        Type: CreateCompletionRequestLogitBias?,
        IsRequired: false,
        Summary:
Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.

As an example, you can pass `{"50256": -100}` to prevent the &lt;|endoftext|&gt; token from being generated.

<br/>Default Value: 
      },
      {
        Id: logprobs,
        Name: Logprobs,
        Type: int?,
        IsRequired: false,
        Summary:
Include the log probabilities on the `logprobs` most likely output tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.

The maximum value for `logprobs` is 5.

<br/>Default Value: 
      },
      {
        Id: max_tokens,
        Name: MaxTokens,
        Type: int?,
        IsRequired: false,
        DefaultValue: 16,
        Summary:
The maximum number of [tokens](/tokenizer) that can be generated in the completion.

The token count of your prompt plus `max_tokens` cannot exceed the model's context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.

<br/>Default Value: 16
<br/>Example: 16
      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
How many completions to generate for each prompt.

**Note:** Because this parameter generates many completions, it can quickly consume your token quota. Use carefully and ensure that you have reasonable settings for `max_tokens` and `stop`.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: presence_penalty,
        Name: PresencePenalty,
        Type: double?,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.

[See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details)

<br/>Default Value: 0
      },
      {
        Id: seed,
        Name: Seed,
        Type: int?,
        IsRequired: false,
        Summary:
If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result.

Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.

      },
      {
        Id: stop,
        Name: Stop,
        Type: object?,
        IsRequired: false,
        Summary:
Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.

<br/>Default Value: 
      },
      {
        Id: stream,
        Name: Stream,
        Type: bool?,
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to stream back partial progress. If set, tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a `data: [DONE]` message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).

<br/>Default Value: false
      },
      {
        Id: suffix,
        Name: Suffix,
        Type: string?,
        IsRequired: false,
        Summary:
The suffix that comes after a completion of inserted text.
<br/>Default Value: 
<br/>Example: test.
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

We generally recommend altering this or `top_p` but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: top_p,
        Name: TopP,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or `temperature` but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateCompletionRequest,
    ClassName: CreateCompletionRequest,
    ExternalClassName: CreateCompletionRequest,
    FileNameWithoutExtension: G.Models.CreateCompletionRequest
  },
  {
    Id: logit_bias,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.

As an example, you can pass `{"50256": -100}` to prevent the &lt;|endoftext|&gt; token from being generated.

<br/>Default Value: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: LogitBias,
    ClassName: LogitBias,
    ExternalClassName: LogitBias,
    FileNameWithoutExtension: G.Models.LogitBias
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: babbage-002,
        Name: Babbage002,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: davinci-002,
        Name: Davinci002,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-3.5-turbo-instruct,
        Name: Gpt35TurboInstruct,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: text-davinci-003,
        Name: TextDavinci003,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: text-davinci-002,
        Name: TextDavinci002,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: text-davinci-001,
        Name: TextDavinci001,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: code-davinci-002,
        Name: CodeDavinci002,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: text-curie-001,
        Name: TextCurie001,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: text-babbage-001,
        Name: TextBabbage001,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: text-ada-001,
        Name: TextAda001,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: CreateCompletionResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: A unique identifier for the completion.
      },
      {
        Id: choices,
        Name: Choices,
        Type: global::System.Collections.Generic.IList<CreateCompletionResponseChoices>,
        IsRequired: true,
        Summary: The list of completion choices the model generated for the input prompt.
      },
      {
        Id: created,
        Name: Created,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) of when the completion was created.
      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary: The model used for completion.
      },
      {
        Id: system_fingerprint,
        Name: SystemFingerprint,
        Type: string?,
        IsRequired: false,
        Summary:
This fingerprint represents the backend configuration that the model runs with.

Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.

      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always "text_completion"
      },
      {
        Id: usage,
        Name: Usage,
        Type: CompletionUsage?,
        IsRequired: false,
        Summary: Usage statistics for the completion request.
      }
    ],
    Summary:
Represents a completion response from the API. Note: both the streamed and non-streamed response objects share the same shape (unlike the chat endpoint).
,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateCompletionResponse,
    ClassName: CreateCompletionResponse,
    ExternalClassName: CreateCompletionResponse,
    FileNameWithoutExtension: G.Models.CreateCompletionResponse
  },
  {
    Id: choices,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: finish_reason,
        Name: FinishReason,
        Type: string,
        IsRequired: true,
        Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
`length` if the maximum number of tokens specified in the request was reached,
or `content_filter` if content was omitted due to a flag from our content filters.

      },
      {
        Id: index,
        Name: Index,
        Type: int,
        IsRequired: true,
        Summary: 
      },
      {
        Id: logprobs,
        Name: Logprobs,
        Type: CreateCompletionResponseChoicesLogprobs?,
        IsRequired: true,
        Summary: 
      },
      {
        Id: text,
        Name: Text,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Choices,
    ClassName: Choices,
    ExternalClassName: Choices,
    FileNameWithoutExtension: G.Models.Choices
  },
  {
    Id: logprobs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: text_offset,
        Name: TextOffset,
        Type: global::System.Collections.Generic.IList<int>?,
        IsRequired: false,
        Summary: 
      },
      {
        Id: token_logprobs,
        Name: TokenLogprobs,
        Type: global::System.Collections.Generic.IList<double>?,
        IsRequired: false,
        Summary: 
      },
      {
        Id: tokens,
        Name: Tokens,
        Type: global::System.Collections.Generic.IList<string?>?,
        IsRequired: false,
        Summary: 
      },
      {
        Id: top_logprobs,
        Name: TopLogprobs,
        Type: global::System.Collections.Generic.IList<CreateCompletionResponseChoicesLogprobsTopLogprobs?>?,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Logprobs,
    ClassName: Logprobs,
    ExternalClassName: Logprobs,
    FileNameWithoutExtension: G.Models.Logprobs
  },
  {
    Id: top_logprobs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: TopLogprobs,
    ClassName: TopLogprobs,
    ExternalClassName: TopLogprobs,
    FileNameWithoutExtension: G.Models.TopLogprobs
  },
  {
    Id: finish_reason,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: stop,
        Name: Stop,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: length,
        Name: Length,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: content_filter,
        Name: ContentFilter,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
`length` if the maximum number of tokens specified in the request was reached,
or `content_filter` if content was omitted due to a flag from our content filters.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: FinishReason,
    ClassName: FinishReason,
    ExternalClassName: FinishReason,
    FileNameWithoutExtension: G.Models.FinishReason
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: text_completion,
        Name: TextCompletion,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always "text_completion",
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: ChatCompletionRequestMessageContentPart,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRequestMessageContentPart,
    ClassName: ChatCompletionRequestMessageContentPart,
    ExternalClassName: ChatCompletionRequestMessageContentPart,
    FileNameWithoutExtension: G.Models.ChatCompletionRequestMessageContentPart
  },
  {
    Id: ChatCompletionRequestMessageContentPartImage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of the content part.
      },
      {
        Id: image_url,
        Name: ImageUrl,
        Type: ChatCompletionRequestMessageContentPartImageImageUrl,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRequestMessageContentPartImage,
    ClassName: ChatCompletionRequestMessageContentPartImage,
    ExternalClassName: ChatCompletionRequestMessageContentPartImage,
    FileNameWithoutExtension: G.Models.ChatCompletionRequestMessageContentPartImage
  },
  {
    Id: image_url,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: url,
        Name: Url,
        Type: string,
        IsRequired: true,
        Summary: Either a URL of the image or the base64 encoded image data.
      },
      {
        Id: detail,
        Name: Detail,
        Type: string?,
        IsRequired: false,
        DefaultValue: auto,
        Summary:
Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
<br/>Default Value: auto
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ImageUrl,
    ClassName: ImageUrl,
    ExternalClassName: ImageUrl,
    FileNameWithoutExtension: G.Models.ImageUrl
  },
  {
    Id: detail,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: auto,
        Name: Auto,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: low,
        Name: Low,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: high,
        Name: High,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
Specifies the detail level of the image. Learn more in the [Vision guide](/docs/guides/vision/low-or-high-fidelity-image-understanding).
<br/>Default Value: auto,
    AdditionalModels: null,
    Enumerations: null,
    Name: Detail,
    ClassName: Detail,
    ExternalClassName: Detail,
    FileNameWithoutExtension: G.Models.Detail
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: image_url,
        Name: ImageUrl,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of the content part.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: ChatCompletionRequestMessageContentPartText,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of the content part.
      },
      {
        Id: text,
        Name: Text,
        Type: string,
        IsRequired: true,
        Summary: The text content.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRequestMessageContentPartText,
    ClassName: ChatCompletionRequestMessageContentPartText,
    ExternalClassName: ChatCompletionRequestMessageContentPartText,
    FileNameWithoutExtension: G.Models.ChatCompletionRequestMessageContentPartText
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: text,
        Name: Text,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of the content part.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: ChatCompletionRequestMessage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRequestMessage,
    ClassName: ChatCompletionRequestMessage,
    ExternalClassName: ChatCompletionRequestMessage,
    FileNameWithoutExtension: G.Models.ChatCompletionRequestMessage
  },
  {
    Id: ChatCompletionRequestSystemMessage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: content,
        Name: Content,
        Type: string,
        IsRequired: true,
        Summary: The contents of the system message.
      },
      {
        Id: role,
        Name: Role,
        Type: string,
        IsRequired: true,
        Summary: The role of the messages author, in this case `system`.
      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary: An optional name for the participant. Provides the model information to differentiate between participants of the same role.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRequestSystemMessage,
    ClassName: ChatCompletionRequestSystemMessage,
    ExternalClassName: ChatCompletionRequestSystemMessage,
    FileNameWithoutExtension: G.Models.ChatCompletionRequestSystemMessage
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: system,
        Name: System,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The role of the messages author, in this case `system`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: ChatCompletionRequestUserMessage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: content,
        Name: Content,
        Type: object,
        IsRequired: true,
        Summary:
The contents of the user message.

      },
      {
        Id: role,
        Name: Role,
        Type: string,
        IsRequired: true,
        Summary: The role of the messages author, in this case `user`.
      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary: An optional name for the participant. Provides the model information to differentiate between participants of the same role.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRequestUserMessage,
    ClassName: ChatCompletionRequestUserMessage,
    ExternalClassName: ChatCompletionRequestUserMessage,
    FileNameWithoutExtension: G.Models.ChatCompletionRequestUserMessage
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: user,
        Name: User,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The role of the messages author, in this case `user`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: ChatCompletionRequestAssistantMessage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: content,
        Name: Content,
        Type: string?,
        IsRequired: false,
        Summary:
The contents of the assistant message. Required unless `tool_calls` or `function_call` is specified.

      },
      {
        Id: role,
        Name: Role,
        Type: string,
        IsRequired: true,
        Summary: The role of the messages author, in this case `assistant`.
      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary: An optional name for the participant. Provides the model information to differentiate between participants of the same role.
      },
      {
        Id: tool_calls,
        Name: ToolCalls,
        Type: global::System.Collections.Generic.IList<ChatCompletionMessageToolCall?>?,
        IsRequired: false,
        Summary: The tool calls generated by the model, such as function calls.
      },
      {
        Id: function_call,
        Name: FunctionCall,
        Type: ChatCompletionRequestAssistantMessageFunctionCall?,
        IsRequired: false,
        Summary: Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRequestAssistantMessage,
    ClassName: ChatCompletionRequestAssistantMessage,
    ExternalClassName: ChatCompletionRequestAssistantMessage,
    FileNameWithoutExtension: G.Models.ChatCompletionRequestAssistantMessage
  },
  {
    Id: function_call,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: arguments,
        Name: Arguments,
        Type: string,
        IsRequired: true,
        Summary: The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
      },
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function to call.
      }
    ],
    Summary: Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.,
    AdditionalModels: null,
    Enumerations: null,
    Name: FunctionCall,
    ClassName: FunctionCall,
    ExternalClassName: FunctionCall,
    FileNameWithoutExtension: G.Models.FunctionCall
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: assistant,
        Name: Assistant,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The role of the messages author, in this case `assistant`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: ChatCompletionRequestToolMessage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: role,
        Name: Role,
        Type: string,
        IsRequired: true,
        Summary: The role of the messages author, in this case `tool`.
      },
      {
        Id: content,
        Name: Content,
        Type: string,
        IsRequired: true,
        Summary: The contents of the tool message.
      },
      {
        Id: tool_call_id,
        Name: ToolCallId,
        Type: string,
        IsRequired: true,
        Summary: Tool call that this message is responding to.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRequestToolMessage,
    ClassName: ChatCompletionRequestToolMessage,
    ExternalClassName: ChatCompletionRequestToolMessage,
    FileNameWithoutExtension: G.Models.ChatCompletionRequestToolMessage
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: tool,
        Name: Tool,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The role of the messages author, in this case `tool`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: ChatCompletionRequestFunctionMessage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: role,
        Name: Role,
        Type: string,
        IsRequired: true,
        Summary: The role of the messages author, in this case `function`.
      },
      {
        Id: content,
        Name: Content,
        Type: string?,
        IsRequired: true,
        Summary: The contents of the function message.
      },
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function to call.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRequestFunctionMessage,
    ClassName: ChatCompletionRequestFunctionMessage,
    ExternalClassName: ChatCompletionRequestFunctionMessage,
    FileNameWithoutExtension: G.Models.ChatCompletionRequestFunctionMessage
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: function,
        Name: Function,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The role of the messages author, in this case `function`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: FunctionParameters,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
The parameters the functions accepts, described as a JSON Schema object. See the [guide](/docs/guides/text-generation/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format. 

Omitting `parameters` defines a function with an empty parameter list.,
    AdditionalModels: null,
    Enumerations: null,
    Name: FunctionParameters,
    ClassName: FunctionParameters,
    ExternalClassName: FunctionParameters,
    FileNameWithoutExtension: G.Models.FunctionParameters
  },
  {
    Id: ChatCompletionFunctions,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: description,
        Name: Description,
        Type: string?,
        IsRequired: false,
        Summary: A description of what the function does, used by the model to choose when and how to call the function.
      },
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
      },
      {
        Id: parameters,
        Name: Parameters,
        Type: FunctionParameters?,
        IsRequired: false,
        Summary:
The parameters the functions accepts, described as a JSON Schema object. See the [guide](/docs/guides/text-generation/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format. 

Omitting `parameters` defines a function with an empty parameter list.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionFunctions,
    ClassName: ChatCompletionFunctions,
    ExternalClassName: ChatCompletionFunctions,
    FileNameWithoutExtension: G.Models.ChatCompletionFunctions
  },
  {
    Id: ChatCompletionFunctionCallOption,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function to call.
      }
    ],
    Summary:
Specifying a particular function via `{"name": "my_function"}` forces the model to call that function.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionFunctionCallOption,
    ClassName: ChatCompletionFunctionCallOption,
    ExternalClassName: ChatCompletionFunctionCallOption,
    FileNameWithoutExtension: G.Models.ChatCompletionFunctionCallOption
  },
  {
    Id: ChatCompletionTool,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of the tool. Currently, only `function` is supported.
      },
      {
        Id: function,
        Name: Function,
        Type: FunctionObject,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionTool,
    ClassName: ChatCompletionTool,
    ExternalClassName: ChatCompletionTool,
    FileNameWithoutExtension: G.Models.ChatCompletionTool
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: function,
        Name: Function,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of the tool. Currently, only `function` is supported.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: FunctionObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: description,
        Name: Description,
        Type: string?,
        IsRequired: false,
        Summary: A description of what the function does, used by the model to choose when and how to call the function.
      },
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function to be called. Must be a-z, A-Z, 0-9, or contain underscores and dashes, with a maximum length of 64.
      },
      {
        Id: parameters,
        Name: Parameters,
        Type: FunctionParameters?,
        IsRequired: false,
        Summary:
The parameters the functions accepts, described as a JSON Schema object. See the [guide](/docs/guides/text-generation/function-calling) for examples, and the [JSON Schema reference](https://json-schema.org/understanding-json-schema/) for documentation about the format. 

Omitting `parameters` defines a function with an empty parameter list.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: FunctionObject,
    ClassName: FunctionObject,
    ExternalClassName: FunctionObject,
    FileNameWithoutExtension: G.Models.FunctionObject
  },
  {
    Id: ChatCompletionToolChoiceOption,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Controls which (if any) function is called by the model.
`none` means the model will not call a function and instead generates a message.
`auto` means the model can pick between generating a message or calling a function.
Specifying a particular function via `{"type: "function", "function": {"name": "my_function"}}` forces the model to call that function.

`none` is the default when no functions are present. `auto` is the default if functions are present.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionToolChoiceOption,
    ClassName: ChatCompletionToolChoiceOption,
    ExternalClassName: ChatCompletionToolChoiceOption,
    FileNameWithoutExtension: G.Models.ChatCompletionToolChoiceOption
  },
  {
    Id: ChatCompletionNamedToolChoice,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of the tool. Currently, only `function` is supported.
      },
      {
        Id: function,
        Name: Function,
        Type: ChatCompletionNamedToolChoiceFunction,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: Specifies a tool the model should use. Use to force the model to call a specific function.,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionNamedToolChoice,
    ClassName: ChatCompletionNamedToolChoice,
    ExternalClassName: ChatCompletionNamedToolChoice,
    FileNameWithoutExtension: G.Models.ChatCompletionNamedToolChoice
  },
  {
    Id: function,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function to call.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Function,
    ClassName: Function,
    ExternalClassName: Function,
    FileNameWithoutExtension: G.Models.Function
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: function,
        Name: Function,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of the tool. Currently, only `function` is supported.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: ChatCompletionMessageToolCalls,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: The tool calls generated by the model, such as function calls.,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionMessageToolCalls,
    ClassName: ChatCompletionMessageToolCalls,
    ExternalClassName: ChatCompletionMessageToolCalls,
    FileNameWithoutExtension: G.Models.ChatCompletionMessageToolCalls
  },
  {
    Id: ChatCompletionMessageToolCall,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The ID of the tool call.
      },
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of the tool. Currently, only `function` is supported.
      },
      {
        Id: function,
        Name: Function,
        Type: ChatCompletionMessageToolCallFunction,
        IsRequired: true,
        Summary: The function that the model called.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionMessageToolCall,
    ClassName: ChatCompletionMessageToolCall,
    ExternalClassName: ChatCompletionMessageToolCall,
    FileNameWithoutExtension: G.Models.ChatCompletionMessageToolCall
  },
  {
    Id: function,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function to call.
      },
      {
        Id: arguments,
        Name: Arguments,
        Type: string,
        IsRequired: true,
        Summary: The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
      }
    ],
    Summary: The function that the model called.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Function,
    ClassName: Function,
    ExternalClassName: Function,
    FileNameWithoutExtension: G.Models.Function
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: function,
        Name: Function,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of the tool. Currently, only `function` is supported.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: ChatCompletionMessageToolCallChunk,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: index,
        Name: Index,
        Type: int,
        IsRequired: true,
        Summary: 
      },
      {
        Id: id,
        Name: Id,
        Type: string?,
        IsRequired: false,
        Summary: The ID of the tool call.
      },
      {
        Id: type,
        Name: Type,
        Type: string?,
        IsRequired: false,
        Summary: The type of the tool. Currently, only `function` is supported.
      },
      {
        Id: function,
        Name: Function,
        Type: ChatCompletionMessageToolCallChunkFunction?,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionMessageToolCallChunk,
    ClassName: ChatCompletionMessageToolCallChunk,
    ExternalClassName: ChatCompletionMessageToolCallChunk,
    FileNameWithoutExtension: G.Models.ChatCompletionMessageToolCallChunk
  },
  {
    Id: function,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary: The name of the function to call.
      },
      {
        Id: arguments,
        Name: Arguments,
        Type: string?,
        IsRequired: false,
        Summary: The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Function,
    ClassName: Function,
    ExternalClassName: Function,
    FileNameWithoutExtension: G.Models.Function
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: function,
        Name: Function,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of the tool. Currently, only `function` is supported.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: ChatCompletionRole,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: The role of the author of a message,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionRole,
    ClassName: ChatCompletionRole,
    ExternalClassName: ChatCompletionRole,
    FileNameWithoutExtension: G.Models.ChatCompletionRole
  },
  {
    Id: ChatCompletionResponseMessage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: content,
        Name: Content,
        Type: string?,
        IsRequired: true,
        Summary: The contents of the message.
      },
      {
        Id: tool_calls,
        Name: ToolCalls,
        Type: global::System.Collections.Generic.IList<ChatCompletionMessageToolCall?>?,
        IsRequired: false,
        Summary: The tool calls generated by the model, such as function calls.
      },
      {
        Id: role,
        Name: Role,
        Type: string,
        IsRequired: true,
        Summary: The role of the author of this message.
      },
      {
        Id: function_call,
        Name: FunctionCall,
        Type: ChatCompletionResponseMessageFunctionCall?,
        IsRequired: false,
        Summary: Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
      }
    ],
    Summary: A chat completion message generated by the model.,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionResponseMessage,
    ClassName: ChatCompletionResponseMessage,
    ExternalClassName: ChatCompletionResponseMessage,
    FileNameWithoutExtension: G.Models.ChatCompletionResponseMessage
  },
  {
    Id: function_call,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: arguments,
        Name: Arguments,
        Type: string,
        IsRequired: true,
        Summary: The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
      },
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function to call.
      }
    ],
    Summary: Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.,
    AdditionalModels: null,
    Enumerations: null,
    Name: FunctionCall,
    ClassName: FunctionCall,
    ExternalClassName: FunctionCall,
    FileNameWithoutExtension: G.Models.FunctionCall
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: assistant,
        Name: Assistant,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The role of the author of this message.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: ChatCompletionStreamResponseDelta,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: content,
        Name: Content,
        Type: string?,
        IsRequired: false,
        Summary: The contents of the chunk message.
      },
      {
        Id: function_call,
        Name: FunctionCall,
        Type: ChatCompletionStreamResponseDeltaFunctionCall?,
        IsRequired: false,
        Summary: Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.
      },
      {
        Id: tool_calls,
        Name: ToolCalls,
        Type: global::System.Collections.Generic.IList<ChatCompletionMessageToolCallChunk?>?,
        IsRequired: false,
        Summary: 
      },
      {
        Id: role,
        Name: Role,
        Type: string?,
        IsRequired: false,
        Summary: The role of the author of this message.
      }
    ],
    Summary: A chat completion delta generated by streamed model responses.,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionStreamResponseDelta,
    ClassName: ChatCompletionStreamResponseDelta,
    ExternalClassName: ChatCompletionStreamResponseDelta,
    FileNameWithoutExtension: G.Models.ChatCompletionStreamResponseDelta
  },
  {
    Id: function_call,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: arguments,
        Name: Arguments,
        Type: string?,
        IsRequired: false,
        Summary: The arguments to call the function with, as generated by the model in JSON format. Note that the model does not always generate valid JSON, and may hallucinate parameters not defined by your function schema. Validate the arguments in your code before calling your function.
      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary: The name of the function to call.
      }
    ],
    Summary: Deprecated and replaced by `tool_calls`. The name and arguments of a function that should be called, as generated by the model.,
    AdditionalModels: null,
    Enumerations: null,
    Name: FunctionCall,
    ClassName: FunctionCall,
    ExternalClassName: FunctionCall,
    FileNameWithoutExtension: G.Models.FunctionCall
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: system,
        Name: System,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: user,
        Name: User,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: assistant,
        Name: Assistant,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: tool,
        Name: Tool,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The role of the author of this message.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: CreateChatCompletionRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: messages,
        Name: Messages,
        Type: global::System.Collections.Generic.IList<ChatCompletionRequestMessage>,
        IsRequired: true,
        Summary: A list of messages comprising the conversation so far. [Example Python code](https://cookbook.openai.com/examples/how_to_format_inputs_to_chatgpt_models).
      },
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. See the [model endpoint compatibility](/docs/models/model-endpoint-compatibility) table for details on which models work with the Chat API.
<br/>Example: gpt-3.5-turbo
      },
      {
        Id: frequency_penalty,
        Name: FrequencyPenalty,
        Type: double?,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.

[See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details)

<br/>Default Value: 0
      },
      {
        Id: logit_bias,
        Name: LogitBias,
        Type: CreateChatCompletionRequestLogitBias?,
        IsRequired: false,
        Summary:
Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.

<br/>Default Value: 
      },
      {
        Id: logprobs,
        Name: Logprobs,
        Type: bool?,
        IsRequired: false,
        DefaultValue: false,
        Summary:
Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the `content` of `message`. This option is currently not available on the `gpt-4-vision-preview` model.
<br/>Default Value: false
      },
      {
        Id: top_logprobs,
        Name: TopLogprobs,
        Type: int?,
        IsRequired: false,
        Summary: An integer between 0 and 5 specifying the number of most likely tokens to return at each token position, each with an associated log probability. `logprobs` must be set to `true` if this parameter is used.
      },
      {
        Id: max_tokens,
        Name: MaxTokens,
        Type: int?,
        IsRequired: false,
        Summary:
The maximum number of [tokens](/tokenizer) that can be generated in the chat completion.

The total length of input tokens and generated tokens is limited by the model's context length. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.

      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep `n` as `1` to minimize costs.
<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: presence_penalty,
        Name: PresencePenalty,
        Type: double?,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.

[See more information about frequency and presence penalties.](/docs/guides/text-generation/parameter-details)

<br/>Default Value: 0
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: CreateChatCompletionRequestResponseFormat?,
        IsRequired: false,
        Summary:
An object specifying the format that the model must output. Compatible with `gpt-4-1106-preview` and `gpt-3.5-turbo-1106`.

Setting to `{ "type": "json_object" }` enables JSON mode, which guarantees the message the model generates is valid JSON.

**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.

      },
      {
        Id: seed,
        Name: Seed,
        Type: int?,
        IsRequired: false,
        Summary:
This feature is in Beta.
If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same `seed` and parameters should return the same result.
Determinism is not guaranteed, and you should refer to the `system_fingerprint` response parameter to monitor changes in the backend.

      },
      {
        Id: stop,
        Name: Stop,
        Type: object?,
        IsRequired: false,
        Summary:
Up to 4 sequences where the API will stop generating further tokens.

<br/>Default Value: 
      },
      {
        Id: stream,
        Name: Stream,
        Type: bool?,
        IsRequired: false,
        DefaultValue: false,
        Summary:
If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available, with the stream terminated by a `data: [DONE]` message. [Example Python code](https://cookbook.openai.com/examples/how_to_stream_completions).

<br/>Default Value: false
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

We generally recommend altering this or `top_p` but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: top_p,
        Name: TopP,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or `temperature` but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<ChatCompletionTool?>?,
        IsRequired: false,
        Summary:
A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for.

      },
      {
        Id: tool_choice,
        Name: ToolChoice,
        Type: ChatCompletionToolChoiceOption?,
        IsRequired: false,
        Summary:
Controls which (if any) function is called by the model.
`none` means the model will not call a function and instead generates a message.
`auto` means the model can pick between generating a message or calling a function.
Specifying a particular function via `{"type: "function", "function": {"name": "my_function"}}` forces the model to call that function.

`none` is the default when no functions are present. `auto` is the default if functions are present.

      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      },
      {
        Id: function_call,
        Name: FunctionCall,
        Type: object?,
        IsRequired: false,
        Summary:
Deprecated in favor of `tool_choice`.

Controls which (if any) function is called by the model.
`none` means the model will not call a function and instead generates a message.
`auto` means the model can pick between generating a message or calling a function.
Specifying a particular function via `{"name": "my_function"}` forces the model to call that function.

`none` is the default when no functions are present. `auto` is the default if functions are present.

      },
      {
        Id: functions,
        Name: Functions,
        Type: global::System.Collections.Generic.IList<ChatCompletionFunctions?>?,
        IsRequired: false,
        Summary:
Deprecated in favor of `tools`.

A list of functions the model may generate JSON inputs for.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateChatCompletionRequest,
    ClassName: CreateChatCompletionRequest,
    ExternalClassName: CreateChatCompletionRequest,
    FileNameWithoutExtension: G.Models.CreateChatCompletionRequest
  },
  {
    Id: logit_bias,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Modify the likelihood of specified tokens appearing in the completion.

Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.

<br/>Default Value: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: LogitBias,
    ClassName: LogitBias,
    ExternalClassName: LogitBias,
    FileNameWithoutExtension: G.Models.LogitBias
  },
  {
    Id: response_format,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string?,
        IsRequired: false,
        DefaultValue: text,
        Summary:
Must be one of `text` or `json_object`.
<br/>Default Value: text
<br/>Example: json_object
      }
    ],
    Summary:
An object specifying the format that the model must output. Compatible with `gpt-4-1106-preview` and `gpt-3.5-turbo-1106`.

Setting to `{ "type": "json_object" }` enables JSON mode, which guarantees the message the model generates is valid JSON.

**Important:** when using JSON mode, you **must** also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly "stuck" request. Also note that the message content may be partially cut off if `finish_reason="length"`, which indicates the generation exceeded `max_tokens` or the conversation exceeded the max context length.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: ResponseFormat,
    ClassName: ResponseFormat,
    ExternalClassName: ResponseFormat,
    FileNameWithoutExtension: G.Models.ResponseFormat
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: text,
        Name: Text,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: json_object,
        Name: JsonObject,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
Must be one of `text` or `json_object`.
<br/>Default Value: text
<br/>Example: json_object,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: gpt-4-1106-preview,
        Name: Gpt41106Preview,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-4-vision-preview,
        Name: Gpt4VisionPreview,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-4,
        Name: Gpt4,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-4-0314,
        Name: Gpt40314,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-4-0613,
        Name: Gpt40613,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-4-32k,
        Name: Gpt432k,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-4-32k-0314,
        Name: Gpt432k0314,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-4-32k-0613,
        Name: Gpt432k0613,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-3.5-turbo,
        Name: Gpt35Turbo,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-3.5-turbo-16k,
        Name: Gpt35Turbo16k,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-3.5-turbo-0301,
        Name: Gpt35Turbo0301,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-3.5-turbo-0613,
        Name: Gpt35Turbo0613,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-3.5-turbo-1106,
        Name: Gpt35Turbo1106,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-3.5-turbo-16k-0613,
        Name: Gpt35Turbo16k0613,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: tool_choice,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: none,
        Name: None,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: auto,
        Name: Auto,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
`none` means the model will not call a function and instead generates a message. `auto` means the model can pick between generating a message or calling a function.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: ToolChoice,
    ClassName: ToolChoice,
    ExternalClassName: ToolChoice,
    FileNameWithoutExtension: G.Models.ToolChoice
  },
  {
    Id: function_call,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: none,
        Name: None,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: auto,
        Name: Auto,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
`none` means the model will not call a function and instead generates a message. `auto` means the model can pick between generating a message or calling a function.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: FunctionCall,
    ClassName: FunctionCall,
    ExternalClassName: FunctionCall,
    FileNameWithoutExtension: G.Models.FunctionCall
  },
  {
    Id: CreateChatCompletionResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: A unique identifier for the chat completion.
      },
      {
        Id: choices,
        Name: Choices,
        Type: global::System.Collections.Generic.IList<CreateChatCompletionResponseChoices>,
        IsRequired: true,
        Summary: A list of chat completion choices. Can be more than one if `n` is greater than 1.
      },
      {
        Id: created,
        Name: Created,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) of when the chat completion was created.
      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary: The model used for the chat completion.
      },
      {
        Id: system_fingerprint,
        Name: SystemFingerprint,
        Type: string?,
        IsRequired: false,
        Summary:
This fingerprint represents the backend configuration that the model runs with.

Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.

      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `chat.completion`.
      },
      {
        Id: usage,
        Name: Usage,
        Type: CompletionUsage?,
        IsRequired: false,
        Summary: Usage statistics for the completion request.
      }
    ],
    Summary: Represents a chat completion response returned by model, based on the provided input.,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateChatCompletionResponse,
    ClassName: CreateChatCompletionResponse,
    ExternalClassName: CreateChatCompletionResponse,
    FileNameWithoutExtension: G.Models.CreateChatCompletionResponse
  },
  {
    Id: choices,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: finish_reason,
        Name: FinishReason,
        Type: string,
        IsRequired: true,
        Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
`length` if the maximum number of tokens specified in the request was reached,
`content_filter` if content was omitted due to a flag from our content filters,
`tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function.

      },
      {
        Id: index,
        Name: Index,
        Type: int,
        IsRequired: true,
        Summary: The index of the choice in the list of choices.
      },
      {
        Id: message,
        Name: Message,
        Type: ChatCompletionResponseMessage,
        IsRequired: true,
        Summary: A chat completion message generated by the model.
      },
      {
        Id: logprobs,
        Name: Logprobs,
        Type: CreateChatCompletionResponseChoicesLogprobs?,
        IsRequired: true,
        Summary: Log probability information for the choice.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Choices,
    ClassName: Choices,
    ExternalClassName: Choices,
    FileNameWithoutExtension: G.Models.Choices
  },
  {
    Id: logprobs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: content,
        Name: Content,
        Type: global::System.Collections.Generic.IList<ChatCompletionTokenLogprob>?,
        IsRequired: true,
        Summary: A list of message content tokens with log probability information.
      }
    ],
    Summary: Log probability information for the choice.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Logprobs,
    ClassName: Logprobs,
    ExternalClassName: Logprobs,
    FileNameWithoutExtension: G.Models.Logprobs
  },
  {
    Id: finish_reason,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: stop,
        Name: Stop,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: length,
        Name: Length,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: tool_calls,
        Name: ToolCalls,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: content_filter,
        Name: ContentFilter,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: function_call,
        Name: FunctionCall,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
`length` if the maximum number of tokens specified in the request was reached,
`content_filter` if content was omitted due to a flag from our content filters,
`tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: FinishReason,
    ClassName: FinishReason,
    ExternalClassName: FinishReason,
    FileNameWithoutExtension: G.Models.FinishReason
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: chat.completion,
        Name: Chatcompletion,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `chat.completion`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateChatCompletionFunctionResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: A unique identifier for the chat completion.
      },
      {
        Id: choices,
        Name: Choices,
        Type: global::System.Collections.Generic.IList<CreateChatCompletionFunctionResponseChoices>,
        IsRequired: true,
        Summary: A list of chat completion choices. Can be more than one if `n` is greater than 1.
      },
      {
        Id: created,
        Name: Created,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) of when the chat completion was created.
      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary: The model used for the chat completion.
      },
      {
        Id: system_fingerprint,
        Name: SystemFingerprint,
        Type: string?,
        IsRequired: false,
        Summary:
This fingerprint represents the backend configuration that the model runs with.

Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.

      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `chat.completion`.
      },
      {
        Id: usage,
        Name: Usage,
        Type: CompletionUsage?,
        IsRequired: false,
        Summary: Usage statistics for the completion request.
      }
    ],
    Summary: Represents a chat completion response returned by model, based on the provided input.,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateChatCompletionFunctionResponse,
    ClassName: CreateChatCompletionFunctionResponse,
    ExternalClassName: CreateChatCompletionFunctionResponse,
    FileNameWithoutExtension: G.Models.CreateChatCompletionFunctionResponse
  },
  {
    Id: choices,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: finish_reason,
        Name: FinishReason,
        Type: string,
        IsRequired: true,
        Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence, `length` if the maximum number of tokens specified in the request was reached, `content_filter` if content was omitted due to a flag from our content filters, or `function_call` if the model called a function.

      },
      {
        Id: index,
        Name: Index,
        Type: int,
        IsRequired: true,
        Summary: The index of the choice in the list of choices.
      },
      {
        Id: message,
        Name: Message,
        Type: ChatCompletionResponseMessage,
        IsRequired: true,
        Summary: A chat completion message generated by the model.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Choices,
    ClassName: Choices,
    ExternalClassName: Choices,
    FileNameWithoutExtension: G.Models.Choices
  },
  {
    Id: finish_reason,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: stop,
        Name: Stop,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: length,
        Name: Length,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: function_call,
        Name: FunctionCall,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: content_filter,
        Name: ContentFilter,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence, `length` if the maximum number of tokens specified in the request was reached, `content_filter` if content was omitted due to a flag from our content filters, or `function_call` if the model called a function.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: FinishReason,
    ClassName: FinishReason,
    ExternalClassName: FinishReason,
    FileNameWithoutExtension: G.Models.FinishReason
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: chat.completion,
        Name: Chatcompletion,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `chat.completion`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: ChatCompletionTokenLogprob,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: token,
        Name: Token,
        Type: string,
        IsRequired: true,
        Summary: The token.
      },
      {
        Id: logprob,
        Name: Logprob,
        Type: double,
        IsRequired: true,
        Summary: The log probability of this token.
      },
      {
        Id: bytes,
        Name: Bytes,
        Type: global::System.Collections.Generic.IList<int>?,
        IsRequired: true,
        Summary: A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.
      },
      {
        Id: top_logprobs,
        Name: TopLogprobs,
        Type: global::System.Collections.Generic.IList<ChatCompletionTokenLogprobTopLogprobs>,
        IsRequired: true,
        Summary: List of the most likely tokens and their log probability, at this token position. In rare cases, there may be fewer than the number of requested `top_logprobs` returned.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ChatCompletionTokenLogprob,
    ClassName: ChatCompletionTokenLogprob,
    ExternalClassName: ChatCompletionTokenLogprob,
    FileNameWithoutExtension: G.Models.ChatCompletionTokenLogprob
  },
  {
    Id: top_logprobs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: token,
        Name: Token,
        Type: string,
        IsRequired: true,
        Summary: The token.
      },
      {
        Id: logprob,
        Name: Logprob,
        Type: double,
        IsRequired: true,
        Summary: The log probability of this token.
      },
      {
        Id: bytes,
        Name: Bytes,
        Type: global::System.Collections.Generic.IList<int>?,
        IsRequired: true,
        Summary: A list of integers representing the UTF-8 bytes representation of the token. Useful in instances where characters are represented by multiple tokens and their byte representations must be combined to generate the correct text representation. Can be `null` if there is no bytes representation for the token.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: TopLogprobs,
    ClassName: TopLogprobs,
    ExternalClassName: TopLogprobs,
    FileNameWithoutExtension: G.Models.TopLogprobs
  },
  {
    Id: ListPaginatedFineTuningJobsResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<FineTuningJob>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: has_more,
        Name: HasMore,
        Type: bool,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListPaginatedFineTuningJobsResponse,
    ClassName: ListPaginatedFineTuningJobsResponse,
    ExternalClassName: ListPaginatedFineTuningJobsResponse,
    FileNameWithoutExtension: G.Models.ListPaginatedFineTuningJobsResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: list,
        Name: List,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateChatCompletionStreamResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: A unique identifier for the chat completion. Each chunk has the same ID.
      },
      {
        Id: choices,
        Name: Choices,
        Type: global::System.Collections.Generic.IList<CreateChatCompletionStreamResponseChoices>,
        IsRequired: true,
        Summary: A list of chat completion choices. Can be more than one if `n` is greater than 1.
      },
      {
        Id: created,
        Name: Created,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) of when the chat completion was created. Each chunk has the same timestamp.
      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary: The model to generate the completion.
      },
      {
        Id: system_fingerprint,
        Name: SystemFingerprint,
        Type: string?,
        IsRequired: false,
        Summary:
This fingerprint represents the backend configuration that the model runs with.
Can be used in conjunction with the `seed` request parameter to understand when backend changes have been made that might impact determinism.

      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `chat.completion.chunk`.
      }
    ],
    Summary: Represents a streamed chunk of a chat completion response returned by model, based on the provided input.,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateChatCompletionStreamResponse,
    ClassName: CreateChatCompletionStreamResponse,
    ExternalClassName: CreateChatCompletionStreamResponse,
    FileNameWithoutExtension: G.Models.CreateChatCompletionStreamResponse
  },
  {
    Id: choices,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: delta,
        Name: Delta,
        Type: ChatCompletionStreamResponseDelta,
        IsRequired: true,
        Summary: A chat completion delta generated by streamed model responses.
      },
      {
        Id: logprobs,
        Name: Logprobs,
        Type: CreateChatCompletionStreamResponseChoicesLogprobs?,
        IsRequired: false,
        Summary: Log probability information for the choice.
      },
      {
        Id: finish_reason,
        Name: FinishReason,
        Type: string?,
        IsRequired: true,
        Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
`length` if the maximum number of tokens specified in the request was reached,
`content_filter` if content was omitted due to a flag from our content filters,
`tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function.

      },
      {
        Id: index,
        Name: Index,
        Type: int,
        IsRequired: true,
        Summary: The index of the choice in the list of choices.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Choices,
    ClassName: Choices,
    ExternalClassName: Choices,
    FileNameWithoutExtension: G.Models.Choices
  },
  {
    Id: logprobs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: content,
        Name: Content,
        Type: global::System.Collections.Generic.IList<ChatCompletionTokenLogprob>?,
        IsRequired: true,
        Summary: A list of message content tokens with log probability information.
      }
    ],
    Summary: Log probability information for the choice.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Logprobs,
    ClassName: Logprobs,
    ExternalClassName: Logprobs,
    FileNameWithoutExtension: G.Models.Logprobs
  },
  {
    Id: finish_reason,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: stop,
        Name: Stop,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: length,
        Name: Length,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: tool_calls,
        Name: ToolCalls,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: content_filter,
        Name: ContentFilter,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: function_call,
        Name: FunctionCall,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
`length` if the maximum number of tokens specified in the request was reached,
`content_filter` if content was omitted due to a flag from our content filters,
`tool_calls` if the model called a tool, or `function_call` (deprecated) if the model called a function.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: FinishReason,
    ClassName: FinishReason,
    ExternalClassName: FinishReason,
    FileNameWithoutExtension: G.Models.FinishReason
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: chat.completion.chunk,
        Name: Chatcompletionchunk,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `chat.completion.chunk`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateChatCompletionImageResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: Represents a streamed chunk of a chat completion response returned by model, based on the provided input.,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateChatCompletionImageResponse,
    ClassName: CreateChatCompletionImageResponse,
    ExternalClassName: CreateChatCompletionImageResponse,
    FileNameWithoutExtension: G.Models.CreateChatCompletionImageResponse
  },
  {
    Id: CreateEditRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: instruction,
        Name: Instruction,
        Type: string,
        IsRequired: true,
        Summary:
The instruction that tells the model how to edit the prompt.
<br/>Example: Fix the spelling mistakes.
      },
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. You can use the `text-davinci-edit-001` or `code-davinci-edit-001` model with this endpoint.
<br/>Example: text-davinci-edit-001
      },
      {
        Id: input,
        Name: Input,
        Type: string?,
        IsRequired: false,
        DefaultValue: ,
        Summary:
The input text to use as a starting point for the edit.
<br/>Default Value: 
<br/>Example: What day of the wek is it?
      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
How many edits to generate for the input and instruction.
<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.

We generally recommend altering this or `top_p` but not both.

<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: top_p,
        Name: TopP,
        Type: double?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.

We generally recommend altering this or `temperature` but not both.

<br/>Default Value: 1
<br/>Example: 1
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateEditRequest,
    ClassName: CreateEditRequest,
    ExternalClassName: CreateEditRequest,
    FileNameWithoutExtension: G.Models.CreateEditRequest
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: text-davinci-edit-001,
        Name: TextDavinciEdit001,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: code-davinci-edit-001,
        Name: CodeDavinciEdit001,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: CreateEditResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: choices,
        Name: Choices,
        Type: global::System.Collections.Generic.IList<CreateEditResponseChoices>,
        IsRequired: true,
        Summary: A list of edit choices. Can be more than one if `n` is greater than 1.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `edit`.
      },
      {
        Id: created,
        Name: Created,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) of when the edit was created.
      },
      {
        Id: usage,
        Name: Usage,
        Type: CompletionUsage,
        IsRequired: true,
        Summary: Usage statistics for the completion request.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateEditResponse,
    ClassName: CreateEditResponse,
    ExternalClassName: CreateEditResponse,
    FileNameWithoutExtension: G.Models.CreateEditResponse
  },
  {
    Id: choices,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: finish_reason,
        Name: FinishReason,
        Type: string,
        IsRequired: true,
        Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
`length` if the maximum number of tokens specified in the request was reached,
or `content_filter` if content was omitted due to a flag from our content filters.

      },
      {
        Id: index,
        Name: Index,
        Type: int,
        IsRequired: true,
        Summary: The index of the choice in the list of choices.
      },
      {
        Id: text,
        Name: Text,
        Type: string,
        IsRequired: true,
        Summary: The edited result.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Choices,
    ClassName: Choices,
    ExternalClassName: Choices,
    FileNameWithoutExtension: G.Models.Choices
  },
  {
    Id: finish_reason,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: stop,
        Name: Stop,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: length,
        Name: Length,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The reason the model stopped generating tokens. This will be `stop` if the model hit a natural stop point or a provided stop sequence,
`length` if the maximum number of tokens specified in the request was reached,
or `content_filter` if content was omitted due to a flag from our content filters.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: FinishReason,
    ClassName: FinishReason,
    ExternalClassName: FinishReason,
    FileNameWithoutExtension: G.Models.FinishReason
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: edit,
        Name: Edit,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `edit`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateImageRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: prompt,
        Name: Prompt,
        Type: string,
        IsRequired: true,
        Summary:
A text description of the desired image(s). The maximum length is 1000 characters for `dall-e-2` and 4000 characters for `dall-e-3`.
<br/>Example: A cute baby sea otter
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: dall-e-2,
        Summary:
The model to use for image generation.
<br/>Default Value: dall-e-2
<br/>Example: dall-e-3
      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported.
<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: quality,
        Name: Quality,
        Type: string?,
        IsRequired: false,
        DefaultValue: standard,
        Summary:
The quality of the image that will be generated. `hd` creates images with finer details and greater consistency across the image. This param is only supported for `dall-e-3`.
<br/>Default Value: standard
<br/>Example: standard
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: url,
        Summary:
The format in which the generated images are returned. Must be one of `url` or `b64_json`.
<br/>Default Value: url
<br/>Example: url
      },
      {
        Id: size,
        Name: Size,
        Type: string?,
        IsRequired: false,
        DefaultValue: 1024x1024,
        Summary:
The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3` models.
<br/>Default Value: 1024x1024
<br/>Example: 1024x1024
      },
      {
        Id: style,
        Name: Style,
        Type: string?,
        IsRequired: false,
        DefaultValue: vivid,
        Summary:
The style of the generated images. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for `dall-e-3`.
<br/>Default Value: vivid
<br/>Example: vivid
      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateImageRequest,
    ClassName: CreateImageRequest,
    ExternalClassName: CreateImageRequest,
    FileNameWithoutExtension: G.Models.CreateImageRequest
  },
  {
    Id: quality,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: standard,
        Name: Standard,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: hd,
        Name: Hd,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The quality of the image that will be generated. `hd` creates images with finer details and greater consistency across the image. This param is only supported for `dall-e-3`.
<br/>Default Value: standard
<br/>Example: standard,
    AdditionalModels: null,
    Enumerations: null,
    Name: Quality,
    ClassName: Quality,
    ExternalClassName: Quality,
    FileNameWithoutExtension: G.Models.Quality
  },
  {
    Id: response_format,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: url,
        Name: Url,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: b64_json,
        Name: B64Json,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The format in which the generated images are returned. Must be one of `url` or `b64_json`.
<br/>Default Value: url
<br/>Example: url,
    AdditionalModels: null,
    Enumerations: null,
    Name: ResponseFormat,
    ClassName: ResponseFormat,
    ExternalClassName: ResponseFormat,
    FileNameWithoutExtension: G.Models.ResponseFormat
  },
  {
    Id: size,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: 256x256,
        Name: 256x256,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: 512x512,
        Name: 512x512,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: 1024x1024,
        Name: 1024x1024,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: 1792x1024,
        Name: 1792x1024,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: 1024x1792,
        Name: 1024x1792,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024` for `dall-e-2`. Must be one of `1024x1024`, `1792x1024`, or `1024x1792` for `dall-e-3` models.
<br/>Default Value: 1024x1024
<br/>Example: 1024x1024,
    AdditionalModels: null,
    Enumerations: null,
    Name: Size,
    ClassName: Size,
    ExternalClassName: Size,
    FileNameWithoutExtension: G.Models.Size
  },
  {
    Id: style,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: vivid,
        Name: Vivid,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: natural,
        Name: Natural,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The style of the generated images. Must be one of `vivid` or `natural`. Vivid causes the model to lean towards generating hyper-real and dramatic images. Natural causes the model to produce more natural, less hyper-real looking images. This param is only supported for `dall-e-3`.
<br/>Default Value: vivid
<br/>Example: vivid,
    AdditionalModels: null,
    Enumerations: null,
    Name: Style,
    ClassName: Style,
    ExternalClassName: Style,
    FileNameWithoutExtension: G.Models.Style
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: dall-e-2,
        Name: DallE2,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: dall-e-3,
        Name: DallE3,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: ImagesResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: created,
        Name: Created,
        Type: int,
        IsRequired: true,
        Summary: 
      },
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<Image>,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ImagesResponse,
    ClassName: ImagesResponse,
    ExternalClassName: ImagesResponse,
    FileNameWithoutExtension: G.Models.ImagesResponse
  },
  {
    Id: Image,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: b64_json,
        Name: B64Json,
        Type: string?,
        IsRequired: false,
        Summary: The base64-encoded JSON of the generated image, if `response_format` is `b64_json`.
      },
      {
        Id: url,
        Name: Url,
        Type: string?,
        IsRequired: false,
        Summary: The URL of the generated image, if `response_format` is `url` (default).
      },
      {
        Id: revised_prompt,
        Name: RevisedPrompt,
        Type: string?,
        IsRequired: false,
        Summary: The prompt that was used to generate the image, if there was any revision to the prompt.
      }
    ],
    Summary: Represents the url or the content of an image generated by the OpenAI API.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Image,
    ClassName: Image,
    ExternalClassName: Image,
    FileNameWithoutExtension: G.Models.Image
  },
  {
    Id: CreateImageEditRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: image,
        Name: Image,
        Type: byte[],
        IsRequired: true,
        Summary: The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.
      },
      {
        Id: prompt,
        Name: Prompt,
        Type: string,
        IsRequired: true,
        Summary:
A text description of the desired image(s). The maximum length is 1000 characters.
<br/>Example: A cute baby sea otter wearing a beret
      },
      {
        Id: mask,
        Name: Mask,
        Type: byte[]?,
        IsRequired: false,
        Summary: An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where `image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as `image`.
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: dall-e-2,
        Summary:
The model to use for image generation. Only `dall-e-2` is supported at this time.
<br/>Default Value: dall-e-2
<br/>Example: dall-e-2
      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
The number of images to generate. Must be between 1 and 10.
<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: size,
        Name: Size,
        Type: string?,
        IsRequired: false,
        DefaultValue: 1024x1024,
        Summary:
The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
<br/>Default Value: 1024x1024
<br/>Example: 1024x1024
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: url,
        Summary:
The format in which the generated images are returned. Must be one of `url` or `b64_json`.
<br/>Default Value: url
<br/>Example: url
      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateImageEditRequest,
    ClassName: CreateImageEditRequest,
    ExternalClassName: CreateImageEditRequest,
    FileNameWithoutExtension: G.Models.CreateImageEditRequest
  },
  {
    Id: size,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: 256x256,
        Name: 256x256,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: 512x512,
        Name: 512x512,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: 1024x1024,
        Name: 1024x1024,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
<br/>Default Value: 1024x1024
<br/>Example: 1024x1024,
    AdditionalModels: null,
    Enumerations: null,
    Name: Size,
    ClassName: Size,
    ExternalClassName: Size,
    FileNameWithoutExtension: G.Models.Size
  },
  {
    Id: response_format,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: url,
        Name: Url,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: b64_json,
        Name: B64Json,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The format in which the generated images are returned. Must be one of `url` or `b64_json`.
<br/>Default Value: url
<br/>Example: url,
    AdditionalModels: null,
    Enumerations: null,
    Name: ResponseFormat,
    ClassName: ResponseFormat,
    ExternalClassName: ResponseFormat,
    FileNameWithoutExtension: G.Models.ResponseFormat
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: dall-e-2,
        Name: DallE2,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: CreateImageVariationRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: image,
        Name: Image,
        Type: byte[],
        IsRequired: true,
        Summary: The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: dall-e-2,
        Summary:
The model to use for image generation. Only `dall-e-2` is supported at this time.
<br/>Default Value: dall-e-2
<br/>Example: dall-e-2
      },
      {
        Id: n,
        Name: N,
        Type: int?,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
The number of images to generate. Must be between 1 and 10. For `dall-e-3`, only `n=1` is supported.
<br/>Default Value: 1
<br/>Example: 1
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: url,
        Summary:
The format in which the generated images are returned. Must be one of `url` or `b64_json`.
<br/>Default Value: url
<br/>Example: url
      },
      {
        Id: size,
        Name: Size,
        Type: string?,
        IsRequired: false,
        DefaultValue: 1024x1024,
        Summary:
The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
<br/>Default Value: 1024x1024
<br/>Example: 1024x1024
      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateImageVariationRequest,
    ClassName: CreateImageVariationRequest,
    ExternalClassName: CreateImageVariationRequest,
    FileNameWithoutExtension: G.Models.CreateImageVariationRequest
  },
  {
    Id: response_format,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: url,
        Name: Url,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: b64_json,
        Name: B64Json,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The format in which the generated images are returned. Must be one of `url` or `b64_json`.
<br/>Default Value: url
<br/>Example: url,
    AdditionalModels: null,
    Enumerations: null,
    Name: ResponseFormat,
    ClassName: ResponseFormat,
    ExternalClassName: ResponseFormat,
    FileNameWithoutExtension: G.Models.ResponseFormat
  },
  {
    Id: size,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: 256x256,
        Name: 256x256,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: 512x512,
        Name: 512x512,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: 1024x1024,
        Name: 1024x1024,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
<br/>Default Value: 1024x1024
<br/>Example: 1024x1024,
    AdditionalModels: null,
    Enumerations: null,
    Name: Size,
    ClassName: Size,
    ExternalClassName: Size,
    FileNameWithoutExtension: G.Models.Size
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: dall-e-2,
        Name: DallE2,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: CreateModerationRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: input,
        Name: Input,
        Type: object,
        IsRequired: true,
        Summary: The input text to classify
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: text-moderation-latest,
        Summary:
Two content moderations models are available: `text-moderation-stable` and `text-moderation-latest`.

The default is `text-moderation-latest` which will be automatically upgraded over time. This ensures you are always using our most accurate model. If you use `text-moderation-stable`, we will provide advanced notice before updating the model. Accuracy of `text-moderation-stable` may be slightly lower than for `text-moderation-latest`.

<br/>Default Value: text-moderation-latest
<br/>Example: text-moderation-stable
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateModerationRequest,
    ClassName: CreateModerationRequest,
    ExternalClassName: CreateModerationRequest,
    FileNameWithoutExtension: G.Models.CreateModerationRequest
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: text-moderation-latest,
        Name: TextModerationLatest,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: text-moderation-stable,
        Name: TextModerationStable,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: CreateModerationResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The unique identifier for the moderation request.
      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary: The model used to generate the moderation results.
      },
      {
        Id: results,
        Name: Results,
        Type: global::System.Collections.Generic.IList<CreateModerationResponseResults>,
        IsRequired: true,
        Summary: A list of moderation objects.
      }
    ],
    Summary: Represents policy compliance report by OpenAI's content moderation model against a given input.,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateModerationResponse,
    ClassName: CreateModerationResponse,
    ExternalClassName: CreateModerationResponse,
    FileNameWithoutExtension: G.Models.CreateModerationResponse
  },
  {
    Id: results,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: flagged,
        Name: Flagged,
        Type: bool,
        IsRequired: true,
        Summary: Whether the content violates [OpenAI's usage policies](/policies/usage-policies).
      },
      {
        Id: categories,
        Name: Categories,
        Type: CreateModerationResponseResultsCategories,
        IsRequired: true,
        Summary: A list of the categories, and whether they are flagged or not.
      },
      {
        Id: category_scores,
        Name: CategoryScores,
        Type: CreateModerationResponseResultsCategoryScores,
        IsRequired: true,
        Summary: A list of the categories along with their scores as predicted by model.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Results,
    ClassName: Results,
    ExternalClassName: Results,
    FileNameWithoutExtension: G.Models.Results
  },
  {
    Id: categories,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: hate,
        Name: Hate,
        Type: bool,
        IsRequired: true,
        Summary: Content that expresses, incites, or promotes hate based on race, gender, ethnicity, religion, nationality, sexual orientation, disability status, or caste. Hateful content aimed at non-protected groups (e.g., chess players) is harassment.
      },
      {
        Id: hate/threatening,
        Name: HateThreatening,
        Type: bool,
        IsRequired: true,
        Summary: Hateful content that also includes violence or serious harm towards the targeted group based on race, gender, ethnicity, religion, nationality, sexual orientation, disability status, or caste.
      },
      {
        Id: harassment,
        Name: Harassment,
        Type: bool,
        IsRequired: true,
        Summary: Content that expresses, incites, or promotes harassing language towards any target.
      },
      {
        Id: harassment/threatening,
        Name: HarassmentThreatening,
        Type: bool,
        IsRequired: true,
        Summary: Harassment content that also includes violence or serious harm towards any target.
      },
      {
        Id: self-harm,
        Name: SelfHarm,
        Type: bool,
        IsRequired: true,
        Summary: Content that promotes, encourages, or depicts acts of self-harm, such as suicide, cutting, and eating disorders.
      },
      {
        Id: self-harm/intent,
        Name: SelfHarmIntent,
        Type: bool,
        IsRequired: true,
        Summary: Content where the speaker expresses that they are engaging or intend to engage in acts of self-harm, such as suicide, cutting, and eating disorders.
      },
      {
        Id: self-harm/instructions,
        Name: SelfHarmInstructions,
        Type: bool,
        IsRequired: true,
        Summary: Content that encourages performing acts of self-harm, such as suicide, cutting, and eating disorders, or that gives instructions or advice on how to commit such acts.
      },
      {
        Id: sexual,
        Name: Sexual,
        Type: bool,
        IsRequired: true,
        Summary: Content meant to arouse sexual excitement, such as the description of sexual activity, or that promotes sexual services (excluding sex education and wellness).
      },
      {
        Id: sexual/minors,
        Name: SexualMinors,
        Type: bool,
        IsRequired: true,
        Summary: Sexual content that includes an individual who is under 18 years old.
      },
      {
        Id: violence,
        Name: Violence,
        Type: bool,
        IsRequired: true,
        Summary: Content that depicts death, violence, or physical injury.
      },
      {
        Id: violence/graphic,
        Name: ViolenceGraphic,
        Type: bool,
        IsRequired: true,
        Summary: Content that depicts death, violence, or physical injury in graphic detail.
      }
    ],
    Summary: A list of the categories, and whether they are flagged or not.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Categories,
    ClassName: Categories,
    ExternalClassName: Categories,
    FileNameWithoutExtension: G.Models.Categories
  },
  {
    Id: category_scores,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: hate,
        Name: Hate,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'hate'.
      },
      {
        Id: hate/threatening,
        Name: HateThreatening,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'hate/threatening'.
      },
      {
        Id: harassment,
        Name: Harassment,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'harassment'.
      },
      {
        Id: harassment/threatening,
        Name: HarassmentThreatening,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'harassment/threatening'.
      },
      {
        Id: self-harm,
        Name: SelfHarm,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'self-harm'.
      },
      {
        Id: self-harm/intent,
        Name: SelfHarmIntent,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'self-harm/intent'.
      },
      {
        Id: self-harm/instructions,
        Name: SelfHarmInstructions,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'self-harm/instructions'.
      },
      {
        Id: sexual,
        Name: Sexual,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'sexual'.
      },
      {
        Id: sexual/minors,
        Name: SexualMinors,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'sexual/minors'.
      },
      {
        Id: violence,
        Name: Violence,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'violence'.
      },
      {
        Id: violence/graphic,
        Name: ViolenceGraphic,
        Type: double,
        IsRequired: true,
        Summary: The score for the category 'violence/graphic'.
      }
    ],
    Summary: A list of the categories along with their scores as predicted by model.,
    AdditionalModels: null,
    Enumerations: null,
    Name: CategoryScores,
    ClassName: CategoryScores,
    ExternalClassName: CategoryScores,
    FileNameWithoutExtension: G.Models.CategoryScores
  },
  {
    Id: ListFilesResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<OpenAIFile>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListFilesResponse,
    ClassName: ListFilesResponse,
    ExternalClassName: ListFilesResponse,
    FileNameWithoutExtension: G.Models.ListFilesResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: list,
        Name: List,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateFileRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: file,
        Name: File,
        Type: byte[],
        IsRequired: true,
        Summary:
The File object (not file name) to be uploaded.

      },
      {
        Id: purpose,
        Name: Purpose,
        Type: string,
        IsRequired: true,
        Summary:
The intended purpose of the uploaded file.

Use "fine-tune" for [Fine-tuning](/docs/api-reference/fine-tuning) and "assistants" for [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This allows us to validate the format of the uploaded file is correct for fine-tuning.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateFileRequest,
    ClassName: CreateFileRequest,
    ExternalClassName: CreateFileRequest,
    FileNameWithoutExtension: G.Models.CreateFileRequest
  },
  {
    Id: purpose,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: fine-tune,
        Name: FineTune,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: assistants,
        Name: Assistants,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The intended purpose of the uploaded file.

Use "fine-tune" for [Fine-tuning](/docs/api-reference/fine-tuning) and "assistants" for [Assistants](/docs/api-reference/assistants) and [Messages](/docs/api-reference/messages). This allows us to validate the format of the uploaded file is correct for fine-tuning.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Purpose,
    ClassName: Purpose,
    ExternalClassName: Purpose,
    FileNameWithoutExtension: G.Models.Purpose
  },
  {
    Id: DeleteFileResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: deleted,
        Name: Deleted,
        Type: bool,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: DeleteFileResponse,
    ClassName: DeleteFileResponse,
    ExternalClassName: DeleteFileResponse,
    FileNameWithoutExtension: G.Models.DeleteFileResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: file,
        Name: File,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateFineTuningJobRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
The name of the model to fine-tune. You can select one of the
[supported models](/docs/guides/fine-tuning/what-models-can-be-fine-tuned).

<br/>Example: gpt-3.5-turbo
      },
      {
        Id: training_file,
        Name: TrainingFile,
        Type: string,
        IsRequired: true,
        Summary:
The ID of an uploaded file that contains training data.

See [upload file](/docs/api-reference/files/upload) for how to upload a file.

Your dataset must be formatted as a JSONL file. Additionally, you must upload your file with the purpose `fine-tune`.

See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.

<br/>Example: file-abc123
      },
      {
        Id: hyperparameters,
        Name: Hyperparameters,
        Type: CreateFineTuningJobRequestHyperparameters?,
        IsRequired: false,
        Summary: The hyperparameters used for the fine-tuning job.
      },
      {
        Id: suffix,
        Name: Suffix,
        Type: string?,
        IsRequired: false,
        Summary:
A string of up to 18 characters that will be added to your fine-tuned model name.

For example, a `suffix` of "custom-model-name" would produce a model name like `ft:gpt-3.5-turbo:openai:custom-model-name:7p4lURel`.

<br/>Default Value: 
      },
      {
        Id: validation_file,
        Name: ValidationFile,
        Type: string?,
        IsRequired: false,
        Summary:
The ID of an uploaded file that contains validation data.

If you provide this file, the data is used to generate validation
metrics periodically during fine-tuning. These metrics can be viewed in
the fine-tuning results file.
The same data should not be present in both train and validation files.

Your dataset must be formatted as a JSONL file. You must upload your file with the purpose `fine-tune`.

See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.

<br/>Example: file-abc123
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateFineTuningJobRequest,
    ClassName: CreateFineTuningJobRequest,
    ExternalClassName: CreateFineTuningJobRequest,
    FileNameWithoutExtension: G.Models.CreateFineTuningJobRequest
  },
  {
    Id: hyperparameters,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: batch_size,
        Name: BatchSize,
        Type: object?,
        IsRequired: false,
        DefaultValue: auto,
        Summary:
Number of examples in each batch. A larger batch size means that model parameters
are updated less frequently, but with lower variance.

<br/>Default Value: auto
      },
      {
        Id: learning_rate_multiplier,
        Name: LearningRateMultiplier,
        Type: object?,
        IsRequired: false,
        DefaultValue: auto,
        Summary:
Scaling factor for the learning rate. A smaller learning rate may be useful to avoid
overfitting.

<br/>Default Value: auto
      },
      {
        Id: n_epochs,
        Name: NEpochs,
        Type: object?,
        IsRequired: false,
        DefaultValue: auto,
        Summary:
The number of epochs to train the model for. An epoch refers to one full cycle
through the training dataset.

<br/>Default Value: auto
      }
    ],
    Summary: The hyperparameters used for the fine-tuning job.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Hyperparameters,
    ClassName: Hyperparameters,
    ExternalClassName: Hyperparameters,
    FileNameWithoutExtension: G.Models.Hyperparameters
  },
  {
    Id: batch_size,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: auto,
        Name: Auto,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: BatchSize,
    ClassName: BatchSize,
    ExternalClassName: BatchSize,
    FileNameWithoutExtension: G.Models.BatchSize
  },
  {
    Id: learning_rate_multiplier,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: auto,
        Name: Auto,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: LearningRateMultiplier,
    ClassName: LearningRateMultiplier,
    ExternalClassName: LearningRateMultiplier,
    FileNameWithoutExtension: G.Models.LearningRateMultiplier
  },
  {
    Id: n_epochs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: auto,
        Name: Auto,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: NEpochs,
    ClassName: NEpochs,
    ExternalClassName: NEpochs,
    FileNameWithoutExtension: G.Models.NEpochs
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: babbage-002,
        Name: Babbage002,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: davinci-002,
        Name: Davinci002,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: gpt-3.5-turbo,
        Name: Gpt35Turbo,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: ListFineTuningJobEventsResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<FineTuningJobEvent>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListFineTuningJobEventsResponse,
    ClassName: ListFineTuningJobEventsResponse,
    ExternalClassName: ListFineTuningJobEventsResponse,
    FileNameWithoutExtension: G.Models.ListFineTuningJobEventsResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: list,
        Name: List,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateFineTuneRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: training_file,
        Name: TrainingFile,
        Type: string,
        IsRequired: true,
        Summary:
The ID of an uploaded file that contains training data.

See [upload file](/docs/api-reference/files/upload) for how to upload a file.

Your dataset must be formatted as a JSONL file, where each training
example is a JSON object with the keys "prompt" and "completion".
Additionally, you must upload your file with the purpose `fine-tune`.

See the [fine-tuning guide](/docs/guides/legacy-fine-tuning/creating-training-data) for more details.

<br/>Example: file-abc123
      },
      {
        Id: batch_size,
        Name: BatchSize,
        Type: int?,
        IsRequired: false,
        Summary:
The batch size to use for training. The batch size is the number of
training examples used to train a single forward and backward pass.

By default, the batch size will be dynamically configured to be
~0.2% of the number of examples in the training set, capped at 256 -
in general, we've found that larger batch sizes tend to work better
for larger datasets.

<br/>Default Value: 
      },
      {
        Id: classification_betas,
        Name: ClassificationBetas,
        Type: global::System.Collections.Generic.IList<double>?,
        IsRequired: false,
        Summary:
If this is provided, we calculate F-beta scores at the specified
beta values. The F-beta score is a generalization of F-1 score.
This is only used for binary classification.

With a beta of 1 (i.e. the F-1 score), precision and recall are
given the same weight. A larger beta score puts more weight on
recall and less on precision. A smaller beta score puts more weight
on precision and less on recall.

<br/>Default Value: 
<br/>Example: [0.6, 1, 1.5, 2]
      },
      {
        Id: classification_n_classes,
        Name: ClassificationNClasses,
        Type: int?,
        IsRequired: false,
        Summary:
The number of classes in a classification task.

This parameter is required for multiclass classification.

<br/>Default Value: 
      },
      {
        Id: classification_positive_class,
        Name: ClassificationPositiveClass,
        Type: string?,
        IsRequired: false,
        Summary:
The positive class in binary classification.

This parameter is needed to generate precision, recall, and F1
metrics when doing binary classification.

<br/>Default Value: 
      },
      {
        Id: compute_classification_metrics,
        Name: ComputeClassificationMetrics,
        Type: bool?,
        IsRequired: false,
        DefaultValue: false,
        Summary:
If set, we calculate classification-specific metrics such as accuracy
and F-1 score using the validation set at the end of every epoch.
These metrics can be viewed in the [results file](/docs/guides/legacy-fine-tuning/analyzing-your-fine-tuned-model).

In order to compute classification metrics, you must provide a
`validation_file`. Additionally, you must
specify `classification_n_classes` for multiclass classification or
`classification_positive_class` for binary classification.

<br/>Default Value: false
      },
      {
        Id: hyperparameters,
        Name: Hyperparameters,
        Type: CreateFineTuneRequestHyperparameters?,
        IsRequired: false,
        Summary: The hyperparameters used for the fine-tuning job.
      },
      {
        Id: learning_rate_multiplier,
        Name: LearningRateMultiplier,
        Type: double?,
        IsRequired: false,
        Summary:
The learning rate multiplier to use for training.
The fine-tuning learning rate is the original learning rate used for
pretraining multiplied by this value.

By default, the learning rate multiplier is the 0.05, 0.1, or 0.2
depending on final `batch_size` (larger learning rates tend to
perform better with larger batch sizes). We recommend experimenting
with values in the range 0.02 to 0.2 to see what produces the best
results.

<br/>Default Value: 
      },
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        DefaultValue: curie,
        Summary:
The name of the base model to fine-tune. You can select one of "ada",
"babbage", "curie", "davinci", or a fine-tuned model created after 2022-04-21 and before 2023-08-22.
To learn more about these models, see the
[Models](/docs/models) documentation.

<br/>Default Value: curie
<br/>Example: curie
      },
      {
        Id: prompt_loss_weight,
        Name: PromptLossWeight,
        Type: double?,
        IsRequired: false,
        DefaultValue: 0.01,
        Summary:
The weight to use for loss on the prompt tokens. This controls how
much the model tries to learn to generate the prompt (as compared
to the completion which always has a weight of 1.0), and can add
a stabilizing effect to training when completions are short.

If prompts are extremely long (relative to completions), it may make
sense to reduce this weight so as to avoid over-prioritizing
learning the prompt.

<br/>Default Value: 0.01
      },
      {
        Id: suffix,
        Name: Suffix,
        Type: string?,
        IsRequired: false,
        Summary:
A string of up to 40 characters that will be added to your fine-tuned model name.

For example, a `suffix` of "custom-model-name" would produce a model name like `ada:ft-your-org:custom-model-name-2022-02-15-04-21-04`.

<br/>Default Value: 
      },
      {
        Id: validation_file,
        Name: ValidationFile,
        Type: string?,
        IsRequired: false,
        Summary:
The ID of an uploaded file that contains validation data.

If you provide this file, the data is used to generate validation
metrics periodically during fine-tuning. These metrics can be viewed in
the [fine-tuning results file](/docs/guides/legacy-fine-tuning/analyzing-your-fine-tuned-model).
Your train and validation data should be mutually exclusive.

Your dataset must be formatted as a JSONL file, where each validation
example is a JSON object with the keys "prompt" and "completion".
Additionally, you must upload your file with the purpose `fine-tune`.

See the [fine-tuning guide](/docs/guides/legacy-fine-tuning/creating-training-data) for more details.

<br/>Example: file-abc123
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateFineTuneRequest,
    ClassName: CreateFineTuneRequest,
    ExternalClassName: CreateFineTuneRequest,
    FileNameWithoutExtension: G.Models.CreateFineTuneRequest
  },
  {
    Id: hyperparameters,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: n_epochs,
        Name: NEpochs,
        Type: object?,
        IsRequired: false,
        DefaultValue: auto,
        Summary:
The number of epochs to train the model for. An epoch refers to one
full cycle through the training dataset.

<br/>Default Value: auto
      }
    ],
    Summary: The hyperparameters used for the fine-tuning job.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Hyperparameters,
    ClassName: Hyperparameters,
    ExternalClassName: Hyperparameters,
    FileNameWithoutExtension: G.Models.Hyperparameters
  },
  {
    Id: n_epochs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: auto,
        Name: Auto,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: NEpochs,
    ClassName: NEpochs,
    ExternalClassName: NEpochs,
    FileNameWithoutExtension: G.Models.NEpochs
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: ada,
        Name: Ada,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: babbage,
        Name: Babbage,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: curie,
        Name: Curie,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: davinci,
        Name: Davinci,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: ListFineTunesResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<FineTune>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListFineTunesResponse,
    ClassName: ListFineTunesResponse,
    ExternalClassName: ListFineTunesResponse,
    FileNameWithoutExtension: G.Models.ListFineTunesResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: list,
        Name: List,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: ListFineTuneEventsResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<FineTuneEvent>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListFineTuneEventsResponse,
    ClassName: ListFineTuneEventsResponse,
    ExternalClassName: ListFineTuneEventsResponse,
    FileNameWithoutExtension: G.Models.ListFineTuneEventsResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: list,
        Name: List,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateEmbeddingRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: input,
        Name: Input,
        Type: object,
        IsRequired: true,
        Summary:
Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays. The input must not exceed the max input tokens for the model (8192 tokens for `text-embedding-ada-002`), cannot be an empty string, and any array must be 2048 dimensions or less. [Example Python code](https://cookbook.openai.com/examples/how_to_count_tokens_with_tiktoken) for counting tokens.

<br/>Example: The quick brown fox jumped over the lazy dog
      },
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.

<br/>Example: text-embedding-ada-002
      },
      {
        Id: encoding_format,
        Name: EncodingFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: float,
        Summary:
The format to return the embeddings in. Can be either `float` or [`base64`](https://pypi.org/project/pybase64/).
<br/>Default Value: float
<br/>Example: float
      },
      {
        Id: user,
        Name: User,
        Type: string?,
        IsRequired: false,
        Summary:
A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).

<br/>Example: user-1234
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateEmbeddingRequest,
    ClassName: CreateEmbeddingRequest,
    ExternalClassName: CreateEmbeddingRequest,
    FileNameWithoutExtension: G.Models.CreateEmbeddingRequest
  },
  {
    Id: encoding_format,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: float,
        Name: Float,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: base64,
        Name: Base64,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The format to return the embeddings in. Can be either `float` or [`base64`](https://pypi.org/project/pybase64/).
<br/>Default Value: float
<br/>Example: float,
    AdditionalModels: null,
    Enumerations: null,
    Name: EncodingFormat,
    ClassName: EncodingFormat,
    ExternalClassName: EncodingFormat,
    FileNameWithoutExtension: G.Models.EncodingFormat
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: text-embedding-ada-002,
        Name: TextEmbeddingAda002,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: CreateEmbeddingResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<Embedding>,
        IsRequired: true,
        Summary: The list of embeddings generated by the model.
      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary: The name of the model used to generate the embedding.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always "list".
      },
      {
        Id: usage,
        Name: Usage,
        Type: CreateEmbeddingResponseUsage,
        IsRequired: true,
        Summary: The usage information for the request.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateEmbeddingResponse,
    ClassName: CreateEmbeddingResponse,
    ExternalClassName: CreateEmbeddingResponse,
    FileNameWithoutExtension: G.Models.CreateEmbeddingResponse
  },
  {
    Id: usage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: prompt_tokens,
        Name: PromptTokens,
        Type: int,
        IsRequired: true,
        Summary: The number of tokens used by the prompt.
      },
      {
        Id: total_tokens,
        Name: TotalTokens,
        Type: int,
        IsRequired: true,
        Summary: The total number of tokens used by the request.
      }
    ],
    Summary: The usage information for the request.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Usage,
    ClassName: Usage,
    ExternalClassName: Usage,
    FileNameWithoutExtension: G.Models.Usage
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: list,
        Name: List,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always "list".,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateTranscriptionRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: file,
        Name: File,
        Type: byte[],
        IsRequired: true,
        Summary:
The audio file object (not file name) to transcribe, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

      },
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. Only `whisper-1` is currently available.

<br/>Example: whisper-1
      },
      {
        Id: language,
        Name: Language,
        Type: string?,
        IsRequired: false,
        Summary:
The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.

      },
      {
        Id: prompt,
        Name: Prompt,
        Type: string?,
        IsRequired: false,
        Summary:
An optional text to guide the model's style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.

      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: json,
        Summary:
The format of the transcript output, in one of these options: `json`, `text`, `srt`, `verbose_json`, or `vtt`.

<br/>Default Value: json
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.

<br/>Default Value: 0
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateTranscriptionRequest,
    ClassName: CreateTranscriptionRequest,
    ExternalClassName: CreateTranscriptionRequest,
    FileNameWithoutExtension: G.Models.CreateTranscriptionRequest
  },
  {
    Id: response_format,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: json,
        Name: Json,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: text,
        Name: Text,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: srt,
        Name: Srt,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: verbose_json,
        Name: VerboseJson,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: vtt,
        Name: Vtt,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The format of the transcript output, in one of these options: `json`, `text`, `srt`, `verbose_json`, or `vtt`.

<br/>Default Value: json,
    AdditionalModels: null,
    Enumerations: null,
    Name: ResponseFormat,
    ClassName: ResponseFormat,
    ExternalClassName: ResponseFormat,
    FileNameWithoutExtension: G.Models.ResponseFormat
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: whisper-1,
        Name: Whisper1,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: CreateTranscriptionResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: text,
        Name: Text,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateTranscriptionResponse,
    ClassName: CreateTranscriptionResponse,
    ExternalClassName: CreateTranscriptionResponse,
    FileNameWithoutExtension: G.Models.CreateTranscriptionResponse
  },
  {
    Id: CreateTranslationRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: file,
        Name: File,
        Type: byte[],
        IsRequired: true,
        Summary:
The audio file object (not file name) translate, in one of these formats: flac, mp3, mp4, mpeg, mpga, m4a, ogg, wav, or webm.

      },
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. Only `whisper-1` is currently available.

<br/>Example: whisper-1
      },
      {
        Id: prompt,
        Name: Prompt,
        Type: string?,
        IsRequired: false,
        Summary:
An optional text to guide the model's style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.

      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: json,
        Summary:
The format of the transcript output, in one of these options: `json`, `text`, `srt`, `verbose_json`, or `vtt`.

<br/>Default Value: json
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: double,
        IsRequired: false,
        DefaultValue: 0,
        Summary:
The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.

<br/>Default Value: 0
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateTranslationRequest,
    ClassName: CreateTranslationRequest,
    ExternalClassName: CreateTranslationRequest,
    FileNameWithoutExtension: G.Models.CreateTranslationRequest
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: whisper-1,
        Name: Whisper1,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: CreateTranslationResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: text,
        Name: Text,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateTranslationResponse,
    ClassName: CreateTranslationResponse,
    ExternalClassName: CreateTranslationResponse,
    FileNameWithoutExtension: G.Models.CreateTranslationResponse
  },
  {
    Id: CreateSpeechRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
One of the available [TTS models](/docs/models/tts): `tts-1` or `tts-1-hd`

      },
      {
        Id: input,
        Name: Input,
        Type: string,
        IsRequired: true,
        Summary: The text to generate audio for. The maximum length is 4096 characters.
      },
      {
        Id: voice,
        Name: Voice,
        Type: string,
        IsRequired: true,
        Summary: The voice to use when generating the audio. Supported voices are `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`. Previews of the voices are available in the [Text to speech guide](/docs/guides/text-to-speech/voice-options).
      },
      {
        Id: response_format,
        Name: ResponseFormat,
        Type: string?,
        IsRequired: false,
        DefaultValue: mp3,
        Summary:
The format to audio in. Supported formats are `mp3`, `opus`, `aac`, and `flac`.
<br/>Default Value: mp3
      },
      {
        Id: speed,
        Name: Speed,
        Type: double,
        IsRequired: false,
        DefaultValue: 1,
        Summary:
The speed of the generated audio. Select a value from `0.25` to `4.0`. `1.0` is the default.
<br/>Default Value: 1
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateSpeechRequest,
    ClassName: CreateSpeechRequest,
    ExternalClassName: CreateSpeechRequest,
    FileNameWithoutExtension: G.Models.CreateSpeechRequest
  },
  {
    Id: voice,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: alloy,
        Name: Alloy,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: echo,
        Name: Echo,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: fable,
        Name: Fable,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: onyx,
        Name: Onyx,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: nova,
        Name: Nova,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: shimmer,
        Name: Shimmer,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The voice to use when generating the audio. Supported voices are `alloy`, `echo`, `fable`, `onyx`, `nova`, and `shimmer`. Previews of the voices are available in the [Text to speech guide](/docs/guides/text-to-speech/voice-options).,
    AdditionalModels: null,
    Enumerations: null,
    Name: Voice,
    ClassName: Voice,
    ExternalClassName: Voice,
    FileNameWithoutExtension: G.Models.Voice
  },
  {
    Id: response_format,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: mp3,
        Name: Mp3,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: opus,
        Name: Opus,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: aac,
        Name: Aac,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: flac,
        Name: Flac,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary:
The format to audio in. Supported formats are `mp3`, `opus`, `aac`, and `flac`.
<br/>Default Value: mp3,
    AdditionalModels: null,
    Enumerations: null,
    Name: ResponseFormat,
    ClassName: ResponseFormat,
    ExternalClassName: ResponseFormat,
    FileNameWithoutExtension: G.Models.ResponseFormat
  },
  {
    Id: model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: tts-1,
        Name: Tts1,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: tts-1-hd,
        Name: Tts1Hd,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: Model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The model identifier, which can be referenced in the API endpoints.
      },
      {
        Id: created,
        Name: Created,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) when the model was created.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always "model".
      },
      {
        Id: owned_by,
        Name: OwnedBy,
        Type: string,
        IsRequired: true,
        Summary: The organization that owns the model.
      }
    ],
    Summary: Describes an OpenAI model offering that can be used with the API.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always "model".,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: OpenAIFile,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The file identifier, which can be referenced in the API endpoints.
      },
      {
        Id: bytes,
        Name: Bytes,
        Type: int,
        IsRequired: true,
        Summary: The size of the file, in bytes.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the file was created.
      },
      {
        Id: filename,
        Name: Filename,
        Type: string,
        IsRequired: true,
        Summary: The name of the file.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `file`.
      },
      {
        Id: purpose,
        Name: Purpose,
        Type: string,
        IsRequired: true,
        Summary: The intended purpose of the file. Supported values are `fine-tune`, `fine-tune-results`, `assistants`, and `assistants_output`.
      },
      {
        Id: status,
        Name: Status,
        Type: string,
        IsRequired: true,
        Summary: Deprecated. The current status of the file, which can be either `uploaded`, `processed`, or `error`.
      },
      {
        Id: status_details,
        Name: StatusDetails,
        Type: string?,
        IsRequired: false,
        Summary: Deprecated. For details on why a fine-tuning training file failed validation, see the `error` field on `fine_tuning.job`.
      }
    ],
    Summary: The `File` object represents a document that has been uploaded to OpenAI.,
    AdditionalModels: null,
    Enumerations: null,
    Name: OpenAIFile,
    ClassName: OpenAIFile,
    ExternalClassName: OpenAIFile,
    FileNameWithoutExtension: G.Models.OpenAIFile
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: file,
        Name: File,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `file`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: purpose,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: fine-tune,
        Name: FineTune,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: fine-tune-results,
        Name: FineTuneResults,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: assistants,
        Name: Assistants,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: assistants_output,
        Name: AssistantsOutput,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The intended purpose of the file. Supported values are `fine-tune`, `fine-tune-results`, `assistants`, and `assistants_output`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Purpose,
    ClassName: Purpose,
    ExternalClassName: Purpose,
    FileNameWithoutExtension: G.Models.Purpose
  },
  {
    Id: status,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: uploaded,
        Name: Uploaded,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: processed,
        Name: Processed,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: error,
        Name: Error,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: Deprecated. The current status of the file, which can be either `uploaded`, `processed`, or `error`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Status,
    ClassName: Status,
    ExternalClassName: Status,
    FileNameWithoutExtension: G.Models.Status
  },
  {
    Id: Embedding,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: index,
        Name: Index,
        Type: int,
        IsRequired: true,
        Summary: The index of the embedding in the list of embeddings.
      },
      {
        Id: embedding,
        Name: Embedding1,
        Type: global::System.Collections.Generic.IList<double>,
        IsRequired: true,
        Summary:
The embedding vector, which is a list of floats. The length of vector depends on the model as listed in the [embedding guide](/docs/guides/embeddings).

      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always "embedding".
      }
    ],
    Summary:
Represents an embedding vector returned by embedding endpoint.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Embedding,
    ClassName: Embedding,
    ExternalClassName: Embedding,
    FileNameWithoutExtension: G.Models.Embedding
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: embedding,
        Name: Embedding,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always "embedding".,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: FineTuningJob,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The object identifier, which can be referenced in the API endpoints.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the fine-tuning job was created.
      },
      {
        Id: error,
        Name: Error,
        Type: FineTuningJobError?,
        IsRequired: true,
        Summary: For fine-tuning jobs that have `failed`, this will contain more information on the cause of the failure.
      },
      {
        Id: fine_tuned_model,
        Name: FineTunedModel,
        Type: string?,
        IsRequired: true,
        Summary: The name of the fine-tuned model that is being created. The value will be null if the fine-tuning job is still running.
      },
      {
        Id: finished_at,
        Name: FinishedAt,
        Type: int?,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the fine-tuning job was finished. The value will be null if the fine-tuning job is still running.
      },
      {
        Id: hyperparameters,
        Name: Hyperparameters,
        Type: FineTuningJobHyperparameters,
        IsRequired: true,
        Summary: The hyperparameters used for the fine-tuning job. See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.
      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary: The base model that is being fine-tuned.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always "fine_tuning.job".
      },
      {
        Id: organization_id,
        Name: OrganizationId,
        Type: string,
        IsRequired: true,
        Summary: The organization that owns the fine-tuning job.
      },
      {
        Id: result_files,
        Name: ResultFiles,
        Type: global::System.Collections.Generic.IList<string>,
        IsRequired: true,
        Summary: The compiled results file ID(s) for the fine-tuning job. You can retrieve the results with the [Files API](/docs/api-reference/files/retrieve-contents).
      },
      {
        Id: status,
        Name: Status,
        Type: string,
        IsRequired: true,
        Summary: The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.
      },
      {
        Id: trained_tokens,
        Name: TrainedTokens,
        Type: int?,
        IsRequired: true,
        Summary: The total number of billable tokens processed by this fine-tuning job. The value will be null if the fine-tuning job is still running.
      },
      {
        Id: training_file,
        Name: TrainingFile,
        Type: string,
        IsRequired: true,
        Summary: The file ID used for training. You can retrieve the training data with the [Files API](/docs/api-reference/files/retrieve-contents).
      },
      {
        Id: validation_file,
        Name: ValidationFile,
        Type: string?,
        IsRequired: true,
        Summary: The file ID used for validation. You can retrieve the validation results with the [Files API](/docs/api-reference/files/retrieve-contents).
      }
    ],
    Summary:
The `fine_tuning.job` object represents a fine-tuning job that has been created through the API.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: FineTuningJob,
    ClassName: FineTuningJob,
    ExternalClassName: FineTuningJob,
    FileNameWithoutExtension: G.Models.FineTuningJob
  },
  {
    Id: error,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: code,
        Name: Code,
        Type: string,
        IsRequired: true,
        Summary: A machine-readable error code.
      },
      {
        Id: message,
        Name: Message,
        Type: string,
        IsRequired: true,
        Summary: A human-readable error message.
      },
      {
        Id: param,
        Name: Param,
        Type: string?,
        IsRequired: true,
        Summary: The parameter that was invalid, usually `training_file` or `validation_file`. This field will be null if the failure was not parameter-specific.
      }
    ],
    Summary: For fine-tuning jobs that have `failed`, this will contain more information on the cause of the failure.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Error,
    ClassName: Error,
    ExternalClassName: Error,
    FileNameWithoutExtension: G.Models.Error
  },
  {
    Id: hyperparameters,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: n_epochs,
        Name: NEpochs,
        Type: object,
        IsRequired: true,
        DefaultValue: auto,
        Summary:
The number of epochs to train the model for. An epoch refers to one full cycle through the training dataset.
"auto" decides the optimal number of epochs based on the size of the dataset. If setting the number manually, we support any number between 1 and 50 epochs.
<br/>Default Value: auto
      }
    ],
    Summary: The hyperparameters used for the fine-tuning job. See the [fine-tuning guide](/docs/guides/fine-tuning) for more details.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Hyperparameters,
    ClassName: Hyperparameters,
    ExternalClassName: Hyperparameters,
    FileNameWithoutExtension: G.Models.Hyperparameters
  },
  {
    Id: n_epochs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: auto,
        Name: Auto,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: NEpochs,
    ClassName: NEpochs,
    ExternalClassName: NEpochs,
    FileNameWithoutExtension: G.Models.NEpochs
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: fine_tuning.job,
        Name: FineTuningjob,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always "fine_tuning.job".,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: status,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: validating_files,
        Name: ValidatingFiles,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: queued,
        Name: Queued,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: running,
        Name: Running,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: succeeded,
        Name: Succeeded,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: failed,
        Name: Failed,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: cancelled,
        Name: Cancelled,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The current status of the fine-tuning job, which can be either `validating_files`, `queued`, `running`, `succeeded`, `failed`, or `cancelled`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Status,
    ClassName: Status,
    ExternalClassName: Status,
    FileNameWithoutExtension: G.Models.Status
  },
  {
    Id: FineTuningJobEvent,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: 
      },
      {
        Id: level,
        Name: Level,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: message,
        Name: Message,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: Fine-tuning job event object,
    AdditionalModels: null,
    Enumerations: null,
    Name: FineTuningJobEvent,
    ClassName: FineTuningJobEvent,
    ExternalClassName: FineTuningJobEvent,
    FileNameWithoutExtension: G.Models.FineTuningJobEvent
  },
  {
    Id: level,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: info,
        Name: Info,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: warn,
        Name: Warn,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: error,
        Name: Error,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Level,
    ClassName: Level,
    ExternalClassName: Level,
    FileNameWithoutExtension: G.Models.Level
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: fine_tuning.job.event,
        Name: FineTuningjobevent,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: FineTune,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The object identifier, which can be referenced in the API endpoints.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the fine-tuning job was created.
      },
      {
        Id: events,
        Name: Events,
        Type: global::System.Collections.Generic.IList<FineTuneEvent?>?,
        IsRequired: false,
        Summary: The list of events that have been observed in the lifecycle of the FineTune job.
      },
      {
        Id: fine_tuned_model,
        Name: FineTunedModel,
        Type: string?,
        IsRequired: true,
        Summary: The name of the fine-tuned model that is being created.
      },
      {
        Id: hyperparams,
        Name: Hyperparams,
        Type: FineTuneHyperparams,
        IsRequired: true,
        Summary: The hyperparameters used for the fine-tuning job. See the [fine-tuning guide](/docs/guides/legacy-fine-tuning/hyperparameters) for more details.
      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary: The base model that is being fine-tuned.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always "fine-tune".
      },
      {
        Id: organization_id,
        Name: OrganizationId,
        Type: string,
        IsRequired: true,
        Summary: The organization that owns the fine-tuning job.
      },
      {
        Id: result_files,
        Name: ResultFiles,
        Type: global::System.Collections.Generic.IList<OpenAIFile>,
        IsRequired: true,
        Summary: The compiled results files for the fine-tuning job.
      },
      {
        Id: status,
        Name: Status,
        Type: string,
        IsRequired: true,
        Summary: The current status of the fine-tuning job, which can be either `created`, `running`, `succeeded`, `failed`, or `cancelled`.
      },
      {
        Id: training_files,
        Name: TrainingFiles,
        Type: global::System.Collections.Generic.IList<OpenAIFile>,
        IsRequired: true,
        Summary: The list of files used for training.
      },
      {
        Id: updated_at,
        Name: UpdatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the fine-tuning job was last updated.
      },
      {
        Id: validation_files,
        Name: ValidationFiles,
        Type: global::System.Collections.Generic.IList<OpenAIFile>,
        IsRequired: true,
        Summary: The list of files used for validation.
      }
    ],
    Summary:
The `FineTune` object represents a legacy fine-tune job that has been created through the API.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: FineTune,
    ClassName: FineTune,
    ExternalClassName: FineTune,
    FileNameWithoutExtension: G.Models.FineTune
  },
  {
    Id: hyperparams,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: batch_size,
        Name: BatchSize,
        Type: int,
        IsRequired: true,
        Summary:
The batch size to use for training. The batch size is the number of
training examples used to train a single forward and backward pass.

      },
      {
        Id: classification_n_classes,
        Name: ClassificationNClasses,
        Type: int,
        IsRequired: false,
        Summary:
The number of classes to use for computing classification metrics.

      },
      {
        Id: classification_positive_class,
        Name: ClassificationPositiveClass,
        Type: string?,
        IsRequired: false,
        Summary:
The positive class to use for computing classification metrics.

      },
      {
        Id: compute_classification_metrics,
        Name: ComputeClassificationMetrics,
        Type: bool,
        IsRequired: false,
        Summary:
The classification metrics to compute using the validation dataset at the end of every epoch.

      },
      {
        Id: learning_rate_multiplier,
        Name: LearningRateMultiplier,
        Type: double,
        IsRequired: true,
        Summary:
The learning rate multiplier to use for training.

      },
      {
        Id: n_epochs,
        Name: NEpochs,
        Type: int,
        IsRequired: true,
        Summary:
The number of epochs to train the model for. An epoch refers to one
full cycle through the training dataset.

      },
      {
        Id: prompt_loss_weight,
        Name: PromptLossWeight,
        Type: double,
        IsRequired: true,
        Summary:
The weight to use for loss on the prompt tokens.

      }
    ],
    Summary: The hyperparameters used for the fine-tuning job. See the [fine-tuning guide](/docs/guides/legacy-fine-tuning/hyperparameters) for more details.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Hyperparams,
    ClassName: Hyperparams,
    ExternalClassName: Hyperparams,
    FileNameWithoutExtension: G.Models.Hyperparams
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: fine-tune,
        Name: FineTune,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always "fine-tune".,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: FineTuneEvent,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: 
      },
      {
        Id: level,
        Name: Level,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: message,
        Name: Message,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: Fine-tune event object,
    AdditionalModels: null,
    Enumerations: null,
    Name: FineTuneEvent,
    ClassName: FineTuneEvent,
    ExternalClassName: FineTuneEvent,
    FileNameWithoutExtension: G.Models.FineTuneEvent
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: fine-tune-event,
        Name: FineTuneEvent,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CompletionUsage,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: completion_tokens,
        Name: CompletionTokens,
        Type: int,
        IsRequired: true,
        Summary: Number of tokens in the generated completion.
      },
      {
        Id: prompt_tokens,
        Name: PromptTokens,
        Type: int,
        IsRequired: true,
        Summary: Number of tokens in the prompt.
      },
      {
        Id: total_tokens,
        Name: TotalTokens,
        Type: int,
        IsRequired: true,
        Summary: Total number of tokens used in the request (prompt + completion).
      }
    ],
    Summary: Usage statistics for the completion request.,
    AdditionalModels: null,
    Enumerations: null,
    Name: CompletionUsage,
    ClassName: CompletionUsage,
    ExternalClassName: CompletionUsage,
    FileNameWithoutExtension: G.Models.CompletionUsage
  },
  {
    Id: AssistantObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The identifier, which can be referenced in API endpoints.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `assistant`.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the assistant was created.
      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: true,
        Summary:
The name of the assistant. The maximum length is 256 characters.

      },
      {
        Id: description,
        Name: Description,
        Type: string?,
        IsRequired: true,
        Summary:
The description of the assistant. The maximum length is 512 characters.

      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary:
ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.

      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string?,
        IsRequired: true,
        Summary:
The system instructions that the assistant uses. The maximum length is 32768 characters.

      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object>,
        IsRequired: true,
        DefaultValue: [],
        Summary:
A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`.

<br/>Default Value: []
      },
      {
        Id: file_ids,
        Name: FileIds,
        Type: global::System.Collections.Generic.IList<string>,
        IsRequired: true,
        DefaultValue: [],
        Summary:
A list of [file](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order.

<br/>Default Value: []
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: AssistantObjectMetadata?,
        IsRequired: true,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: Represents an `assistant` that can call the model and use tools.,
    AdditionalModels: null,
    Enumerations: null,
    Name: AssistantObject,
    ClassName: AssistantObject,
    ExternalClassName: AssistantObject,
    FileNameWithoutExtension: G.Models.AssistantObject
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: assistant,
        Name: Assistant,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `assistant`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateAssistantRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object,
        IsRequired: true,
        Summary:
ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.

      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary:
The name of the assistant. The maximum length is 256 characters.

      },
      {
        Id: description,
        Name: Description,
        Type: string?,
        IsRequired: false,
        Summary:
The description of the assistant. The maximum length is 512 characters.

      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string?,
        IsRequired: false,
        Summary:
The system instructions that the assistant uses. The maximum length is 32768 characters.

      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object?>?,
        IsRequired: false,
        DefaultValue: [],
        Summary:
A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`.

<br/>Default Value: []
      },
      {
        Id: file_ids,
        Name: FileIds,
        Type: global::System.Collections.Generic.IList<string?>?,
        IsRequired: false,
        DefaultValue: [],
        Summary:
A list of [file](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order.

<br/>Default Value: []
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateAssistantRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateAssistantRequest,
    ClassName: CreateAssistantRequest,
    ExternalClassName: CreateAssistantRequest,
    FileNameWithoutExtension: G.Models.CreateAssistantRequest
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: ModifyAssistantRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: object?,
        IsRequired: false,
        Summary:
ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.

      },
      {
        Id: name,
        Name: Name,
        Type: string?,
        IsRequired: false,
        Summary:
The name of the assistant. The maximum length is 256 characters.

      },
      {
        Id: description,
        Name: Description,
        Type: string?,
        IsRequired: false,
        Summary:
The description of the assistant. The maximum length is 512 characters.

      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string?,
        IsRequired: false,
        Summary:
The system instructions that the assistant uses. The maximum length is 32768 characters.

      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object?>?,
        IsRequired: false,
        DefaultValue: [],
        Summary:
A list of tool enabled on the assistant. There can be a maximum of 128 tools per assistant. Tools can be of types `code_interpreter`, `retrieval`, or `function`.

<br/>Default Value: []
      },
      {
        Id: file_ids,
        Name: FileIds,
        Type: global::System.Collections.Generic.IList<string?>?,
        IsRequired: false,
        DefaultValue: [],
        Summary:
A list of [File](/docs/api-reference/files) IDs attached to this assistant. There can be a maximum of 20 files attached to the assistant. Files are ordered by their creation date in ascending order. If a file was previously attached to the list but does not show up in the list, it will be deleted from the assistant.

<br/>Default Value: []
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: ModifyAssistantRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ModifyAssistantRequest,
    ClassName: ModifyAssistantRequest,
    ExternalClassName: ModifyAssistantRequest,
    FileNameWithoutExtension: G.Models.ModifyAssistantRequest
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: DeleteAssistantResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: deleted,
        Name: Deleted,
        Type: bool,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: DeleteAssistantResponse,
    ClassName: DeleteAssistantResponse,
    ExternalClassName: DeleteAssistantResponse,
    FileNameWithoutExtension: G.Models.DeleteAssistantResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: assistant.deleted,
        Name: Assistantdeleted,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: ListAssistantsResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: list
      },
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<AssistantObject>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: first_id,
        Name: FirstId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: asst_abc123
      },
      {
        Id: last_id,
        Name: LastId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: asst_abc456
      },
      {
        Id: has_more,
        Name: HasMore,
        Type: bool,
        IsRequired: true,
        Summary:
<br/>Example: false
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListAssistantsResponse,
    ClassName: ListAssistantsResponse,
    ExternalClassName: ListAssistantsResponse,
    FileNameWithoutExtension: G.Models.ListAssistantsResponse
  },
  {
    Id: AssistantToolsCode,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of tool being defined: `code_interpreter`
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: AssistantToolsCode,
    ClassName: AssistantToolsCode,
    ExternalClassName: AssistantToolsCode,
    FileNameWithoutExtension: G.Models.AssistantToolsCode
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: code_interpreter,
        Name: CodeInterpreter,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of tool being defined: `code_interpreter`,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: AssistantToolsRetrieval,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of tool being defined: `retrieval`
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: AssistantToolsRetrieval,
    ClassName: AssistantToolsRetrieval,
    ExternalClassName: AssistantToolsRetrieval,
    FileNameWithoutExtension: G.Models.AssistantToolsRetrieval
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: retrieval,
        Name: Retrieval,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of tool being defined: `retrieval`,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: AssistantToolsFunction,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of tool being defined: `function`
      },
      {
        Id: function,
        Name: Function,
        Type: FunctionObject,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: AssistantToolsFunction,
    ClassName: AssistantToolsFunction,
    ExternalClassName: AssistantToolsFunction,
    FileNameWithoutExtension: G.Models.AssistantToolsFunction
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: function,
        Name: Function,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of tool being defined: `function`,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: RunObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The identifier, which can be referenced in API endpoints.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `thread.run`.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run was created.
      },
      {
        Id: thread_id,
        Name: ThreadId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [thread](/docs/api-reference/threads) that was executed on as a part of this run.
      },
      {
        Id: assistant_id,
        Name: AssistantId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [assistant](/docs/api-reference/assistants) used for execution of this run.
      },
      {
        Id: status,
        Name: Status,
        Type: string,
        IsRequired: true,
        Summary: The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or `expired`.
      },
      {
        Id: required_action,
        Name: RequiredAction,
        Type: RunObjectRequiredAction?,
        IsRequired: true,
        Summary: Details on the action required to continue the run. Will be `null` if no action is required.
      },
      {
        Id: last_error,
        Name: LastError,
        Type: RunObjectLastError?,
        IsRequired: true,
        Summary: The last error associated with this run. Will be `null` if there are no errors.
      },
      {
        Id: expires_at,
        Name: ExpiresAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run will expire.
      },
      {
        Id: started_at,
        Name: StartedAt,
        Type: int?,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run was started.
      },
      {
        Id: cancelled_at,
        Name: CancelledAt,
        Type: int?,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run was cancelled.
      },
      {
        Id: failed_at,
        Name: FailedAt,
        Type: int?,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run failed.
      },
      {
        Id: completed_at,
        Name: CompletedAt,
        Type: int?,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run was completed.
      },
      {
        Id: model,
        Name: Model,
        Type: string,
        IsRequired: true,
        Summary: The model that the [assistant](/docs/api-reference/assistants) used for this run.
      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string,
        IsRequired: true,
        Summary: The instructions that the [assistant](/docs/api-reference/assistants) used for this run.
      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object>,
        IsRequired: true,
        DefaultValue: [],
        Summary:
The list of tools that the [assistant](/docs/api-reference/assistants) used for this run.
<br/>Default Value: []
      },
      {
        Id: file_ids,
        Name: FileIds,
        Type: global::System.Collections.Generic.IList<string>,
        IsRequired: true,
        DefaultValue: [],
        Summary:
The list of [File](/docs/api-reference/files) IDs the [assistant](/docs/api-reference/assistants) used for this run.
<br/>Default Value: []
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: RunObjectMetadata?,
        IsRequired: true,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: Represents an execution run on a [thread](/docs/api-reference/threads).,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunObject,
    ClassName: RunObject,
    ExternalClassName: RunObject,
    FileNameWithoutExtension: G.Models.RunObject
  },
  {
    Id: required_action,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: For now, this is always `submit_tool_outputs`.
      },
      {
        Id: submit_tool_outputs,
        Name: SubmitToolOutputs,
        Type: RunObjectRequiredActionSubmitToolOutputs,
        IsRequired: true,
        Summary: Details on the tool outputs needed for this run to continue.
      }
    ],
    Summary: Details on the action required to continue the run. Will be `null` if no action is required.,
    AdditionalModels: null,
    Enumerations: null,
    Name: RequiredAction,
    ClassName: RequiredAction,
    ExternalClassName: RequiredAction,
    FileNameWithoutExtension: G.Models.RequiredAction
  },
  {
    Id: submit_tool_outputs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: tool_calls,
        Name: ToolCalls,
        Type: global::System.Collections.Generic.IList<RunToolCallObject>,
        IsRequired: true,
        Summary: A list of the relevant tool calls.
      }
    ],
    Summary: Details on the tool outputs needed for this run to continue.,
    AdditionalModels: null,
    Enumerations: null,
    Name: SubmitToolOutputs,
    ClassName: SubmitToolOutputs,
    ExternalClassName: SubmitToolOutputs,
    FileNameWithoutExtension: G.Models.SubmitToolOutputs
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: submit_tool_outputs,
        Name: SubmitToolOutputs,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: For now, this is always `submit_tool_outputs`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: last_error,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: code,
        Name: Code,
        Type: string,
        IsRequired: true,
        Summary: One of `server_error` or `rate_limit_exceeded`.
      },
      {
        Id: message,
        Name: Message,
        Type: string,
        IsRequired: true,
        Summary: A human-readable description of the error.
      }
    ],
    Summary: The last error associated with this run. Will be `null` if there are no errors.,
    AdditionalModels: null,
    Enumerations: null,
    Name: LastError,
    ClassName: LastError,
    ExternalClassName: LastError,
    FileNameWithoutExtension: G.Models.LastError
  },
  {
    Id: code,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: server_error,
        Name: ServerError,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: rate_limit_exceeded,
        Name: RateLimitExceeded,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: One of `server_error` or `rate_limit_exceeded`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Code,
    ClassName: Code,
    ExternalClassName: Code,
    FileNameWithoutExtension: G.Models.Code
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: thread.run,
        Name: Threadrun,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `thread.run`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: status,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: queued,
        Name: Queued,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: in_progress,
        Name: InProgress,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: requires_action,
        Name: RequiresAction,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: cancelling,
        Name: Cancelling,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: cancelled,
        Name: Cancelled,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: failed,
        Name: Failed,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: completed,
        Name: Completed,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: expired,
        Name: Expired,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The status of the run, which can be either `queued`, `in_progress`, `requires_action`, `cancelling`, `cancelled`, `failed`, `completed`, or `expired`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Status,
    ClassName: Status,
    ExternalClassName: Status,
    FileNameWithoutExtension: G.Models.Status
  },
  {
    Id: CreateRunRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: assistant_id,
        Name: AssistantId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
      },
      {
        Id: model,
        Name: Model,
        Type: string?,
        IsRequired: false,
        Summary: The ID of the [Model](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it will override the model associated with the assistant. If not, the model associated with the assistant will be used.
      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string?,
        IsRequired: false,
        Summary: Overrides the [instructions](/docs/api-reference/assistants/createAssistant) of the assistant. This is useful for modifying the behavior on a per-run basis.
      },
      {
        Id: additional_instructions,
        Name: AdditionalInstructions,
        Type: string?,
        IsRequired: false,
        Summary: Appends additional instructions at the end of the instructions for the run. This is useful for modifying the behavior on a per-run basis without overriding other instructions.
      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object?>?,
        IsRequired: false,
        Summary: Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateRunRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateRunRequest,
    ClassName: CreateRunRequest,
    ExternalClassName: CreateRunRequest,
    FileNameWithoutExtension: G.Models.CreateRunRequest
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: ListRunsResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: list
      },
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<RunObject>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: first_id,
        Name: FirstId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: run_abc123
      },
      {
        Id: last_id,
        Name: LastId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: run_abc456
      },
      {
        Id: has_more,
        Name: HasMore,
        Type: bool,
        IsRequired: true,
        Summary:
<br/>Example: false
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListRunsResponse,
    ClassName: ListRunsResponse,
    ExternalClassName: ListRunsResponse,
    FileNameWithoutExtension: G.Models.ListRunsResponse
  },
  {
    Id: ModifyRunRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: metadata,
        Name: Metadata,
        Type: ModifyRunRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ModifyRunRequest,
    ClassName: ModifyRunRequest,
    ExternalClassName: ModifyRunRequest,
    FileNameWithoutExtension: G.Models.ModifyRunRequest
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: SubmitToolOutputsRunRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: tool_outputs,
        Name: ToolOutputs,
        Type: global::System.Collections.Generic.IList<SubmitToolOutputsRunRequestToolOutputs>,
        IsRequired: true,
        Summary: A list of tools for which the outputs are being submitted.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: SubmitToolOutputsRunRequest,
    ClassName: SubmitToolOutputsRunRequest,
    ExternalClassName: SubmitToolOutputsRunRequest,
    FileNameWithoutExtension: G.Models.SubmitToolOutputsRunRequest
  },
  {
    Id: tool_outputs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: tool_call_id,
        Name: ToolCallId,
        Type: string?,
        IsRequired: false,
        Summary: The ID of the tool call in the `required_action` object within the run object the output is being submitted for.
      },
      {
        Id: output,
        Name: Output,
        Type: string?,
        IsRequired: false,
        Summary: The output of the tool call to be submitted to continue the run.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ToolOutputs,
    ClassName: ToolOutputs,
    ExternalClassName: ToolOutputs,
    FileNameWithoutExtension: G.Models.ToolOutputs
  },
  {
    Id: RunToolCallObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The ID of the tool call. This ID must be referenced when you submit the tool outputs in using the [Submit tool outputs to run](/docs/api-reference/runs/submitToolOutputs) endpoint.
      },
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of tool call the output is required for. For now, this is always `function`.
      },
      {
        Id: function,
        Name: Function,
        Type: RunToolCallObjectFunction,
        IsRequired: true,
        Summary: The function definition.
      }
    ],
    Summary: Tool call objects,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunToolCallObject,
    ClassName: RunToolCallObject,
    ExternalClassName: RunToolCallObject,
    FileNameWithoutExtension: G.Models.RunToolCallObject
  },
  {
    Id: function,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function.
      },
      {
        Id: arguments,
        Name: Arguments,
        Type: string,
        IsRequired: true,
        Summary: The arguments that the model expects you to pass to the function.
      }
    ],
    Summary: The function definition.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Function,
    ClassName: Function,
    ExternalClassName: Function,
    FileNameWithoutExtension: G.Models.Function
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: function,
        Name: Function,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of tool call the output is required for. For now, this is always `function`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: CreateThreadAndRunRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: assistant_id,
        Name: AssistantId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [assistant](/docs/api-reference/assistants) to use to execute this run.
      },
      {
        Id: thread,
        Name: Thread,
        Type: CreateThreadRequest?,
        IsRequired: false,
        Summary: 
      },
      {
        Id: model,
        Name: Model,
        Type: string?,
        IsRequired: false,
        Summary: The ID of the [Model](/docs/api-reference/models) to be used to execute this run. If a value is provided here, it will override the model associated with the assistant. If not, the model associated with the assistant will be used.
      },
      {
        Id: instructions,
        Name: Instructions,
        Type: string?,
        IsRequired: false,
        Summary: Override the default system message of the assistant. This is useful for modifying the behavior on a per-run basis.
      },
      {
        Id: tools,
        Name: Tools,
        Type: global::System.Collections.Generic.IList<object?>?,
        IsRequired: false,
        Summary: Override the tools the assistant can use for this run. This is useful for modifying the behavior on a per-run basis.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateThreadAndRunRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateThreadAndRunRequest,
    ClassName: CreateThreadAndRunRequest,
    ExternalClassName: CreateThreadAndRunRequest,
    FileNameWithoutExtension: G.Models.CreateThreadAndRunRequest
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: ThreadObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The identifier, which can be referenced in API endpoints.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `thread`.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the thread was created.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: ThreadObjectMetadata?,
        IsRequired: true,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: Represents a thread that contains [messages](/docs/api-reference/messages).,
    AdditionalModels: null,
    Enumerations: null,
    Name: ThreadObject,
    ClassName: ThreadObject,
    ExternalClassName: ThreadObject,
    FileNameWithoutExtension: G.Models.ThreadObject
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: thread,
        Name: Thread,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `thread`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateThreadRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: messages,
        Name: Messages,
        Type: global::System.Collections.Generic.IList<CreateMessageRequest?>?,
        IsRequired: false,
        Summary: A list of [messages](/docs/api-reference/messages) to start the thread with.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateThreadRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateThreadRequest,
    ClassName: CreateThreadRequest,
    ExternalClassName: CreateThreadRequest,
    FileNameWithoutExtension: G.Models.CreateThreadRequest
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: ModifyThreadRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: metadata,
        Name: Metadata,
        Type: ModifyThreadRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ModifyThreadRequest,
    ClassName: ModifyThreadRequest,
    ExternalClassName: ModifyThreadRequest,
    FileNameWithoutExtension: G.Models.ModifyThreadRequest
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: DeleteThreadResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: deleted,
        Name: Deleted,
        Type: bool,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: DeleteThreadResponse,
    ClassName: DeleteThreadResponse,
    ExternalClassName: DeleteThreadResponse,
    FileNameWithoutExtension: G.Models.DeleteThreadResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: thread.deleted,
        Name: Threaddeleted,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: ListThreadsResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: list
      },
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<ThreadObject>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: first_id,
        Name: FirstId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: asst_abc123
      },
      {
        Id: last_id,
        Name: LastId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: asst_abc456
      },
      {
        Id: has_more,
        Name: HasMore,
        Type: bool,
        IsRequired: true,
        Summary:
<br/>Example: false
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListThreadsResponse,
    ClassName: ListThreadsResponse,
    ExternalClassName: ListThreadsResponse,
    FileNameWithoutExtension: G.Models.ListThreadsResponse
  },
  {
    Id: MessageObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The identifier, which can be referenced in API endpoints.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `thread.message`.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the message was created.
      },
      {
        Id: thread_id,
        Name: ThreadId,
        Type: string,
        IsRequired: true,
        Summary: The [thread](/docs/api-reference/threads) ID that this message belongs to.
      },
      {
        Id: role,
        Name: Role,
        Type: string,
        IsRequired: true,
        Summary: The entity that produced the message. One of `user` or `assistant`.
      },
      {
        Id: content,
        Name: Content,
        Type: global::System.Collections.Generic.IList<object>,
        IsRequired: true,
        Summary: The content of the message in array of text and/or images.
      },
      {
        Id: assistant_id,
        Name: AssistantId,
        Type: string?,
        IsRequired: true,
        Summary: If applicable, the ID of the [assistant](/docs/api-reference/assistants) that authored this message.
      },
      {
        Id: run_id,
        Name: RunId,
        Type: string?,
        IsRequired: true,
        Summary: If applicable, the ID of the [run](/docs/api-reference/runs) associated with the authoring of this message.
      },
      {
        Id: file_ids,
        Name: FileIds,
        Type: global::System.Collections.Generic.IList<string>,
        IsRequired: true,
        DefaultValue: [],
        Summary:
A list of [file](/docs/api-reference/files) IDs that the assistant should use. Useful for tools like retrieval and code_interpreter that can access files. A maximum of 10 files can be attached to a message.
<br/>Default Value: []
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: MessageObjectMetadata?,
        IsRequired: true,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: Represents a message within a [thread](/docs/api-reference/threads).,
    AdditionalModels: null,
    Enumerations: null,
    Name: MessageObject,
    ClassName: MessageObject,
    ExternalClassName: MessageObject,
    FileNameWithoutExtension: G.Models.MessageObject
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: thread.message,
        Name: Threadmessage,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `thread.message`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: user,
        Name: User,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: assistant,
        Name: Assistant,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The entity that produced the message. One of `user` or `assistant`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: CreateMessageRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: role,
        Name: Role,
        Type: string,
        IsRequired: true,
        Summary: The role of the entity that is creating the message. Currently only `user` is supported.
      },
      {
        Id: content,
        Name: Content,
        Type: string,
        IsRequired: true,
        Summary: The content of the message.
      },
      {
        Id: file_ids,
        Name: FileIds,
        Type: global::System.Collections.Generic.IList<string?>?,
        IsRequired: false,
        DefaultValue: [],
        Summary:
A list of [File](/docs/api-reference/files) IDs that the message should use. There can be a maximum of 10 files attached to a message. Useful for tools like `retrieval` and `code_interpreter` that can access and use files.
<br/>Default Value: []
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: CreateMessageRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateMessageRequest,
    ClassName: CreateMessageRequest,
    ExternalClassName: CreateMessageRequest,
    FileNameWithoutExtension: G.Models.CreateMessageRequest
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: user,
        Name: User,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The role of the entity that is creating the message. Currently only `user` is supported.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: ModifyMessageRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: metadata,
        Name: Metadata,
        Type: ModifyMessageRequestMetadata?,
        IsRequired: false,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ModifyMessageRequest,
    ClassName: ModifyMessageRequest,
    ExternalClassName: ModifyMessageRequest,
    FileNameWithoutExtension: G.Models.ModifyMessageRequest
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: DeleteMessageResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: deleted,
        Name: Deleted,
        Type: bool,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: DeleteMessageResponse,
    ClassName: DeleteMessageResponse,
    ExternalClassName: DeleteMessageResponse,
    FileNameWithoutExtension: G.Models.DeleteMessageResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: thread.message.deleted,
        Name: Threadmessagedeleted,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: ListMessagesResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: list
      },
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<MessageObject>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: first_id,
        Name: FirstId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: msg_abc123
      },
      {
        Id: last_id,
        Name: LastId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: msg_abc123
      },
      {
        Id: has_more,
        Name: HasMore,
        Type: bool,
        IsRequired: true,
        Summary:
<br/>Example: false
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListMessagesResponse,
    ClassName: ListMessagesResponse,
    ExternalClassName: ListMessagesResponse,
    FileNameWithoutExtension: G.Models.ListMessagesResponse
  },
  {
    Id: MessageContentImageFileObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: Always `image_file`.
      },
      {
        Id: image_file,
        Name: ImageFile,
        Type: MessageContentImageFileObjectImageFile,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: References an image [File](/docs/api-reference/files) in the content of a message.,
    AdditionalModels: null,
    Enumerations: null,
    Name: MessageContentImageFileObject,
    ClassName: MessageContentImageFileObject,
    ExternalClassName: MessageContentImageFileObject,
    FileNameWithoutExtension: G.Models.MessageContentImageFileObject
  },
  {
    Id: image_file,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: file_id,
        Name: FileId,
        Type: string,
        IsRequired: true,
        Summary: The [File](/docs/api-reference/files) ID of the image in the message content.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ImageFile,
    ClassName: ImageFile,
    ExternalClassName: ImageFile,
    FileNameWithoutExtension: G.Models.ImageFile
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: image_file,
        Name: ImageFile,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: Always `image_file`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: MessageContentTextObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: Always `text`.
      },
      {
        Id: text,
        Name: Text,
        Type: MessageContentTextObjectText,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: The text content that is part of a message.,
    AdditionalModels: null,
    Enumerations: null,
    Name: MessageContentTextObject,
    ClassName: MessageContentTextObject,
    ExternalClassName: MessageContentTextObject,
    FileNameWithoutExtension: G.Models.MessageContentTextObject
  },
  {
    Id: text,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: value,
        Name: Value,
        Type: string,
        IsRequired: true,
        Summary: The data that makes up the text.
      },
      {
        Id: annotations,
        Name: Annotations,
        Type: global::System.Collections.Generic.IList<object>,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Text,
    ClassName: Text,
    ExternalClassName: Text,
    FileNameWithoutExtension: G.Models.Text
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: text,
        Name: Text,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: Always `text`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: MessageContentTextAnnotationsFileCitationObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: Always `file_citation`.
      },
      {
        Id: text,
        Name: Text,
        Type: string,
        IsRequired: true,
        Summary: The text in the message content that needs to be replaced.
      },
      {
        Id: file_citation,
        Name: FileCitation,
        Type: MessageContentTextAnnotationsFileCitationObjectFileCitation,
        IsRequired: true,
        Summary: 
      },
      {
        Id: start_index,
        Name: StartIndex,
        Type: int,
        IsRequired: true,
        Summary: 
      },
      {
        Id: end_index,
        Name: EndIndex,
        Type: int,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: A citation within the message that points to a specific quote from a specific File associated with the assistant or the message. Generated when the assistant uses the "retrieval" tool to search files.,
    AdditionalModels: null,
    Enumerations: null,
    Name: MessageContentTextAnnotationsFileCitationObject,
    ClassName: MessageContentTextAnnotationsFileCitationObject,
    ExternalClassName: MessageContentTextAnnotationsFileCitationObject,
    FileNameWithoutExtension: G.Models.MessageContentTextAnnotationsFileCitationObject
  },
  {
    Id: file_citation,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: file_id,
        Name: FileId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the specific File the citation is from.
      },
      {
        Id: quote,
        Name: Quote,
        Type: string,
        IsRequired: true,
        Summary: The specific quote in the file.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: FileCitation,
    ClassName: FileCitation,
    ExternalClassName: FileCitation,
    FileNameWithoutExtension: G.Models.FileCitation
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: file_citation,
        Name: FileCitation,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: Always `file_citation`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: MessageContentTextAnnotationsFilePathObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: Always `file_path`.
      },
      {
        Id: text,
        Name: Text,
        Type: string,
        IsRequired: true,
        Summary: The text in the message content that needs to be replaced.
      },
      {
        Id: file_path,
        Name: FilePath,
        Type: MessageContentTextAnnotationsFilePathObjectFilePath,
        IsRequired: true,
        Summary: 
      },
      {
        Id: start_index,
        Name: StartIndex,
        Type: int,
        IsRequired: true,
        Summary: 
      },
      {
        Id: end_index,
        Name: EndIndex,
        Type: int,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: A URL for the file that's generated when the assistant used the `code_interpreter` tool to generate a file.,
    AdditionalModels: null,
    Enumerations: null,
    Name: MessageContentTextAnnotationsFilePathObject,
    ClassName: MessageContentTextAnnotationsFilePathObject,
    ExternalClassName: MessageContentTextAnnotationsFilePathObject,
    FileNameWithoutExtension: G.Models.MessageContentTextAnnotationsFilePathObject
  },
  {
    Id: file_path,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: file_id,
        Name: FileId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the file that was generated.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: FilePath,
    ClassName: FilePath,
    ExternalClassName: FilePath,
    FileNameWithoutExtension: G.Models.FilePath
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: file_path,
        Name: FilePath,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: Always `file_path`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: RunStepObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The identifier of the run step, which can be referenced in API endpoints.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `thread.run.step`.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run step was created.
      },
      {
        Id: assistant_id,
        Name: AssistantId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [assistant](/docs/api-reference/assistants) associated with the run step.
      },
      {
        Id: thread_id,
        Name: ThreadId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [thread](/docs/api-reference/threads) that was run.
      },
      {
        Id: run_id,
        Name: RunId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [run](/docs/api-reference/runs) that this run step is a part of.
      },
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of run step, which can be either `message_creation` or `tool_calls`.
      },
      {
        Id: status,
        Name: Status,
        Type: string,
        IsRequired: true,
        Summary: The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.
      },
      {
        Id: step_details,
        Name: StepDetails,
        Type: RunStepObjectStepDetails,
        IsRequired: true,
        Summary: The details of the run step.
      },
      {
        Id: last_error,
        Name: LastError,
        Type: RunStepObjectLastError?,
        IsRequired: true,
        Summary: The last error associated with this run step. Will be `null` if there are no errors.
      },
      {
        Id: expired_at,
        Name: ExpiredAt,
        Type: int?,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run step expired. A step is considered expired if the parent run is expired.
      },
      {
        Id: cancelled_at,
        Name: CancelledAt,
        Type: int?,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run step was cancelled.
      },
      {
        Id: failed_at,
        Name: FailedAt,
        Type: int?,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run step failed.
      },
      {
        Id: completed_at,
        Name: CompletedAt,
        Type: int?,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the run step completed.
      },
      {
        Id: metadata,
        Name: Metadata,
        Type: RunStepObjectMetadata?,
        IsRequired: true,
        Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.

      }
    ],
    Summary:
Represents a step in execution of a run.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunStepObject,
    ClassName: RunStepObject,
    ExternalClassName: RunStepObject,
    FileNameWithoutExtension: G.Models.RunStepObject
  },
  {
    Id: step_details,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: The details of the run step.,
    AdditionalModels: null,
    Enumerations: null,
    Name: StepDetails,
    ClassName: StepDetails,
    ExternalClassName: StepDetails,
    FileNameWithoutExtension: G.Models.StepDetails
  },
  {
    Id: last_error,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: code,
        Name: Code,
        Type: string,
        IsRequired: true,
        Summary: One of `server_error` or `rate_limit_exceeded`.
      },
      {
        Id: message,
        Name: Message,
        Type: string,
        IsRequired: true,
        Summary: A human-readable description of the error.
      }
    ],
    Summary: The last error associated with this run step. Will be `null` if there are no errors.,
    AdditionalModels: null,
    Enumerations: null,
    Name: LastError,
    ClassName: LastError,
    ExternalClassName: LastError,
    FileNameWithoutExtension: G.Models.LastError
  },
  {
    Id: code,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: server_error,
        Name: ServerError,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: rate_limit_exceeded,
        Name: RateLimitExceeded,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: One of `server_error` or `rate_limit_exceeded`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Code,
    ClassName: Code,
    ExternalClassName: Code,
    FileNameWithoutExtension: G.Models.Code
  },
  {
    Id: metadata,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary:
Set of 16 key-value pairs that can be attached to an object. This can be useful for storing additional information about the object in a structured format. Keys can be a maximum of 64 characters long and values can be a maxium of 512 characters long.
,
    AdditionalModels: null,
    Enumerations: null,
    Name: Metadata,
    ClassName: Metadata,
    ExternalClassName: Metadata,
    FileNameWithoutExtension: G.Models.Metadata
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: thread.run.step,
        Name: Threadrunstep,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `thread.run.step`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: message_creation,
        Name: MessageCreation,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: tool_calls,
        Name: ToolCalls,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of run step, which can be either `message_creation` or `tool_calls`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: status,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: in_progress,
        Name: InProgress,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: cancelled,
        Name: Cancelled,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: failed,
        Name: Failed,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: completed,
        Name: Completed,
        Type: ,
        IsRequired: false,
        Summary: 
      },
      {
        Id: expired,
        Name: Expired,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The status of the run step, which can be either `in_progress`, `cancelled`, `failed`, `completed`, or `expired`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Status,
    ClassName: Status,
    ExternalClassName: Status,
    FileNameWithoutExtension: G.Models.Status
  },
  {
    Id: ListRunStepsResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: list
      },
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<RunStepObject>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: first_id,
        Name: FirstId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: step_abc123
      },
      {
        Id: last_id,
        Name: LastId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: step_abc456
      },
      {
        Id: has_more,
        Name: HasMore,
        Type: bool,
        IsRequired: true,
        Summary:
<br/>Example: false
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListRunStepsResponse,
    ClassName: ListRunStepsResponse,
    ExternalClassName: ListRunStepsResponse,
    FileNameWithoutExtension: G.Models.ListRunStepsResponse
  },
  {
    Id: RunStepDetailsMessageCreationObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: Always `message_creation`.
      },
      {
        Id: message_creation,
        Name: MessageCreation,
        Type: RunStepDetailsMessageCreationObjectMessageCreation,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: Details of the message creation by the run step.,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunStepDetailsMessageCreationObject,
    ClassName: RunStepDetailsMessageCreationObject,
    ExternalClassName: RunStepDetailsMessageCreationObject,
    FileNameWithoutExtension: G.Models.RunStepDetailsMessageCreationObject
  },
  {
    Id: message_creation,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: message_id,
        Name: MessageId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the message that was created by this run step.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: MessageCreation,
    ClassName: MessageCreation,
    ExternalClassName: MessageCreation,
    FileNameWithoutExtension: G.Models.MessageCreation
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: message_creation,
        Name: MessageCreation,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: Always `message_creation`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: RunStepDetailsToolCallsObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: Always `tool_calls`.
      },
      {
        Id: tool_calls,
        Name: ToolCalls,
        Type: global::System.Collections.Generic.IList<RunStepDetailsToolCallsObjectToolCalls>,
        IsRequired: true,
        Summary:
An array of tool calls the run step was involved in. These can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.

      }
    ],
    Summary: Details of the tool call.,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunStepDetailsToolCallsObject,
    ClassName: RunStepDetailsToolCallsObject,
    ExternalClassName: RunStepDetailsToolCallsObject,
    FileNameWithoutExtension: G.Models.RunStepDetailsToolCallsObject
  },
  {
    Id: tool_calls,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ToolCalls,
    ClassName: ToolCalls,
    ExternalClassName: ToolCalls,
    FileNameWithoutExtension: G.Models.ToolCalls
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: tool_calls,
        Name: ToolCalls,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: Always `tool_calls`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: RunStepDetailsToolCallsCodeObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The ID of the tool call.
      },
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of tool call. This is always going to be `code_interpreter` for this type of tool call.
      },
      {
        Id: code_interpreter,
        Name: CodeInterpreter,
        Type: RunStepDetailsToolCallsCodeObjectCodeInterpreter,
        IsRequired: true,
        Summary: The Code Interpreter tool call definition.
      }
    ],
    Summary: Details of the Code Interpreter tool call the run step was involved in.,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunStepDetailsToolCallsCodeObject,
    ClassName: RunStepDetailsToolCallsCodeObject,
    ExternalClassName: RunStepDetailsToolCallsCodeObject,
    FileNameWithoutExtension: G.Models.RunStepDetailsToolCallsCodeObject
  },
  {
    Id: code_interpreter,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: input,
        Name: Input,
        Type: string,
        IsRequired: true,
        Summary: The input to the Code Interpreter tool call.
      },
      {
        Id: outputs,
        Name: Outputs,
        Type: global::System.Collections.Generic.IList<RunStepDetailsToolCallsCodeObjectCodeInterpreterOutputs>,
        IsRequired: true,
        Summary: The outputs from the Code Interpreter tool call. Code Interpreter can output one or more items, including text (`logs`) or images (`image`). Each of these are represented by a different object type.
      }
    ],
    Summary: The Code Interpreter tool call definition.,
    AdditionalModels: null,
    Enumerations: null,
    Name: CodeInterpreter,
    ClassName: CodeInterpreter,
    ExternalClassName: CodeInterpreter,
    FileNameWithoutExtension: G.Models.CodeInterpreter
  },
  {
    Id: outputs,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Outputs,
    ClassName: Outputs,
    ExternalClassName: Outputs,
    FileNameWithoutExtension: G.Models.Outputs
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: code_interpreter,
        Name: CodeInterpreter,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of tool call. This is always going to be `code_interpreter` for this type of tool call.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: RunStepDetailsToolCallsCodeOutputLogsObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: Always `logs`.
      },
      {
        Id: logs,
        Name: Logs,
        Type: string,
        IsRequired: true,
        Summary: The text output from the Code Interpreter tool call.
      }
    ],
    Summary: Text output from the Code Interpreter tool call as part of a run step.,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunStepDetailsToolCallsCodeOutputLogsObject,
    ClassName: RunStepDetailsToolCallsCodeOutputLogsObject,
    ExternalClassName: RunStepDetailsToolCallsCodeOutputLogsObject,
    FileNameWithoutExtension: G.Models.RunStepDetailsToolCallsCodeOutputLogsObject
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: logs,
        Name: Logs,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: Always `logs`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: RunStepDetailsToolCallsCodeOutputImageObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: Always `image`.
      },
      {
        Id: image,
        Name: Image,
        Type: RunStepDetailsToolCallsCodeOutputImageObjectImage,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunStepDetailsToolCallsCodeOutputImageObject,
    ClassName: RunStepDetailsToolCallsCodeOutputImageObject,
    ExternalClassName: RunStepDetailsToolCallsCodeOutputImageObject,
    FileNameWithoutExtension: G.Models.RunStepDetailsToolCallsCodeOutputImageObject
  },
  {
    Id: image,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: file_id,
        Name: FileId,
        Type: string,
        IsRequired: true,
        Summary: The [file](/docs/api-reference/files) ID of the image.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Image,
    ClassName: Image,
    ExternalClassName: Image,
    FileNameWithoutExtension: G.Models.Image
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: image,
        Name: Image,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: Always `image`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: RunStepDetailsToolCallsRetrievalObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The ID of the tool call object.
      },
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of tool call. This is always going to be `retrieval` for this type of tool call.
      },
      {
        Id: retrieval,
        Name: Retrieval,
        Type: RunStepDetailsToolCallsRetrievalObjectRetrieval,
        IsRequired: true,
        Summary: For now, this is always going to be an empty object.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunStepDetailsToolCallsRetrievalObject,
    ClassName: RunStepDetailsToolCallsRetrievalObject,
    ExternalClassName: RunStepDetailsToolCallsRetrievalObject,
    FileNameWithoutExtension: G.Models.RunStepDetailsToolCallsRetrievalObject
  },
  {
    Id: retrieval,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: null,
    Summary: For now, this is always going to be an empty object.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Retrieval,
    ClassName: Retrieval,
    ExternalClassName: Retrieval,
    FileNameWithoutExtension: G.Models.Retrieval
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: retrieval,
        Name: Retrieval,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of tool call. This is always going to be `retrieval` for this type of tool call.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: RunStepDetailsToolCallsFunctionObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The ID of the tool call object.
      },
      {
        Id: type,
        Name: Type,
        Type: string,
        IsRequired: true,
        Summary: The type of tool call. This is always going to be `function` for this type of tool call.
      },
      {
        Id: function,
        Name: Function,
        Type: RunStepDetailsToolCallsFunctionObjectFunction,
        IsRequired: true,
        Summary: The definition of the function that was called.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: RunStepDetailsToolCallsFunctionObject,
    ClassName: RunStepDetailsToolCallsFunctionObject,
    ExternalClassName: RunStepDetailsToolCallsFunctionObject,
    FileNameWithoutExtension: G.Models.RunStepDetailsToolCallsFunctionObject
  },
  {
    Id: function,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: string,
        IsRequired: true,
        Summary: The name of the function.
      },
      {
        Id: arguments,
        Name: Arguments,
        Type: string,
        IsRequired: true,
        Summary: The arguments passed to the function.
      },
      {
        Id: output,
        Name: Output,
        Type: string?,
        IsRequired: true,
        Summary: The output of the function. This will be `null` if the outputs have not been [submitted](/docs/api-reference/runs/submitToolOutputs) yet.
      }
    ],
    Summary: The definition of the function that was called.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Function,
    ClassName: Function,
    ExternalClassName: Function,
    FileNameWithoutExtension: G.Models.Function
  },
  {
    Id: type,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: function,
        Name: Function,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The type of tool call. This is always going to be `function` for this type of tool call.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Type,
    ClassName: Type,
    ExternalClassName: Type,
    FileNameWithoutExtension: G.Models.Type
  },
  {
    Id: AssistantFileObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The identifier, which can be referenced in API endpoints.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `assistant.file`.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the assistant file was created.
      },
      {
        Id: assistant_id,
        Name: AssistantId,
        Type: string,
        IsRequired: true,
        Summary: The assistant ID that the file is attached to.
      }
    ],
    Summary: A list of [Files](/docs/api-reference/files) attached to an `assistant`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: AssistantFileObject,
    ClassName: AssistantFileObject,
    ExternalClassName: AssistantFileObject,
    FileNameWithoutExtension: G.Models.AssistantFileObject
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: assistant.file,
        Name: Assistantfile,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `assistant.file`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: CreateAssistantFileRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: file_id,
        Name: FileId,
        Type: string,
        IsRequired: true,
        Summary: A [File](/docs/api-reference/files) ID (with `purpose="assistants"`) that the assistant should use. Useful for tools like `retrieval` and `code_interpreter` that can access files.
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateAssistantFileRequest,
    ClassName: CreateAssistantFileRequest,
    ExternalClassName: CreateAssistantFileRequest,
    FileNameWithoutExtension: G.Models.CreateAssistantFileRequest
  },
  {
    Id: DeleteAssistantFileResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: 
      },
      {
        Id: deleted,
        Name: Deleted,
        Type: bool,
        IsRequired: true,
        Summary: 
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: 
      }
    ],
    Summary: Deletes the association between the assistant and the file, but does not delete the [File](/docs/api-reference/files) object itself.,
    AdditionalModels: null,
    Enumerations: null,
    Name: DeleteAssistantFileResponse,
    ClassName: DeleteAssistantFileResponse,
    ExternalClassName: DeleteAssistantFileResponse,
    FileNameWithoutExtension: G.Models.DeleteAssistantFileResponse
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: assistant.file.deleted,
        Name: Assistantfiledeleted,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: ListAssistantFilesResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: list
      },
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<AssistantFileObject>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: first_id,
        Name: FirstId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: file-abc123
      },
      {
        Id: last_id,
        Name: LastId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: file-abc456
      },
      {
        Id: has_more,
        Name: HasMore,
        Type: bool,
        IsRequired: true,
        Summary:
<br/>Example: false
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListAssistantFilesResponse,
    ClassName: ListAssistantFilesResponse,
    ExternalClassName: ListAssistantFilesResponse,
    FileNameWithoutExtension: G.Models.ListAssistantFilesResponse
  },
  {
    Id: MessageFileObject,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: id,
        Name: Id,
        Type: string,
        IsRequired: true,
        Summary: The identifier, which can be referenced in API endpoints.
      },
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary: The object type, which is always `thread.message.file`.
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: int,
        IsRequired: true,
        Summary: The Unix timestamp (in seconds) for when the message file was created.
      },
      {
        Id: message_id,
        Name: MessageId,
        Type: string,
        IsRequired: true,
        Summary: The ID of the [message](/docs/api-reference/messages) that the [File](/docs/api-reference/files) is attached to.
      }
    ],
    Summary: A list of files attached to a `message`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: MessageFileObject,
    ClassName: MessageFileObject,
    ExternalClassName: MessageFileObject,
    FileNameWithoutExtension: G.Models.MessageFileObject
  },
  {
    Id: object,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    Properties: [
      {
        Id: thread.message.file,
        Name: Threadmessagefile,
        Type: ,
        IsRequired: false,
        Summary: 
      }
    ],
    Summary: The object type, which is always `thread.message.file`.,
    AdditionalModels: null,
    Enumerations: null,
    Name: Object,
    ClassName: Object,
    ExternalClassName: Object,
    FileNameWithoutExtension: G.Models.Object
  },
  {
    Id: ListMessageFilesResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Properties: [
      {
        Id: object,
        Name: Object,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: list
      },
      {
        Id: data,
        Name: Data,
        Type: global::System.Collections.Generic.IList<MessageFileObject>,
        IsRequired: true,
        Summary: 
      },
      {
        Id: first_id,
        Name: FirstId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: file-abc123
      },
      {
        Id: last_id,
        Name: LastId,
        Type: string,
        IsRequired: true,
        Summary:
<br/>Example: file-abc456
      },
      {
        Id: has_more,
        Name: HasMore,
        Type: bool,
        IsRequired: true,
        Summary:
<br/>Example: false
      }
    ],
    Summary: ,
    AdditionalModels: null,
    Enumerations: null,
    Name: ListMessageFilesResponse,
    ClassName: ListMessageFilesResponse,
    ExternalClassName: ListMessageFilesResponse,
    FileNameWithoutExtension: G.Models.ListMessageFilesResponse
  }
]