[
  {
    Id: GenerateCompletion,
    Namespace: G,
    ClassName: CompletionsClient,
    BaseUrl: ,
    Stream: true,
    Path: "/generate",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ConverterType: ,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: prompt,
        Name: Prompt,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The prompt to generate a response.
<br/>Example: Why is the sky blue?,
        ConverterType: ,
        ParameterName: prompt,
        ArgumentName: prompt,
        ParameterDefaultValue: default
      },
      {
        Id: images,
        Name: Images,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: global::System.Collections.Generic.IList<string?>,
          CSharpTypeWithNullability: global::System.Collections.Generic.IList<string?>?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: (optional) a list of Base64-encoded images to include in the message (for multimodal models such as llava),
        ConverterType: ,
        ParameterName: images,
        ArgumentName: images,
        ParameterDefaultValue: default
      },
      {
        Id: system,
        Name: System,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: The system prompt to (overrides what is defined in the Modelfile).,
        ConverterType: ,
        ParameterName: system,
        ArgumentName: system,
        ParameterDefaultValue: default
      },
      {
        Id: template,
        Name: Template,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: The full prompt or prompt template (overrides what is defined in the Modelfile).,
        ConverterType: ,
        ParameterName: template,
        ArgumentName: template,
        ParameterDefaultValue: default
      },
      {
        Id: context,
        Name: Context,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<long>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: global::System.Collections.Generic.IList<long>,
          CSharpTypeWithNullability: global::System.Collections.Generic.IList<long>?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: The context parameter returned from a previous request to [generateCompletion], this can be used to keep a short conversational memory.,
        ConverterType: ,
        ParameterName: context,
        ArgumentName: context,
        ParameterDefaultValue: default
      },
      {
        Id: options,
        Name: Options,
        Type: {
          CSharpType: RequestOptions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            num_keep,
            seed,
            num_predict,
            top_k,
            top_p,
            tfs_z,
            typical_p,
            repeat_last_n,
            temperature,
            repeat_penalty,
            presence_penalty,
            frequency_penalty,
            mirostat,
            mirostat_tau,
            mirostat_eta,
            penalize_newline,
            stop,
            numa,
            num_ctx,
            num_batch,
            num_gqa,
            num_gpu,
            main_gpu,
            low_vram,
            f16_kv,
            logits_all,
            vocab_only,
            use_mmap,
            use_mlock,
            num_thread
          ],
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: RequestOptions,
          CSharpTypeWithNullability: RequestOptions?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Additional model parameters listed in the documentation for the Modelfile such as `temperature`.,
        ConverterType: ,
        ParameterName: options,
        ArgumentName: options,
        ParameterDefaultValue: default
      },
      {
        Id: format,
        Name: Format,
        Type: {
          CSharpType: GenerateCompletionRequestFormat?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Json
          ],
          EnumValues: [
            json
          ],
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: GenerateCompletionRequestFormat,
          CSharpTypeWithNullability: GenerateCompletionRequestFormat?,
          IsAnyOf: false,
          ConverterType: GenerateCompletionRequestFormatJsonConverter
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The format to return a response in. Currently the only accepted value is json.

Enable JSON mode by setting the format parameter to json. This will structure the response as valid JSON.

Note: it's important to instruct the model to use JSON in the prompt. Otherwise, the model may generate large amounts whitespace.
,
        ConverterType: GenerateCompletionRequestFormatJsonConverter,
        ParameterName: format,
        ArgumentName: format,
        ParameterDefaultValue: default
      },
      {
        Id: raw,
        Name: Raw,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: bool,
          CSharpTypeWithNullability: bool?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
If `true` no formatting will be applied to the prompt and no context will be returned. 

You may choose to use the `raw` parameter if you are specifying a full templated prompt in your request to the API, and are managing history yourself.
,
        ConverterType: ,
        ParameterName: raw,
        ArgumentName: raw,
        ParameterDefaultValue: default
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: bool,
          CSharpTypeWithNullability: bool?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        DefaultValue: true,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: true,
        ConverterType: ,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: true
      },
      {
        Id: keep_alive,
        Name: KeepAlive,
        Type: {
          CSharpType: int?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: int,
          CSharpTypeWithNullability: int?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
How long (in minutes) to keep the model loaded in memory.

- If set to a positive duration (e.g. 20), the model will stay loaded for the provided duration.
- If set to a negative duration (e.g. -1), the model will stay loaded indefinitely.
- If set to 0, the model will be unloaded immediately once finished.
- If not set, the model will stay loaded for 5 minutes by default
,
        ConverterType: ,
        ParameterName: keepAlive,
        ArgumentName: keepAlive,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Post,
    Summary: Generate a response for a given prompt with a provided model.,
    RequestType: {
      CSharpType: GenerateCompletionRequest,
      IsArray: false,
      IsEnum: false,
      Properties: [
        model,
        prompt,
        images,
        system,
        template,
        context,
        options,
        format,
        raw,
        stream,
        keep_alive
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: GenerateCompletionRequest,
      CSharpTypeWithNullability: GenerateCompletionRequest?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: GenerateCompletionResponse,
      IsArray: false,
      IsEnum: false,
      Properties: [
        model,
        created_at,
        response,
        done,
        context,
        total_duration,
        load_duration,
        prompt_eval_count,
        prompt_eval_duration,
        eval_count,
        eval_duration
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: GenerateCompletionResponse,
      CSharpTypeWithNullability: GenerateCompletionResponse?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: GenerateCompletionRequest,
        IsArray: false,
        IsEnum: false,
        Properties: [
          model,
          prompt,
          images,
          system,
          template,
          context,
          options,
          format,
          raw,
          stream,
          keep_alive
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: GenerateCompletionRequest,
        CSharpTypeWithNullability: GenerateCompletionRequest?,
        IsAnyOf: false,
        ConverterType: 
      },
      {
        CSharpType: GenerateCompletionResponse,
        IsArray: false,
        IsEnum: false,
        Properties: [
          model,
          created_at,
          response,
          done,
          context,
          total_duration,
          load_duration,
          prompt_eval_count,
          prompt_eval_duration,
          eval_count,
          eval_duration
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: GenerateCompletionResponse,
        CSharpTypeWithNullability: GenerateCompletionResponse?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: GenerateCompletionAsync,
    NotAsyncMethodName: GenerateCompletion,
    FileNameWithoutExtension: G.CompletionsClient.GenerateCompletion
  },
  {
    Id: GenerateChatCompletion,
    Namespace: G,
    ClassName: ChatClient,
    BaseUrl: ,
    Stream: true,
    Path: "/chat",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ConverterType: ,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: messages,
        Name: Messages,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<Message>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: global::System.Collections.Generic.IList<Message>,
          CSharpTypeWithNullability: global::System.Collections.Generic.IList<Message>?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary: The messages of the chat, this can be used to keep a chat memory,
        ConverterType: ,
        ParameterName: messages,
        ArgumentName: messages,
        ParameterDefaultValue: default
      },
      {
        Id: format,
        Name: Format,
        Type: {
          CSharpType: GenerateChatCompletionRequestFormat?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Json
          ],
          EnumValues: [
            json
          ],
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: GenerateChatCompletionRequestFormat,
          CSharpTypeWithNullability: GenerateChatCompletionRequestFormat?,
          IsAnyOf: false,
          ConverterType: GenerateChatCompletionRequestFormatJsonConverter
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The format to return a response in. Currently the only accepted value is json.

Enable JSON mode by setting the format parameter to json. This will structure the response as valid JSON.

Note: it's important to instruct the model to use JSON in the prompt. Otherwise, the model may generate large amounts whitespace.
,
        ConverterType: GenerateChatCompletionRequestFormatJsonConverter,
        ParameterName: format,
        ArgumentName: format,
        ParameterDefaultValue: default
      },
      {
        Id: options,
        Name: Options,
        Type: {
          CSharpType: RequestOptions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            num_keep,
            seed,
            num_predict,
            top_k,
            top_p,
            tfs_z,
            typical_p,
            repeat_last_n,
            temperature,
            repeat_penalty,
            presence_penalty,
            frequency_penalty,
            mirostat,
            mirostat_tau,
            mirostat_eta,
            penalize_newline,
            stop,
            numa,
            num_ctx,
            num_batch,
            num_gqa,
            num_gpu,
            main_gpu,
            low_vram,
            f16_kv,
            logits_all,
            vocab_only,
            use_mmap,
            use_mlock,
            num_thread
          ],
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: RequestOptions,
          CSharpTypeWithNullability: RequestOptions?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Additional model parameters listed in the documentation for the Modelfile such as `temperature`.,
        ConverterType: ,
        ParameterName: options,
        ArgumentName: options,
        ParameterDefaultValue: default
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: bool,
          CSharpTypeWithNullability: bool?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        DefaultValue: true,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: true,
        ConverterType: ,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: true
      },
      {
        Id: keep_alive,
        Name: KeepAlive,
        Type: {
          CSharpType: int?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: int,
          CSharpTypeWithNullability: int?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
How long (in minutes) to keep the model loaded in memory.

- If set to a positive duration (e.g. 20), the model will stay loaded for the provided duration.
- If set to a negative duration (e.g. -1), the model will stay loaded indefinitely.
- If set to 0, the model will be unloaded immediately once finished.
- If not set, the model will stay loaded for 5 minutes by default
,
        ConverterType: ,
        ParameterName: keepAlive,
        ArgumentName: keepAlive,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Post,
    Summary: Generate the next message in a chat with a provided model.,
    RequestType: {
      CSharpType: GenerateChatCompletionRequest,
      IsArray: false,
      IsEnum: false,
      Properties: [
        model,
        messages,
        format,
        options,
        stream,
        keep_alive
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: GenerateChatCompletionRequest,
      CSharpTypeWithNullability: GenerateChatCompletionRequest?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: GenerateChatCompletionResponse,
      IsArray: false,
      IsEnum: false,
      Properties: [
        message,
        model,
        created_at,
        done,
        done_reason,
        total_duration,
        load_duration,
        prompt_eval_count,
        prompt_eval_duration,
        eval_count,
        eval_duration
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: GenerateChatCompletionResponse,
      CSharpTypeWithNullability: GenerateChatCompletionResponse?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: GenerateChatCompletionRequest,
        IsArray: false,
        IsEnum: false,
        Properties: [
          model,
          messages,
          format,
          options,
          stream,
          keep_alive
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: GenerateChatCompletionRequest,
        CSharpTypeWithNullability: GenerateChatCompletionRequest?,
        IsAnyOf: false,
        ConverterType: 
      },
      {
        CSharpType: GenerateChatCompletionResponse,
        IsArray: false,
        IsEnum: false,
        Properties: [
          message,
          model,
          created_at,
          done,
          done_reason,
          total_duration,
          load_duration,
          prompt_eval_count,
          prompt_eval_duration,
          eval_count,
          eval_duration
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: GenerateChatCompletionResponse,
        CSharpTypeWithNullability: GenerateChatCompletionResponse?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: GenerateChatCompletionAsync,
    NotAsyncMethodName: GenerateChatCompletion,
    FileNameWithoutExtension: G.ChatClient.GenerateChatCompletion
  },
  {
    Id: GenerateEmbedding,
    Namespace: G,
    ClassName: EmbeddingsClient,
    BaseUrl: ,
    Stream: false,
    Path: "/embeddings",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ConverterType: ,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: prompt,
        Name: Prompt,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
Text to generate embeddings for.
<br/>Example: Here is an article about llamas...,
        ConverterType: ,
        ParameterName: prompt,
        ArgumentName: prompt,
        ParameterDefaultValue: default
      },
      {
        Id: options,
        Name: Options,
        Type: {
          CSharpType: RequestOptions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            num_keep,
            seed,
            num_predict,
            top_k,
            top_p,
            tfs_z,
            typical_p,
            repeat_last_n,
            temperature,
            repeat_penalty,
            presence_penalty,
            frequency_penalty,
            mirostat,
            mirostat_tau,
            mirostat_eta,
            penalize_newline,
            stop,
            numa,
            num_ctx,
            num_batch,
            num_gqa,
            num_gpu,
            main_gpu,
            low_vram,
            f16_kv,
            logits_all,
            vocab_only,
            use_mmap,
            use_mlock,
            num_thread
          ],
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: RequestOptions,
          CSharpTypeWithNullability: RequestOptions?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Additional model parameters listed in the documentation for the Modelfile such as `temperature`.,
        ConverterType: ,
        ParameterName: options,
        ArgumentName: options,
        ParameterDefaultValue: default
      },
      {
        Id: keep_alive,
        Name: KeepAlive,
        Type: {
          CSharpType: int?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: int,
          CSharpTypeWithNullability: int?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
How long (in minutes) to keep the model loaded in memory.

- If set to a positive duration (e.g. 20), the model will stay loaded for the provided duration.
- If set to a negative duration (e.g. -1), the model will stay loaded indefinitely.
- If set to 0, the model will be unloaded immediately once finished.
- If not set, the model will stay loaded for 5 minutes by default
,
        ConverterType: ,
        ParameterName: keepAlive,
        ArgumentName: keepAlive,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Post,
    Summary: Generate embeddings from a model.,
    RequestType: {
      CSharpType: GenerateEmbeddingRequest,
      IsArray: false,
      IsEnum: false,
      Properties: [
        model,
        prompt,
        options,
        keep_alive
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: GenerateEmbeddingRequest,
      CSharpTypeWithNullability: GenerateEmbeddingRequest?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: GenerateEmbeddingResponse,
      IsArray: false,
      IsEnum: false,
      Properties: [
        embedding
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: GenerateEmbeddingResponse,
      CSharpTypeWithNullability: GenerateEmbeddingResponse?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: GenerateEmbeddingRequest,
        IsArray: false,
        IsEnum: false,
        Properties: [
          model,
          prompt,
          options,
          keep_alive
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: GenerateEmbeddingRequest,
        CSharpTypeWithNullability: GenerateEmbeddingRequest?,
        IsAnyOf: false,
        ConverterType: 
      },
      {
        CSharpType: GenerateEmbeddingResponse,
        IsArray: false,
        IsEnum: false,
        Properties: [
          embedding
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: GenerateEmbeddingResponse,
        CSharpTypeWithNullability: GenerateEmbeddingResponse?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: GenerateEmbeddingAsync,
    NotAsyncMethodName: GenerateEmbedding,
    FileNameWithoutExtension: G.EmbeddingsClient.GenerateEmbedding
  },
  {
    Id: CreateModel,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: ,
    Stream: true,
    Path: "/create",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: mario,
        ConverterType: ,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: modelfile,
        Name: Modelfile,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The contents of the Modelfile.
<br/>Example: FROM llama2\nSYSTEM You are mario from Super Mario Bros.,
        ConverterType: ,
        ParameterName: modelfile,
        ArgumentName: modelfile,
        ParameterDefaultValue: default
      },
      {
        Id: path,
        Name: Path,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Path to the Modelfile (optional),
        ConverterType: ,
        ParameterName: path,
        ArgumentName: path,
        ParameterDefaultValue: default
      },
      {
        Id: quantize,
        Name: Quantize,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: The quantization level of the model.,
        ConverterType: ,
        ParameterName: quantize,
        ArgumentName: quantize,
        ParameterDefaultValue: default
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: bool,
          CSharpTypeWithNullability: bool?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        DefaultValue: true,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: true,
        ConverterType: ,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: true
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Post,
    Summary: Create a model from a Modelfile.,
    RequestType: {
      CSharpType: CreateModelRequest,
      IsArray: false,
      IsEnum: false,
      Properties: [
        model,
        modelfile,
        path,
        quantize,
        stream
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: CreateModelRequest,
      CSharpTypeWithNullability: CreateModelRequest?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: CreateModelResponse,
      IsArray: false,
      IsEnum: false,
      Properties: [
        status
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: CreateModelResponse,
      CSharpTypeWithNullability: CreateModelResponse?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: CreateModelRequest,
        IsArray: false,
        IsEnum: false,
        Properties: [
          model,
          modelfile,
          path,
          quantize,
          stream
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: CreateModelRequest,
        CSharpTypeWithNullability: CreateModelRequest?,
        IsAnyOf: false,
        ConverterType: 
      },
      {
        CSharpType: CreateModelResponse,
        IsArray: false,
        IsEnum: false,
        Properties: [
          status
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: CreateModelResponse,
        CSharpTypeWithNullability: CreateModelResponse?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: CreateModelAsync,
    NotAsyncMethodName: CreateModel,
    FileNameWithoutExtension: G.ModelsClient.CreateModel
  },
  {
    Id: ListModels,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: ,
    Stream: false,
    Path: "/tags",
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    Summary: List models that are available locally.,
    RequestType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ModelsResponse,
      IsArray: false,
      IsEnum: false,
      Properties: [
        models
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: ModelsResponse,
      CSharpTypeWithNullability: ModelsResponse?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: ModelsResponse,
        IsArray: false,
        IsEnum: false,
        Properties: [
          models
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: ModelsResponse,
        CSharpTypeWithNullability: ModelsResponse?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: ListModelsAsync,
    NotAsyncMethodName: ListModels,
    FileNameWithoutExtension: G.ModelsClient.ListModels
  },
  {
    Id: ShowModelInfo,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: ,
    Stream: false,
    Path: "/show",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ConverterType: ,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Post,
    Summary: Show details about a model including modelfile, template, parameters, license, and system prompt.,
    RequestType: {
      CSharpType: ModelInfoRequest,
      IsArray: false,
      IsEnum: false,
      Properties: [
        model
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: ModelInfoRequest,
      CSharpTypeWithNullability: ModelInfoRequest?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ModelInfo,
      IsArray: false,
      IsEnum: false,
      Properties: [
        license,
        modelfile,
        parameters,
        template,
        system,
        details,
        messages
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: ModelInfo,
      CSharpTypeWithNullability: ModelInfo?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: ModelInfoRequest,
        IsArray: false,
        IsEnum: false,
        Properties: [
          model
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: ModelInfoRequest,
        CSharpTypeWithNullability: ModelInfoRequest?,
        IsAnyOf: false,
        ConverterType: 
      },
      {
        CSharpType: ModelInfo,
        IsArray: false,
        IsEnum: false,
        Properties: [
          license,
          modelfile,
          parameters,
          template,
          system,
          details,
          messages
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: ModelInfo,
        CSharpTypeWithNullability: ModelInfo?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: ShowModelInfoAsync,
    NotAsyncMethodName: ShowModelInfo,
    FileNameWithoutExtension: G.ModelsClient.ShowModelInfo
  },
  {
    Id: CopyModel,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: ,
    Stream: false,
    Path: "/copy",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: source,
        Name: Source,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
Name of the model to copy.
<br/>Example: llama2:7b,
        ConverterType: ,
        ParameterName: source,
        ArgumentName: source,
        ParameterDefaultValue: default
      },
      {
        Id: destination,
        Name: Destination,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
Name of the new model.
<br/>Example: llama2-backup,
        ConverterType: ,
        ParameterName: destination,
        ArgumentName: destination,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Post,
    Summary: Creates a model with another name from an existing model.,
    RequestType: {
      CSharpType: CopyModelRequest,
      IsArray: false,
      IsEnum: false,
      Properties: [
        source,
        destination
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: CopyModelRequest,
      CSharpTypeWithNullability: CopyModelRequest?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: CopyModelRequest,
        IsArray: false,
        IsEnum: false,
        Properties: [
          source,
          destination
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: CopyModelRequest,
        CSharpTypeWithNullability: CopyModelRequest?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: CopyModelAsync,
    NotAsyncMethodName: CopyModel,
    FileNameWithoutExtension: G.ModelsClient.CopyModel
  },
  {
    Id: DeleteModel,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: ,
    Stream: false,
    Path: "/delete",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:13b,
        ConverterType: ,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Delete,
    Summary: Delete a model and its data.,
    RequestType: {
      CSharpType: DeleteModelRequest,
      IsArray: false,
      IsEnum: false,
      Properties: [
        model
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: DeleteModelRequest,
      CSharpTypeWithNullability: DeleteModelRequest?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: DeleteModelRequest,
        IsArray: false,
        IsEnum: false,
        Properties: [
          model
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: DeleteModelRequest,
        CSharpTypeWithNullability: DeleteModelRequest?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: DeleteModelAsync,
    NotAsyncMethodName: DeleteModel,
    FileNameWithoutExtension: G.ModelsClient.DeleteModel
  },
  {
    Id: PullModel,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: ,
    Stream: true,
    Path: "/pull",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ConverterType: ,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: insecure,
        Name: Insecure,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: bool,
          CSharpTypeWithNullability: bool?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        DefaultValue: false,
        IsDeprecated: false,
        Summary:
Allow insecure connections to the library. 

Only use this if you are pulling from your own library during development.

<br/>Default Value: false,
        ConverterType: ,
        ParameterName: insecure,
        ArgumentName: insecure,
        ParameterDefaultValue: false
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Ollama username.,
        ConverterType: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: password,
        Name: Password,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Ollama password.,
        ConverterType: ,
        ParameterName: password,
        ArgumentName: password,
        ParameterDefaultValue: default
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: bool,
          CSharpTypeWithNullability: bool?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        DefaultValue: true,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: true,
        ConverterType: ,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: true
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Post,
    Summary: Download a model from the ollama library.,
    RequestType: {
      CSharpType: PullModelRequest,
      IsArray: false,
      IsEnum: false,
      Properties: [
        model,
        insecure,
        username,
        password,
        stream
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: PullModelRequest,
      CSharpTypeWithNullability: PullModelRequest?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: PullModelResponse,
      IsArray: false,
      IsEnum: false,
      Properties: [
        status,
        digest,
        total,
        completed
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: PullModelResponse,
      CSharpTypeWithNullability: PullModelResponse?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: PullModelRequest,
        IsArray: false,
        IsEnum: false,
        Properties: [
          model,
          insecure,
          username,
          password,
          stream
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: PullModelRequest,
        CSharpTypeWithNullability: PullModelRequest?,
        IsAnyOf: false,
        ConverterType: 
      },
      {
        CSharpType: PullModelResponse,
        IsArray: false,
        IsEnum: false,
        Properties: [
          status,
          digest,
          total,
          completed
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: PullModelResponse,
        CSharpTypeWithNullability: PullModelResponse?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: PullModelAsync,
    NotAsyncMethodName: PullModel,
    FileNameWithoutExtension: G.ModelsClient.PullModel
  },
  {
    Id: PushModel,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: ,
    Stream: true,
    Path: "/push",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The name of the model to push in the form of &lt;namespace&gt;/&lt;model&gt;:&lt;tag&gt;.
<br/>Example: mattw/pygmalion:latest,
        ConverterType: ,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: insecure,
        Name: Insecure,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: bool,
          CSharpTypeWithNullability: bool?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        DefaultValue: false,
        IsDeprecated: false,
        Summary:
Allow insecure connections to the library. 

Only use this if you are pushing to your library during development.

<br/>Default Value: false,
        ConverterType: ,
        ParameterName: insecure,
        ArgumentName: insecure,
        ParameterDefaultValue: false
      },
      {
        Id: username,
        Name: Username,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Ollama username.,
        ConverterType: ,
        ParameterName: username,
        ArgumentName: username,
        ParameterDefaultValue: default
      },
      {
        Id: password,
        Name: Password,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Ollama password.,
        ConverterType: ,
        ParameterName: password,
        ArgumentName: password,
        ParameterDefaultValue: default
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: bool,
          CSharpTypeWithNullability: bool?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        DefaultValue: true,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: true,
        ConverterType: ,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: true
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Post,
    Summary: Upload a model to a model library.,
    RequestType: {
      CSharpType: PushModelRequest,
      IsArray: false,
      IsEnum: false,
      Properties: [
        model,
        insecure,
        username,
        password,
        stream
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: PushModelRequest,
      CSharpTypeWithNullability: PushModelRequest?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: PushModelResponse,
      IsArray: false,
      IsEnum: false,
      Properties: [
        status,
        digest,
        total,
        completed
      ],
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: PushModelResponse,
      CSharpTypeWithNullability: PushModelResponse?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: PushModelRequest,
        IsArray: false,
        IsEnum: false,
        Properties: [
          model,
          insecure,
          username,
          password,
          stream
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: PushModelRequest,
        CSharpTypeWithNullability: PushModelRequest?,
        IsAnyOf: false,
        ConverterType: 
      },
      {
        CSharpType: PushModelResponse,
        IsArray: false,
        IsEnum: false,
        Properties: [
          status,
          digest,
          total,
          completed
        ],
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: PushModelResponse,
        CSharpTypeWithNullability: PushModelResponse?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: PushModelAsync,
    NotAsyncMethodName: PushModel,
    FileNameWithoutExtension: G.ModelsClient.PushModel
  },
  {
    Id: CheckBlob,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: ,
    Stream: false,
    Path: $"/blobs/{digest}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: digest,
        Name: Digest,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        IsDeprecated: false,
        Summary: ,
        ConverterType: ,
        ParameterName: digest,
        ArgumentName: digest,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Head,
    Summary: Check to see if a blob exists on the Ollama server which is useful when creating models.,
    RequestType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: null,
    Converters: null,
    MethodName: CheckBlobAsync,
    NotAsyncMethodName: CheckBlob,
    FileNameWithoutExtension: G.ModelsClient.CheckBlob
  },
  {
    Id: CreateBlob,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: ,
    Stream: false,
    Path: $"/blobs/{digest}",
    AuthorizationScheme: ,
    Properties: [
      {
        Id: digest,
        Name: Digest,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: G,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: true,
          CSharpTypeWithoutNullability: string,
          CSharpTypeWithNullability: string?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: true,
        ParameterLocation: Path,
        ParameterStyle: Simple,
        ParameterExplode: false,
        IsDeprecated: false,
        Summary: ,
        ConverterType: ,
        ParameterName: digest,
        ArgumentName: digest,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    HttpMethod: Post,
    Summary: Create a blob from a file. Returns the server file path.,
    RequestType: {
      CSharpType: byte[],
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: G,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: true,
      CSharpTypeWithoutNullability: byte[],
      CSharpTypeWithNullability: byte[]?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: [
      {
        CSharpType: byte[],
        IsArray: false,
        IsEnum: false,
        Properties: null,
        EnumValues: null,
        Namespace: G,
        IsDeprecated: false,
        GenerateJsonSerializerContextTypes: true,
        CSharpTypeWithoutNullability: byte[],
        CSharpTypeWithNullability: byte[]?,
        IsAnyOf: false,
        ConverterType: 
      }
    ],
    Converters: null,
    MethodName: CreateBlobAsync,
    NotAsyncMethodName: CreateBlob,
    FileNameWithoutExtension: G.ModelsClient.CreateBlob
  },
  {
    Id: MainConstructor,
    Namespace: G,
    ClassName: Api,
    BaseUrl: http://localhost:11434/api,
    Stream: false,
    Path: ,
    AuthorizationScheme: ,
    Properties: [
      {
        Id: ,
        Name: Completions,
        Type: {
          CSharpType: CompletionsClient,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: ,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: false,
          CSharpTypeWithoutNullability: CompletionsClient,
          CSharpTypeWithNullability: CompletionsClient?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Given a prompt, the model will generate a completion.,
        ConverterType: ,
        ParameterName: completions,
        ArgumentName: completions,
        ParameterDefaultValue: default
      },
      {
        Id: ,
        Name: Chat,
        Type: {
          CSharpType: ChatClient,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: ,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: false,
          CSharpTypeWithoutNullability: ChatClient,
          CSharpTypeWithNullability: ChatClient?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Given a list of messages comprising a conversation, the model will return a response.,
        ConverterType: ,
        ParameterName: chat,
        ArgumentName: chat,
        ParameterDefaultValue: default
      },
      {
        Id: ,
        Name: Embeddings,
        Type: {
          CSharpType: EmbeddingsClient,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: ,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: false,
          CSharpTypeWithoutNullability: EmbeddingsClient,
          CSharpTypeWithNullability: EmbeddingsClient?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Get a vector representation of a given input.,
        ConverterType: ,
        ParameterName: embeddings,
        ArgumentName: embeddings,
        ParameterDefaultValue: default
      },
      {
        Id: ,
        Name: Models,
        Type: {
          CSharpType: ModelsClient,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null,
          Namespace: ,
          IsDeprecated: false,
          GenerateJsonSerializerContextTypes: false,
          CSharpTypeWithoutNullability: ModelsClient,
          CSharpTypeWithNullability: ModelsClient?,
          IsAnyOf: false,
          ConverterType: 
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: List and describe the various models available.,
        ConverterType: ,
        ParameterName: models,
        ArgumentName: models,
        ParameterDefaultValue: default
      }
    ],
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    Summary: API Spec for Ollama API. Please see https://github.com/jmorganca/ollama/blob/main/docs/api.md for more details.,
    RequestType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: null,
    Converters: [
      global::OpenApiGenerator.JsonConverters.GenerateCompletionRequestFormatJsonConverter,
      global::OpenApiGenerator.JsonConverters.GenerateCompletionRequestFormatNullableJsonConverter,
      global::OpenApiGenerator.JsonConverters.GenerateChatCompletionRequestFormatJsonConverter,
      global::OpenApiGenerator.JsonConverters.GenerateChatCompletionRequestFormatNullableJsonConverter,
      global::OpenApiGenerator.JsonConverters.MessageRoleJsonConverter,
      global::OpenApiGenerator.JsonConverters.MessageRoleNullableJsonConverter,
      global::OpenApiGenerator.JsonConverters.CreateModelResponseStatusJsonConverter,
      global::OpenApiGenerator.JsonConverters.CreateModelResponseStatusNullableJsonConverter,
      global::OpenApiGenerator.JsonConverters.PullModelResponseStatusJsonConverter,
      global::OpenApiGenerator.JsonConverters.PullModelResponseStatusNullableJsonConverter,
      global::OpenApiGenerator.JsonConverters.PushModelResponseStatusJsonConverter,
      global::OpenApiGenerator.JsonConverters.PushModelResponseStatusNullableJsonConverter
    ],
    MethodName: MainConstructorAsync,
    NotAsyncMethodName: MainConstructor,
    FileNameWithoutExtension: G.Api
  },
  {
    Id: Constructors,
    Namespace: G,
    ClassName: CompletionsClient,
    BaseUrl: http://localhost:11434/api,
    Stream: false,
    Path: ,
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    Summary: Given a prompt, the model will generate a completion.,
    RequestType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: null,
    Converters: null,
    MethodName: ConstructorsAsync,
    NotAsyncMethodName: Constructors,
    FileNameWithoutExtension: G.CompletionsClient
  },
  {
    Id: Constructors,
    Namespace: G,
    ClassName: ChatClient,
    BaseUrl: http://localhost:11434/api,
    Stream: false,
    Path: ,
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    Summary: Given a list of messages comprising a conversation, the model will return a response.,
    RequestType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: null,
    Converters: null,
    MethodName: ConstructorsAsync,
    NotAsyncMethodName: Constructors,
    FileNameWithoutExtension: G.ChatClient
  },
  {
    Id: Constructors,
    Namespace: G,
    ClassName: EmbeddingsClient,
    BaseUrl: http://localhost:11434/api,
    Stream: false,
    Path: ,
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    Summary: Get a vector representation of a given input.,
    RequestType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: null,
    Converters: null,
    MethodName: ConstructorsAsync,
    NotAsyncMethodName: Constructors,
    FileNameWithoutExtension: G.EmbeddingsClient
  },
  {
    Id: Constructors,
    Namespace: G,
    ClassName: ModelsClient,
    BaseUrl: http://localhost:11434/api,
    Stream: false,
    Path: ,
    AuthorizationScheme: ,
    Properties: null,
    TargetFramework: netstandard2.0,
    JsonSerializerContext: ,
    GenerateJsonSerializerContextTypes: true,
    Summary: List and describe the various models available.,
    RequestType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    ResponseType: {
      CSharpType: ,
      IsArray: false,
      IsEnum: false,
      Properties: null,
      EnumValues: null,
      Namespace: ,
      IsDeprecated: false,
      GenerateJsonSerializerContextTypes: false,
      CSharpTypeWithoutNullability: ,
      CSharpTypeWithNullability: ?,
      IsAnyOf: false,
      ConverterType: 
    },
    AdditionalModels: null,
    AdditionalTypes: null,
    Converters: null,
    MethodName: ConstructorsAsync,
    NotAsyncMethodName: Constructors,
    FileNameWithoutExtension: G.ModelsClient
  }
]