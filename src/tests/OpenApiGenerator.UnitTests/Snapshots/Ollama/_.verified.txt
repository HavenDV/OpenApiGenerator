[
  {
    Id: GenerateCompletionRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: prompt,
        Name: Prompt,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The prompt to generate a response.
<br/>Example: Why is the sky blue?,
        ParameterName: prompt,
        ArgumentName: prompt,
        ParameterDefaultValue: default
      },
      {
        Id: images,
        Name: Images,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: (optional) a list of Base64-encoded images to include in the message (for multimodal models such as llava),
        ParameterName: images,
        ArgumentName: images,
        ParameterDefaultValue: default
      },
      {
        Id: system,
        Name: System,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: The system prompt to (overrides what is defined in the Modelfile).,
        ParameterName: system,
        ArgumentName: system,
        ParameterDefaultValue: default
      },
      {
        Id: template,
        Name: Template,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: The full prompt or prompt template (overrides what is defined in the Modelfile).,
        ParameterName: template,
        ArgumentName: template,
        ParameterDefaultValue: default
      },
      {
        Id: context,
        Name: Context,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: The context parameter returned from a previous request to [generateCompletion], this can be used to keep a short conversational memory.,
        ParameterName: context,
        ArgumentName: context,
        ParameterDefaultValue: default
      },
      {
        Id: options,
        Name: Options,
        Type: {
          CSharpType: RequestOptions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            num_keep,
            seed,
            num_predict,
            top_k,
            top_p,
            tfs_z,
            typical_p,
            repeat_last_n,
            temperature,
            repeat_penalty,
            presence_penalty,
            frequency_penalty,
            mirostat,
            mirostat_tau,
            mirostat_eta,
            penalize_newline,
            stop,
            numa,
            num_ctx,
            num_batch,
            num_gqa,
            num_gpu,
            main_gpu,
            low_vram,
            f16_kv,
            logits_all,
            vocab_only,
            use_mmap,
            use_mlock,
            embedding_only,
            rope_frequency_base,
            rope_frequency_scale,
            num_thread
          ],
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Additional model parameters listed in the documentation for the Modelfile such as `temperature`.,
        ParameterName: options,
        ArgumentName: options,
        ParameterDefaultValue: default
      },
      {
        Id: format,
        Name: Format,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Json
          ],
          EnumValues: [
            json
          ]
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The format to return a response in. Currently the only accepted value is json.

Enable JSON mode by setting the format parameter to json. This will structure the response as valid JSON.

Note: it's important to instruct the model to use JSON in the prompt. Otherwise, the model may generate large amounts whitespace.
,
        ParameterName: format,
        ArgumentName: format,
        ParameterDefaultValue: default
      },
      {
        Id: raw,
        Name: Raw,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
If `true` no formatting will be applied to the prompt and no context will be returned. 

You may choose to use the `raw` parameter if you are specifying a full templated prompt in your request to the API, and are managing history yourself.
,
        ParameterName: raw,
        ArgumentName: raw,
        ParameterDefaultValue: default
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: false,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: false
      },
      {
        Id: keep_alive,
        Name: KeepAlive,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
How long (in minutes) to keep the model loaded in memory.

- If set to a positive duration (e.g. 20), the model will stay loaded for the provided duration.
- If set to a negative duration (e.g. -1), the model will stay loaded indefinitely.
- If set to 0, the model will be unloaded immediately once finished.
- If not set, the model will stay loaded for 5 minutes by default
,
        ParameterName: keepAlive,
        ArgumentName: keepAlive,
        ParameterDefaultValue: default
      }
    ],
    Summary: Request class for the generate endpoint.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: GenerateCompletionRequest,
    ClassName: GenerateCompletionRequest,
    ExternalClassName: GenerateCompletionRequest,
    FileNameWithoutExtension: G.Models.GenerateCompletionRequest
  },
  {
    Id: format,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: json,
        Name: Json,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: json,
        ArgumentName: json,
        ParameterDefaultValue: default
      }
    ],
    Summary:
The format to return a response in. Currently the only accepted value is json.

Enable JSON mode by setting the format parameter to json. This will structure the response as valid JSON.

Note: it's important to instruct the model to use JSON in the prompt. Otherwise, the model may generate large amounts whitespace.
,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: Format,
    ClassName: Format,
    ExternalClassName: Format,
    FileNameWithoutExtension: G.Models.Format
  },
  {
    Id: RequestOptions,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: num_keep,
        Name: NumKeep,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Number of tokens to keep from the prompt.
,
        ParameterName: numKeep,
        ArgumentName: numKeep,
        ParameterDefaultValue: default
      },
      {
        Id: seed,
        Name: Seed,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Sets the random number seed to use for generation. Setting this to a specific number will make the model generate the same text for the same prompt. (Default: 0)
,
        ParameterName: seed,
        ArgumentName: seed,
        ParameterDefaultValue: default
      },
      {
        Id: num_predict,
        Name: NumPredict,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Maximum number of tokens to predict when generating text. (Default: 128, -1 = infinite generation, -2 = fill context)
,
        ParameterName: numPredict,
        ArgumentName: numPredict,
        ParameterDefaultValue: default
      },
      {
        Id: top_k,
        Name: TopK,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Reduces the probability of generating nonsense. A higher value (e.g. 100) will give more diverse answers, while a lower value (e.g. 10) will be more conservative. (Default: 40)
,
        ParameterName: topK,
        ArgumentName: topK,
        ParameterDefaultValue: default
      },
      {
        Id: top_p,
        Name: TopP,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Works together with top-k. A higher value (e.g., 0.95) will lead to more diverse text, while a lower value (e.g., 0.5) will generate more focused and conservative text. (Default: 0.9)
,
        ParameterName: topP,
        ArgumentName: topP,
        ParameterDefaultValue: default
      },
      {
        Id: tfs_z,
        Name: TfsZ,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Tail free sampling is used to reduce the impact of less probable tokens from the output. A higher value (e.g., 2.0) will reduce the impact more, while a value of 1.0 disables this setting. (default: 1)
,
        ParameterName: tfsZ,
        ArgumentName: tfsZ,
        ParameterDefaultValue: default
      },
      {
        Id: typical_p,
        Name: TypicalP,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Typical p is used to reduce the impact of less probable tokens from the output.
,
        ParameterName: typicalP,
        ArgumentName: typicalP,
        ParameterDefaultValue: default
      },
      {
        Id: repeat_last_n,
        Name: RepeatLastN,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Sets how far back for the model to look back to prevent repetition. (Default: 64, 0 = disabled, -1 = num_ctx)
,
        ParameterName: repeatLastN,
        ArgumentName: repeatLastN,
        ParameterDefaultValue: default
      },
      {
        Id: temperature,
        Name: Temperature,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The temperature of the model. Increasing the temperature will make the model answer more creatively. (Default: 0.8)
,
        ParameterName: temperature,
        ArgumentName: temperature,
        ParameterDefaultValue: default
      },
      {
        Id: repeat_penalty,
        Name: RepeatPenalty,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Sets how strongly to penalize repetitions. A higher value (e.g., 1.5) will penalize repetitions more strongly, while a lower value (e.g., 0.9) will be more lenient. (Default: 1.1)
,
        ParameterName: repeatPenalty,
        ArgumentName: repeatPenalty,
        ParameterDefaultValue: default
      },
      {
        Id: presence_penalty,
        Name: PresencePenalty,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.
,
        ParameterName: presencePenalty,
        ArgumentName: presencePenalty,
        ParameterDefaultValue: default
      },
      {
        Id: frequency_penalty,
        Name: FrequencyPenalty,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.
,
        ParameterName: frequencyPenalty,
        ArgumentName: frequencyPenalty,
        ParameterDefaultValue: default
      },
      {
        Id: mirostat,
        Name: Mirostat,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Enable Mirostat sampling for controlling perplexity. (default: 0, 0 = disabled, 1 = Mirostat, 2 = Mirostat 2.0)
,
        ParameterName: mirostat,
        ArgumentName: mirostat,
        ParameterDefaultValue: default
      },
      {
        Id: mirostat_tau,
        Name: MirostatTau,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Controls the balance between coherence and diversity of the output. A lower value will result in more focused and coherent text. (Default: 5.0)
,
        ParameterName: mirostatTau,
        ArgumentName: mirostatTau,
        ParameterDefaultValue: default
      },
      {
        Id: mirostat_eta,
        Name: MirostatEta,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Influences how quickly the algorithm responds to feedback from the generated text. A lower learning rate will result in slower adjustments, while a higher learning rate will make the algorithm more responsive. (Default: 0.1)
,
        ParameterName: mirostatEta,
        ArgumentName: mirostatEta,
        ParameterDefaultValue: default
      },
      {
        Id: penalize_newline,
        Name: PenalizeNewline,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Penalize newlines in the output. (Default: false)
,
        ParameterName: penalizeNewline,
        ArgumentName: penalizeNewline,
        ParameterDefaultValue: default
      },
      {
        Id: stop,
        Name: Stop,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence.,
        ParameterName: stop,
        ArgumentName: stop,
        ParameterDefaultValue: default
      },
      {
        Id: numa,
        Name: Numa,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Enable NUMA support. (Default: false)
,
        ParameterName: numa,
        ArgumentName: numa,
        ParameterDefaultValue: default
      },
      {
        Id: num_ctx,
        Name: NumCtx,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Sets the size of the context window used to generate the next token.
,
        ParameterName: numCtx,
        ArgumentName: numCtx,
        ParameterDefaultValue: default
      },
      {
        Id: num_batch,
        Name: NumBatch,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Sets the number of batches to use for generation. (Default: 1)
,
        ParameterName: numBatch,
        ArgumentName: numBatch,
        ParameterDefaultValue: default
      },
      {
        Id: num_gqa,
        Name: NumGqa,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The number of GQA groups in the transformer layer. Required for some models, for example it is 8 for `llama2:70b`.
,
        ParameterName: numGqa,
        ArgumentName: numGqa,
        ParameterDefaultValue: default
      },
      {
        Id: num_gpu,
        Name: NumGpu,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The number of layers to send to the GPU(s). On macOS it defaults to 1 to enable metal support, 0 to disable.
,
        ParameterName: numGpu,
        ArgumentName: numGpu,
        ParameterDefaultValue: default
      },
      {
        Id: main_gpu,
        Name: MainGpu,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The GPU to use for the main model. Default is 0.
,
        ParameterName: mainGpu,
        ArgumentName: mainGpu,
        ParameterDefaultValue: default
      },
      {
        Id: low_vram,
        Name: LowVram,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Enable low VRAM mode. (Default: false)
,
        ParameterName: lowVram,
        ArgumentName: lowVram,
        ParameterDefaultValue: default
      },
      {
        Id: f16_kv,
        Name: F16Kv,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Enable f16 key/value. (Default: false)
,
        ParameterName: f16Kv,
        ArgumentName: f16Kv,
        ParameterDefaultValue: default
      },
      {
        Id: logits_all,
        Name: LogitsAll,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Enable logits all. (Default: false)
,
        ParameterName: logitsAll,
        ArgumentName: logitsAll,
        ParameterDefaultValue: default
      },
      {
        Id: vocab_only,
        Name: VocabOnly,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Enable vocab only. (Default: false)
,
        ParameterName: vocabOnly,
        ArgumentName: vocabOnly,
        ParameterDefaultValue: default
      },
      {
        Id: use_mmap,
        Name: UseMmap,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Enable mmap. (Default: false)
,
        ParameterName: useMmap,
        ArgumentName: useMmap,
        ParameterDefaultValue: default
      },
      {
        Id: use_mlock,
        Name: UseMlock,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Enable mlock. (Default: false)
,
        ParameterName: useMlock,
        ArgumentName: useMlock,
        ParameterDefaultValue: default
      },
      {
        Id: embedding_only,
        Name: EmbeddingOnly,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Enable embedding only. (Default: false)
,
        ParameterName: embeddingOnly,
        ArgumentName: embeddingOnly,
        ParameterDefaultValue: default
      },
      {
        Id: rope_frequency_base,
        Name: RopeFrequencyBase,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The base of the rope frequency scale. (Default: 1.0)
,
        ParameterName: ropeFrequencyBase,
        ArgumentName: ropeFrequencyBase,
        ParameterDefaultValue: default
      },
      {
        Id: rope_frequency_scale,
        Name: RopeFrequencyScale,
        Type: {
          CSharpType: float,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The scale of the rope frequency. (Default: 1.0)
,
        ParameterName: ropeFrequencyScale,
        ArgumentName: ropeFrequencyScale,
        ParameterDefaultValue: default
      },
      {
        Id: num_thread,
        Name: NumThread,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Sets the number of threads to use during computation. By default, Ollama will detect this for optimal performance. It is recommended to set this value to the number of physical CPU cores your system has (as opposed to the logical number of cores).
,
        ParameterName: numThread,
        ArgumentName: numThread,
        ParameterDefaultValue: default
      }
    ],
    Summary: Additional model parameters listed in the documentation for the Modelfile such as `temperature`.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: RequestOptions,
    ClassName: RequestOptions,
    ExternalClassName: RequestOptions,
    FileNameWithoutExtension: G.Models.RequestOptions
  },
  {
    Id: ResponseFormat,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: null,
    Summary:
The format to return a response in. Currently the only accepted value is json.

Enable JSON mode by setting the format parameter to json. This will structure the response as valid JSON.

Note: it's important to instruct the model to use JSON in the prompt. Otherwise, the model may generate large amounts whitespace.
,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: ResponseFormat,
    ClassName: ResponseFormat,
    ExternalClassName: ResponseFormat,
    FileNameWithoutExtension: G.Models.ResponseFormat
  },
  {
    Id: GenerateCompletionResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Date on which a model was created.
<br/>Example: ,
        ParameterName: createdAt,
        ArgumentName: createdAt,
        ParameterDefaultValue: default
      },
      {
        Id: response,
        Name: Response,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The response for a given prompt with a provided model.
<br/>Example: The sky appears blue because of a phenomenon called Rayleigh scattering.,
        ParameterName: response,
        ArgumentName: response,
        ParameterDefaultValue: default
      },
      {
        Id: done,
        Name: Done,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Whether the response has completed.
<br/>Example: true,
        ParameterName: done,
        ArgumentName: done,
        ParameterDefaultValue: default
      },
      {
        Id: context,
        Name: Context,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<int>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
An encoding of the conversation used in this response, this can be sent in the next request to keep a conversational memory.

<br/>Example: [1, 2, 3],
        ParameterName: context,
        ArgumentName: context,
        ParameterDefaultValue: default
      },
      {
        Id: total_duration,
        Name: TotalDuration,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Time spent generating the response.
<br/>Example: 5589157167,
        ParameterName: totalDuration,
        ArgumentName: totalDuration,
        ParameterDefaultValue: default
      },
      {
        Id: load_duration,
        Name: LoadDuration,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Time spent in nanoseconds loading the model.
<br/>Example: 3013701500,
        ParameterName: loadDuration,
        ArgumentName: loadDuration,
        ParameterDefaultValue: default
      },
      {
        Id: prompt_eval_count,
        Name: PromptEvalCount,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Number of tokens in the prompt.
<br/>Example: 46,
        ParameterName: promptEvalCount,
        ArgumentName: promptEvalCount,
        ParameterDefaultValue: default
      },
      {
        Id: prompt_eval_duration,
        Name: PromptEvalDuration,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Time spent in nanoseconds evaluating the prompt.
<br/>Example: 1160282000,
        ParameterName: promptEvalDuration,
        ArgumentName: promptEvalDuration,
        ParameterDefaultValue: default
      },
      {
        Id: eval_count,
        Name: EvalCount,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Number of tokens the response.
<br/>Example: 113,
        ParameterName: evalCount,
        ArgumentName: evalCount,
        ParameterDefaultValue: default
      },
      {
        Id: eval_duration,
        Name: EvalDuration,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Time in nanoseconds spent generating the response.
<br/>Example: 1325948000,
        ParameterName: evalDuration,
        ArgumentName: evalDuration,
        ParameterDefaultValue: default
      }
    ],
    Summary: The response class for the generate endpoint.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: GenerateCompletionResponse,
    ClassName: GenerateCompletionResponse,
    ExternalClassName: GenerateCompletionResponse,
    FileNameWithoutExtension: G.Models.GenerateCompletionResponse
  },
  {
    Id: GenerateChatCompletionRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: messages,
        Name: Messages,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<Message>,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary: The messages of the chat, this can be used to keep a chat memory,
        ParameterName: messages,
        ArgumentName: messages,
        ParameterDefaultValue: default
      },
      {
        Id: format,
        Name: Format,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            Json
          ],
          EnumValues: [
            json
          ]
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The format to return a response in. Currently the only accepted value is json.

Enable JSON mode by setting the format parameter to json. This will structure the response as valid JSON.

Note: it's important to instruct the model to use JSON in the prompt. Otherwise, the model may generate large amounts whitespace.
,
        ParameterName: format,
        ArgumentName: format,
        ParameterDefaultValue: default
      },
      {
        Id: options,
        Name: Options,
        Type: {
          CSharpType: RequestOptions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            num_keep,
            seed,
            num_predict,
            top_k,
            top_p,
            tfs_z,
            typical_p,
            repeat_last_n,
            temperature,
            repeat_penalty,
            presence_penalty,
            frequency_penalty,
            mirostat,
            mirostat_tau,
            mirostat_eta,
            penalize_newline,
            stop,
            numa,
            num_ctx,
            num_batch,
            num_gqa,
            num_gpu,
            main_gpu,
            low_vram,
            f16_kv,
            logits_all,
            vocab_only,
            use_mmap,
            use_mlock,
            embedding_only,
            rope_frequency_base,
            rope_frequency_scale,
            num_thread
          ],
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Additional model parameters listed in the documentation for the Modelfile such as `temperature`.,
        ParameterName: options,
        ArgumentName: options,
        ParameterDefaultValue: default
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: false,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: false
      },
      {
        Id: keep_alive,
        Name: KeepAlive,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
How long (in minutes) to keep the model loaded in memory.

- If set to a positive duration (e.g. 20), the model will stay loaded for the provided duration.
- If set to a negative duration (e.g. -1), the model will stay loaded indefinitely.
- If set to 0, the model will be unloaded immediately once finished.
- If not set, the model will stay loaded for 5 minutes by default
,
        ParameterName: keepAlive,
        ArgumentName: keepAlive,
        ParameterDefaultValue: default
      }
    ],
    Summary: Request class for the chat endpoint.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: GenerateChatCompletionRequest,
    ClassName: GenerateChatCompletionRequest,
    ExternalClassName: GenerateChatCompletionRequest,
    FileNameWithoutExtension: G.Models.GenerateChatCompletionRequest
  },
  {
    Id: format,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: json,
        Name: Json,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: json,
        ArgumentName: json,
        ParameterDefaultValue: default
      }
    ],
    Summary:
The format to return a response in. Currently the only accepted value is json.

Enable JSON mode by setting the format parameter to json. This will structure the response as valid JSON.

Note: it's important to instruct the model to use JSON in the prompt. Otherwise, the model may generate large amounts whitespace.
,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: Format,
    ClassName: Format,
    ExternalClassName: Format,
    FileNameWithoutExtension: G.Models.Format
  },
  {
    Id: GenerateChatCompletionResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: message,
        Name: Message,
        Type: {
          CSharpType: Message?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            role,
            content,
            images
          ],
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: A message in the chat endpoint,
        ParameterName: message,
        ArgumentName: message,
        ParameterDefaultValue: default
      },
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: created_at,
        Name: CreatedAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Date on which a model was created.
<br/>Example: ,
        ParameterName: createdAt,
        ArgumentName: createdAt,
        ParameterDefaultValue: default
      },
      {
        Id: done,
        Name: Done,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Whether the response has completed.
<br/>Example: true,
        ParameterName: done,
        ArgumentName: done,
        ParameterDefaultValue: default
      },
      {
        Id: total_duration,
        Name: TotalDuration,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Time spent generating the response.
<br/>Example: 5589157167,
        ParameterName: totalDuration,
        ArgumentName: totalDuration,
        ParameterDefaultValue: default
      },
      {
        Id: load_duration,
        Name: LoadDuration,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Time spent in nanoseconds loading the model.
<br/>Example: 3013701500,
        ParameterName: loadDuration,
        ArgumentName: loadDuration,
        ParameterDefaultValue: default
      },
      {
        Id: prompt_eval_count,
        Name: PromptEvalCount,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Number of tokens in the prompt.
<br/>Example: 46,
        ParameterName: promptEvalCount,
        ArgumentName: promptEvalCount,
        ParameterDefaultValue: default
      },
      {
        Id: prompt_eval_duration,
        Name: PromptEvalDuration,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Time spent in nanoseconds evaluating the prompt.
<br/>Example: 1160282000,
        ParameterName: promptEvalDuration,
        ArgumentName: promptEvalDuration,
        ParameterDefaultValue: default
      },
      {
        Id: eval_count,
        Name: EvalCount,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Number of tokens the response.
<br/>Example: 113,
        ParameterName: evalCount,
        ArgumentName: evalCount,
        ParameterDefaultValue: default
      },
      {
        Id: eval_duration,
        Name: EvalDuration,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Time in nanoseconds spent generating the response.
<br/>Example: 1325948000,
        ParameterName: evalDuration,
        ArgumentName: evalDuration,
        ParameterDefaultValue: default
      }
    ],
    Summary: The response class for the chat endpoint.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: GenerateChatCompletionResponse,
    ClassName: GenerateChatCompletionResponse,
    ExternalClassName: GenerateChatCompletionResponse,
    FileNameWithoutExtension: G.Models.GenerateChatCompletionResponse
  },
  {
    Id: Message,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: role,
        Name: Role,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: true,
          Properties: [
            System,
            User,
            Assistant
          ],
          EnumValues: [
            system,
            user,
            assistant
          ]
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary: The role of the message,
        ParameterName: role,
        ArgumentName: role,
        ParameterDefaultValue: default
      },
      {
        Id: content,
        Name: Content,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The content of the message
<br/>Example: Why is the sky blue?,
        ParameterName: content,
        ArgumentName: content,
        ParameterDefaultValue: default
      },
      {
        Id: images,
        Name: Images,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<string?>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: (optional) a list of Base64-encoded images to include in the message (for multimodal models such as llava),
        ParameterName: images,
        ArgumentName: images,
        ParameterDefaultValue: default
      }
    ],
    Summary: A message in the chat endpoint,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: Message,
    ClassName: Message,
    ExternalClassName: Message,
    FileNameWithoutExtension: G.Models.Message
  },
  {
    Id: role,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: system,
        Name: System,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: system,
        ArgumentName: system,
        ParameterDefaultValue: default
      },
      {
        Id: user,
        Name: User,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: user,
        ArgumentName: user,
        ParameterDefaultValue: default
      },
      {
        Id: assistant,
        Name: Assistant,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: assistant,
        ArgumentName: assistant,
        ParameterDefaultValue: default
      }
    ],
    Summary: The role of the message,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: Role,
    ClassName: Role,
    ExternalClassName: Role,
    FileNameWithoutExtension: G.Models.Role
  },
  {
    Id: GenerateEmbeddingRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: model,
        Name: Model,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ParameterName: model,
        ArgumentName: model,
        ParameterDefaultValue: default
      },
      {
        Id: prompt,
        Name: Prompt,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
Text to generate embeddings for.
<br/>Example: Here is an article about llamas...,
        ParameterName: prompt,
        ArgumentName: prompt,
        ParameterDefaultValue: default
      },
      {
        Id: options,
        Name: Options,
        Type: {
          CSharpType: RequestOptions?,
          IsArray: false,
          IsEnum: false,
          Properties: [
            num_keep,
            seed,
            num_predict,
            top_k,
            top_p,
            tfs_z,
            typical_p,
            repeat_last_n,
            temperature,
            repeat_penalty,
            presence_penalty,
            frequency_penalty,
            mirostat,
            mirostat_tau,
            mirostat_eta,
            penalize_newline,
            stop,
            numa,
            num_ctx,
            num_batch,
            num_gqa,
            num_gpu,
            main_gpu,
            low_vram,
            f16_kv,
            logits_all,
            vocab_only,
            use_mmap,
            use_mlock,
            embedding_only,
            rope_frequency_base,
            rope_frequency_scale,
            num_thread
          ],
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Additional model parameters listed in the documentation for the Modelfile such as `temperature`.,
        ParameterName: options,
        ArgumentName: options,
        ParameterDefaultValue: default
      }
    ],
    Summary: Generate embeddings from a model.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: GenerateEmbeddingRequest,
    ClassName: GenerateEmbeddingRequest,
    ExternalClassName: GenerateEmbeddingRequest,
    FileNameWithoutExtension: G.Models.GenerateEmbeddingRequest
  },
  {
    Id: GenerateEmbeddingResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: embedding,
        Name: Embedding,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<double>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The embedding for the prompt.
<br/>Example: [0.5670403838157654, 0.009260174818336964, ...],
        ParameterName: embedding,
        ArgumentName: embedding,
        ParameterDefaultValue: default
      }
    ],
    Summary: Returns the embedding information.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: GenerateEmbeddingResponse,
    ClassName: GenerateEmbeddingResponse,
    ExternalClassName: GenerateEmbeddingResponse,
    FileNameWithoutExtension: G.Models.GenerateEmbeddingResponse
  },
  {
    Id: CreateModelRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: mario,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: modelfile,
        Name: Modelfile,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The contents of the Modelfile.
<br/>Example: FROM llama2\nSYSTEM You are mario from Super Mario Bros.,
        ParameterName: modelfile,
        ArgumentName: modelfile,
        ParameterDefaultValue: default
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: false,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: false
      }
    ],
    Summary: Create model request object.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateModelRequest,
    ClassName: CreateModelRequest,
    ExternalClassName: CreateModelRequest,
    FileNameWithoutExtension: G.Models.CreateModelRequest
  },
  {
    Id: CreateModelResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: status,
        Name: Status,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            CreatingSystemLayer,
            ParsingModelfile,
            Success
          ],
          EnumValues: [
            creating system layer,
            parsing modelfile,
            success
          ]
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Status creating the model,
        ParameterName: status,
        ArgumentName: status,
        ParameterDefaultValue: default
      }
    ],
    Summary: Response object for creating a model. When finished, `status` is `success`.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateModelResponse,
    ClassName: CreateModelResponse,
    ExternalClassName: CreateModelResponse,
    FileNameWithoutExtension: G.Models.CreateModelResponse
  },
  {
    Id: status,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: creating system layer,
        Name: CreatingSystemLayer,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: creatingSystemLayer,
        ArgumentName: creatingSystemLayer,
        ParameterDefaultValue: default
      },
      {
        Id: parsing modelfile,
        Name: ParsingModelfile,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: parsingModelfile,
        ArgumentName: parsingModelfile,
        ParameterDefaultValue: default
      },
      {
        Id: success,
        Name: Success,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: success,
        ArgumentName: success,
        ParameterDefaultValue: default
      }
    ],
    Summary: Status creating the model,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: Status,
    ClassName: Status,
    ExternalClassName: Status,
    FileNameWithoutExtension: G.Models.Status
  },
  {
    Id: CreateModelStatus,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: null,
    Summary: Status creating the model,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: CreateModelStatus,
    ClassName: CreateModelStatus,
    ExternalClassName: CreateModelStatus,
    FileNameWithoutExtension: G.Models.CreateModelStatus
  },
  {
    Id: ModelsResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: models,
        Name: Models,
        Type: {
          CSharpType: global::System.Collections.Generic.IList<Model>?,
          IsArray: true,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: List of models available locally.,
        ParameterName: models,
        ArgumentName: models,
        ParameterDefaultValue: default
      }
    ],
    Summary: Response class for the list models endpoint.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: ModelsResponse,
    ClassName: ModelsResponse,
    ExternalClassName: ModelsResponse,
    FileNameWithoutExtension: G.Models.ModelsResponse
  },
  {
    Id: Model,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: modified_at,
        Name: ModifiedAt,
        Type: {
          CSharpType: global::System.DateTime,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Model modification date.
<br/>Example: ,
        ParameterName: modifiedAt,
        ArgumentName: modifiedAt,
        ParameterDefaultValue: default
      },
      {
        Id: size,
        Name: Size,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Size of the model on disk.
<br/>Example: 7323310500,
        ParameterName: size,
        ArgumentName: size,
        ParameterDefaultValue: default
      }
    ],
    Summary: A model available locally.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: Model,
    ClassName: Model,
    ExternalClassName: Model,
    FileNameWithoutExtension: G.Models.Model
  },
  {
    Id: ModelInfoRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    Summary: Request class for the show model info endpoint.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: ModelInfoRequest,
    ClassName: ModelInfoRequest,
    ExternalClassName: ModelInfoRequest,
    FileNameWithoutExtension: G.Models.ModelInfoRequest
  },
  {
    Id: ModelInfo,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: license,
        Name: License,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The model's license.
<br/>Example: &lt;contents of license block&gt;,
        ParameterName: license,
        ArgumentName: license,
        ParameterDefaultValue: default
      },
      {
        Id: modelfile,
        Name: Modelfile,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The modelfile associated with the model.
<br/>Example: Modelfile generated by \"ollama show\"\n# To build a new Modelfile based on this one, replace the FROM line with:\n# FROM llama2:latest\n\nFROM /Users/username/.ollama/models/blobs/sha256:8daa9615cce30c259a9555b1cc250d461d1bc69980a274b44d7eda0be78076d8\nTEMPLATE \"\"\"[INST] {{ if and .First .System }}&lt;&lt;SYS&gt;&gt;{{ .System }}&lt;&lt;/SYS&gt;&gt;\n\n{{ end }}{{ .Prompt }} [/INST] \"\"\"\nSYSTEM \"\"\"\"\"\"\nPARAMETER stop [INST]\nPARAMETER stop [/INST]\nPARAMETER stop &lt;&lt;SYS&gt;&gt;\nPARAMETER stop &lt;&lt;/SYS&gt;&gt;\n",
        ParameterName: modelfile,
        ArgumentName: modelfile,
        ParameterDefaultValue: default
      },
      {
        Id: parameters,
        Name: Parameters,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The model parameters.
<br/>Example: stop [INST]\nstop [/INST]\nstop &lt;&lt;SYS&gt;&gt;\nstop &lt;&lt;/SYS&gt;&gt;,
        ParameterName: parameters,
        ArgumentName: parameters,
        ParameterDefaultValue: default
      },
      {
        Id: template,
        Name: Template,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The prompt template for the model.
<br/>Example: [INST] {{ if and .First .System }}&lt;&lt;SYS&gt;&gt;{{ .System }}&lt;&lt;/SYS&gt;&gt;\n\n{{ end }}{{ .Prompt }} [/INST],
        ParameterName: template,
        ArgumentName: template,
        ParameterDefaultValue: default
      }
    ],
    Summary: Details about a model including modelfile, template, parameters, license, and system prompt.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: ModelInfo,
    ClassName: ModelInfo,
    ExternalClassName: ModelInfo,
    FileNameWithoutExtension: G.Models.ModelInfo
  },
  {
    Id: CopyModelRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: source,
        Name: Source,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
Name of the model to copy.
<br/>Example: llama2:7b,
        ParameterName: source,
        ArgumentName: source,
        ParameterDefaultValue: default
      },
      {
        Id: destination,
        Name: Destination,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
Name of the new model.
<br/>Example: llama2-backup,
        ParameterName: destination,
        ArgumentName: destination,
        ParameterDefaultValue: default
      }
    ],
    Summary: Request class for copying a model.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: CopyModelRequest,
    ClassName: CopyModelRequest,
    ExternalClassName: CopyModelRequest,
    FileNameWithoutExtension: G.Models.CopyModelRequest
  },
  {
    Id: DeleteModelRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:13b,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    Summary: Request class for deleting a model.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: DeleteModelRequest,
    ClassName: DeleteModelRequest,
    ExternalClassName: DeleteModelRequest,
    FileNameWithoutExtension: G.Models.DeleteModelRequest
  },
  {
    Id: PullModelRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: insecure,
        Name: Insecure,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        IsDeprecated: false,
        Summary:
Allow insecure connections to the library. 

Only use this if you are pulling from your own library during development.

<br/>Default Value: false,
        ParameterName: insecure,
        ArgumentName: insecure,
        ParameterDefaultValue: false
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: false,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: false
      }
    ],
    Summary: Request class for pulling a model.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: PullModelRequest,
    ClassName: PullModelRequest,
    ExternalClassName: PullModelRequest,
    FileNameWithoutExtension: G.Models.PullModelRequest
  },
  {
    Id: PullModelResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: status,
        Name: Status,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            PullingManifest,
            DownloadingDigestname,
            VerifyingSha256Digest,
            WritingManifest,
            RemovingAnyUnusedLayers,
            Success
          ],
          EnumValues: [
            pulling manifest,
            downloading digestname,
            verifying sha256 digest,
            writing manifest,
            removing any unused layers,
            success
          ]
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Status pulling the model.
<br/>Example: pulling manifest,
        ParameterName: status,
        ArgumentName: status,
        ParameterDefaultValue: default
      },
      {
        Id: digest,
        Name: Digest,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
The model's digest.
<br/>Example: sha256:bc07c81de745696fdf5afca05e065818a8149fb0c77266fb584d9b2cba3711a,
        ParameterName: digest,
        ArgumentName: digest,
        ParameterDefaultValue: default
      },
      {
        Id: total,
        Name: Total,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Total size of the model.
<br/>Example: 2142590208,
        ParameterName: total,
        ArgumentName: total,
        ParameterDefaultValue: default
      },
      {
        Id: completed,
        Name: Completed,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
Total bytes transferred.
<br/>Example: 2142590208,
        ParameterName: completed,
        ArgumentName: completed,
        ParameterDefaultValue: default
      }
    ],
    Summary:
Response class for pulling a model. 

The first object is the manifest. Then there is a series of downloading responses. Until any of the download is completed, the `completed` key may not be included. 

The number of files to be downloaded depends on the number of layers specified in the manifest.
,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: PullModelResponse,
    ClassName: PullModelResponse,
    ExternalClassName: PullModelResponse,
    FileNameWithoutExtension: G.Models.PullModelResponse
  },
  {
    Id: status,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: pulling manifest,
        Name: PullingManifest,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: pullingManifest,
        ArgumentName: pullingManifest,
        ParameterDefaultValue: default
      },
      {
        Id: downloading digestname,
        Name: DownloadingDigestname,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: downloadingDigestname,
        ArgumentName: downloadingDigestname,
        ParameterDefaultValue: default
      },
      {
        Id: verifying sha256 digest,
        Name: VerifyingSha256Digest,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: verifyingSha256Digest,
        ArgumentName: verifyingSha256Digest,
        ParameterDefaultValue: default
      },
      {
        Id: writing manifest,
        Name: WritingManifest,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: writingManifest,
        ArgumentName: writingManifest,
        ParameterDefaultValue: default
      },
      {
        Id: removing any unused layers,
        Name: RemovingAnyUnusedLayers,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: removingAnyUnusedLayers,
        ArgumentName: removingAnyUnusedLayers,
        ParameterDefaultValue: default
      },
      {
        Id: success,
        Name: Success,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: success,
        ArgumentName: success,
        ParameterDefaultValue: default
      }
    ],
    Summary:
Status pulling the model.
<br/>Example: pulling manifest,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: Status,
    ClassName: Status,
    ExternalClassName: Status,
    FileNameWithoutExtension: G.Models.Status
  },
  {
    Id: PullModelStatus,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: null,
    Summary:
Status pulling the model.
<br/>Example: pulling manifest,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: PullModelStatus,
    ClassName: PullModelStatus,
    ExternalClassName: PullModelStatus,
    FileNameWithoutExtension: G.Models.PullModelStatus
  },
  {
    Id: PushModelRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The name of the model to push in the form of &lt;namespace&gt;/&lt;model&gt;:&lt;tag&gt;.
<br/>Example: mattw/pygmalion:latest,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      },
      {
        Id: insecure,
        Name: Insecure,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        IsDeprecated: false,
        Summary:
Allow insecure connections to the library. 

Only use this if you are pushing to your library during development.

<br/>Default Value: false,
        ParameterName: insecure,
        ArgumentName: insecure,
        ParameterDefaultValue: false
      },
      {
        Id: stream,
        Name: Stream,
        Type: {
          CSharpType: bool,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        DefaultValue: false,
        IsDeprecated: false,
        Summary:
If `false` the response will be returned as a single response object, otherwise the response will be streamed as a series of objects.

<br/>Default Value: false,
        ParameterName: stream,
        ArgumentName: stream,
        ParameterDefaultValue: false
      }
    ],
    Summary: Request class for pushing a model.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: PushModelRequest,
    ClassName: PushModelRequest,
    ExternalClassName: PushModelRequest,
    FileNameWithoutExtension: G.Models.PushModelRequest
  },
  {
    Id: PushModelResponse,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: status,
        Name: Status,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: true,
          Properties: [
            RetrievingManifest,
            StartingUpload,
            PushingManifest,
            Success
          ],
          EnumValues: [
            retrieving manifest,
            starting upload,
            pushing manifest,
            success
          ]
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: Status pushing the model.,
        ParameterName: status,
        ArgumentName: status,
        ParameterDefaultValue: default
      },
      {
        Id: digest,
        Name: Digest,
        Type: {
          CSharpType: string?,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
the model's digest
<br/>Example: sha256:bc07c81de745696fdf5afca05e065818a8149fb0c77266fb584d9b2cba3711a,
        ParameterName: digest,
        ArgumentName: digest,
        ParameterDefaultValue: default
      },
      {
        Id: total,
        Name: Total,
        Type: {
          CSharpType: int,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary:
total size of the model
<br/>Example: 2142590208,
        ParameterName: total,
        ArgumentName: total,
        ParameterDefaultValue: default
      }
    ],
    Summary: Response class for pushing a model.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: PushModelResponse,
    ClassName: PushModelResponse,
    ExternalClassName: PushModelResponse,
    FileNameWithoutExtension: G.Models.PushModelResponse
  },
  {
    Id: status,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    Style: Enumeration,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: retrieving manifest,
        Name: RetrievingManifest,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: retrievingManifest,
        ArgumentName: retrievingManifest,
        ParameterDefaultValue: default
      },
      {
        Id: starting upload,
        Name: StartingUpload,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: startingUpload,
        ArgumentName: startingUpload,
        ParameterDefaultValue: default
      },
      {
        Id: pushing manifest,
        Name: PushingManifest,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: pushingManifest,
        ArgumentName: pushingManifest,
        ParameterDefaultValue: default
      },
      {
        Id: success,
        Name: Success,
        Type: {
          CSharpType: ,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: false,
        IsDeprecated: false,
        Summary: ,
        ParameterName: success,
        ArgumentName: success,
        ParameterDefaultValue: default
      }
    ],
    Summary: Status pushing the model.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: Status,
    ClassName: Status,
    ExternalClassName: Status,
    FileNameWithoutExtension: G.Models.Status
  },
  {
    Id: PushModelStatus,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: null,
    Summary: Status pushing the model.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: PushModelStatus,
    ClassName: PushModelStatus,
    ExternalClassName: PushModelStatus,
    FileNameWithoutExtension: G.Models.PushModelStatus
  },
  {
    Id: ShowModelInfoRequest,
    AddTypeName: false,
    Parents: null,
    TargetFramework: netstandard2.0,
    Namespace: G,
    GenerateSuperTypeForJsonSerializerContext: false,
    Properties: [
      {
        Id: name,
        Name: Name,
        Type: {
          CSharpType: string,
          IsArray: false,
          IsEnum: false,
          Properties: null,
          EnumValues: null
        },
        IsRequired: true,
        IsDeprecated: false,
        Summary:
The model name. 

Model names follow a `model:tag` format. Some examples are `orca-mini:3b-q4_1` and `llama2:70b`. The tag is optional and, if not provided, will default to `latest`. The tag is used to identify a specific version.

<br/>Example: llama2:7b,
        ParameterName: name,
        ArgumentName: name,
        ParameterDefaultValue: default
      }
    ],
    Summary: Request class for the show model info endpoint.,
    IsDeprecated: false,
    AdditionalModels: null,
    Enumerations: null,
    Name: ShowModelInfoRequest,
    ClassName: ShowModelInfoRequest,
    ExternalClassName: ShowModelInfoRequest,
    FileNameWithoutExtension: G.Models.ShowModelInfoRequest
  }
]